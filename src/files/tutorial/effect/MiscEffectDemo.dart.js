// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.JSSyntaxRegExp = {"": ["_lib0_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = $.regExpMatchStart(m);
  t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 get$pattern: function() {
  return this._lib0_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"": ["pattern?", "str", "start?", "end", "_groups"],
 "super": "Object",
 group$1: function(index) {
  return $.index(this._groups, index);
},
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"": ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"": ["_re", "_str", "_lib0_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var next = this._lib0_next;
  this._lib0_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._lib0_next == null))
    return true;
  this._lib0_next = this._re.firstMatch$1(this._str);
  if (this._lib0_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$._DateImpl = {"": ["millisecondsSinceEpoch?", "isUtc"],
 "super": "Object",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1, t2, t3, y, m, d, h, min, sec, ms;
  t1 = new $._DateImpl_toString_fourDigits();
  t2 = new $._DateImpl_toString_threeDigits();
  t3 = new $._DateImpl_toString_twoDigits();
  y = t1.call$1(this.get$year());
  m = t3.call$1(this.get$month());
  d = t3.call$1(this.get$day());
  h = t3.call$1(this.get$hour());
  min = t3.call$1(this.get$minute());
  sec = t3.call$1(this.get$second());
  ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms) + 'Z';
  else
    return $.S(y) + '-' + $.S(m) + '-' + $.S(d) + ' ' + $.S(h) + ':' + $.S(min) + ':' + $.S(sec) + '.' + $.S(ms);
},
 add$1: function(duration) {
  return $.Date_Date$fromMillisecondsSinceEpoch($.add(this.millisecondsSinceEpoch, duration.get$inMilliseconds()), this.isUtc);
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.abs(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 _DateImpl$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 is$Date: true
};

$$.ArgumentError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.RangeError = {"": ["message"],
 "super": "ArgumentError",
 toString$0: function() {
  return 'RangeError: ' + $.S(this.message);
},
 is$Exception: true
};

$$.IllegalArgumentException = {"": ["message"],
 "super": "ArgumentError"
};

$$.NoSuchMethodError = {"": ["_receiver", "_memberName", "_arguments", "_namedArguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3, t4, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0))
      $.add$1(t1.sb_1, ', ');
    t3 = t1.sb_1;
    t4 = t1.i_2;
    if (t4 !== (t4 | 0))
      throw $.iae(t4);
    if (t4 < 0 || t4 >= t2.length)
      throw $.ioore(t4);
    $.add$1(t3, $.NoSuchMethodError_safeToString(t2[t4]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  actualParameters = $.toString(t1.sb_1);
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  for (i = 0; i < t2.length; ++i) {
    if (i > 0)
      $.add$1(t1.sb_1, ', ');
    t3 = t1.sb_1;
    if (i >= t2.length)
      throw $.ioore(i);
    $.add$1(t3, t2[i]);
  }
  formalParameters = $.toString(t1.sb_1);
  t2 = this._memberName;
  return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer('');
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0))
            $.add$1(t1.sb_1, ', ');
          $.add$1(t1.sb_1, $.NoSuchMethodError_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return 'NoSuchMethodError : method not found: \'' + $.S(this._memberName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(t1.sb_1) + ']';
      else {
        actualParameters = $.toString(t1.sb_1);
        t1.sb_1 = $.StringBuffer_StringBuffer('');
        for (i = 0; $.ltB(i, $.get$length(t2)); ++i) {
          if (i > 0)
            $.add$1(t1.sb_1, ', ');
          $.add$1(t1.sb_1, $.index(t2, i));
        }
        formalParameters = $.toString(t1.sb_1);
        t2 = this._memberName;
        return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
      }
  }
}
};

$$.UnsupportedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'Unsupported operation: ' + $.S(this.get$message());
}
};

$$.UnimplementedError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? 'UnimplementedError: ' + $.S(t1) : 'UnimplementedError';
},
 is$Exception: true
};

$$.StateError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'Bad state: ' + this.message;
}
};

$$.StackOverflowError = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$._ExceptionImplementation = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
},
 is$Exception: true
};

$$.FormatException = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'FormatException: ' + $.S(this.message);
},
 is$Exception: true
};

$$.NullPointerException = {"": ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
},
 is$Exception: true
};

$$.IllegalJSRegExpException = {"": ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
},
 is$Exception: true
};

$$.RuntimeError = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
},
 is$Exception: true
};

$$.FutureNotCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future has not been completed';
},
 is$Exception: true
};

$$.FutureAlreadyCompleteException = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Exception: future already completed';
},
 is$Exception: true
};

$$.FutureUnhandledException = {"": ["source", "stackTrace?"],
 "super": "Object",
 source$1: function(arg0) { return this.source.call$1(arg0); },
 toString$0: function() {
  return 'FutureUnhandledException: exception while executing Future\n  ' + $.S($.replaceAll($.toString(this.source), '\n', '\n  ')) + '\n' + 'original stack trace:\n  ' + $.S($.replaceAll($.toString(this.stackTrace), '\n', '\n  '));
},
 is$Exception: true
};

$$._FutureImpl = {"": ["_isComplete", "_lib_value", "_exception", "_stackTrace", "_exceptionHandled", "_successListeners", "_exceptionHandlers", "_completionListeners"],
 "super": "Object",
 get$value: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  var t1 = this._exception;
  if (!(t1 == null))
    throw $.$$throw($.FutureUnhandledException$(t1, this.get$stackTrace()));
  return this._lib_value;
},
 get$exception: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._exception;
},
 get$stackTrace: function() {
  if (this.get$isComplete() !== true)
    throw $.$$throw($.FutureNotCompleteException$());
  return this._stackTrace;
},
 get$isComplete: function() {
  return this._isComplete;
},
 get$hasValue: function() {
  return this.get$isComplete() === true && this._exception == null;
},
 then$1: function(onSuccess) {
  if (this.get$hasValue() === true)
    onSuccess.call$1(this.get$value());
  else if (this.get$isComplete() !== true)
    this._successListeners.push(onSuccess);
  else if (this._exceptionHandled !== true)
    throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
},
 handleException$1: function(onException) {
  var t1;
  if (this._exceptionHandled === true)
    return;
  if (this._isComplete) {
    t1 = this._exception;
    if (!(t1 == null))
      this._exceptionHandled = onException.call$1(t1);
  } else
    this._exceptionHandlers.push(onException);
},
 _complete$0: function(exception) {
  var t1, handler, listener, listener0;
  this._isComplete = true;
  try {
    if (!(this._exception == null))
      for (t1 = $.iterator(this._exceptionHandlers); t1.get$hasNext() === true;) {
        handler = t1.next$0();
        if ($.eqB(handler.call$1(this._exception), true)) {
          this._exceptionHandled = true;
          break;
        }
      }
    if (this.get$hasValue() === true)
      for (t1 = $.iterator(this._successListeners); t1.get$hasNext() === true;) {
        listener = t1.next$0();
        listener.call$1(this.get$value());
      }
    else if (this._exceptionHandled !== true && this._successListeners.length > 0)
      throw $.$$throw($.FutureUnhandledException$(this._exception, this.get$stackTrace()));
  } finally {
    for (t1 = $.iterator(this._completionListeners); t1.get$hasNext() === true;) {
      listener0 = t1.next$0();
      try {
        listener0.call$1(this);
      } catch (exception) {
        $.unwrapException(exception);
      }

    }
  }
},
 _setValue$1: function(value) {
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._lib_value = value;
  this._complete$0();
},
 _setException$2: function(exception, stackTrace) {
  if (exception == null)
    throw $.$$throw($.ArgumentError$(null));
  if (this._isComplete)
    throw $.$$throw($.FutureAlreadyCompleteException$());
  this._exception = exception;
  this._stackTrace = stackTrace;
  this._complete$0();
},
 transform$1: function(transformation) {
  var completer = $.Completer_Completer('dynamic');
  this._forwardException$2(this, completer);
  this.then$1(new $._FutureImpl_transform_anon(completer, transformation));
  return completer.get$future();
},
 get$transform: function() { return new $.BoundClosure(this, 'transform$1'); },
 _forwardException$2: function(future, completer) {
  future.handleException$1(new $._FutureImpl__forwardException_anon(completer, future));
}
};

$$._CompleterImpl = {"": ["_futureImpl"],
 "super": "Object",
 get$future: function() {
  return this._futureImpl;
},
 complete$1: function(value) {
  this._futureImpl._setValue$1(value);
},
 completeException$2: function(exception, stackTrace) {
  this._futureImpl._setException$2(exception, stackTrace);
},
 completeException$1: function(exception) {
  return this.completeException$2(exception,null)
}
};

$$._HashMapImpl = {"": ["_keys?", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1, t3, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  t1 = $.get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  t3 = $.get$length(this._keys);
  if (t3 !== (t3 | 0))
    return this._probeForAdding$1$bailout(2, key, t3, t1);
  hash = (t1 & t3 - 1) >>> 0;
  for (insertionIndex = -1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._probeForAdding$1$bailout(3, hash, numberOfProbes, t1, key, insertionIndex);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && $.CTC1 === existingKey)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(4, insertionIndex, hash, key, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      key = env0;
      break;
    case 3:
      insertionIndex = env4;
      key = env3;
      t1 = env2;
      numberOfProbes = env1;
      hash = env0;
      break;
    case 4:
      numberOfProbes0 = env3;
      key = env2;
      hash = env1;
      insertionIndex = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.CTC);
      t1 = $.get$hashCode(key);
    case 1:
      state0 = 0;
      t3 = $.get$length(this._keys);
    case 2:
      state0 = 0;
      hash = $.and(t1, $.sub(t3, 1));
      insertionIndex = -1;
      numberOfProbes = 1;
    default:
      var t1, key, t3, hash, insertionIndex, numberOfProbes, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
            case 3:
              state0 = 0;
              existingKey = $.index(t1, hash);
              if (existingKey == null) {
                if ($.ltB(insertionIndex, 0))
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if ($.ltB(insertionIndex, 0) && $.CTC1 === existingKey)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
            case 4:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  hash = $.and($.get$hashCode(key), $.sub($.get$length(this._keys), 1));
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.get$length(this._keys));
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, numberOfFree;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1($.mul($.get$length(this._keys), 2));
    return;
  }
  numberOfFree = $.sub($.sub($.get$length(this._keys), newNumberOfEntries), this._numberOfDeleted);
  if ($.gtB(this._numberOfDeleted, numberOfFree))
    this._grow$1($.get$length(this._keys));
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, t4, t5, i, key, value, newIndex;
  capacity = $.get$length(this._keys);
  if (typeof capacity !== 'number')
    return this._grow$1$bailout(1, newCapacity, capacity);
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  if (typeof oldKeys !== 'string' && (typeof oldKeys !== 'object' || oldKeys === null || oldKeys.constructor !== Array && !oldKeys.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(2, newCapacity, capacity, oldKeys);
  oldValues = this._values;
  if (typeof oldValues !== 'string' && (typeof oldValues !== 'object' || oldValues === null || oldValues.constructor !== Array && !oldValues.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(3, newCapacity, oldValues, capacity, oldKeys);
  t4 = $._ListImpl_List(newCapacity, 'dynamic');
  $.setRuntimeTypeInfo(t4, {runtimeType: 'List<dynamic>'});
  this._keys = t4;
  t4 = $._ListImpl_List(newCapacity, $.getRuntimeTypeInfo(this).V);
  t5 = $.getRuntimeTypeInfo(this).V;
  $.setRuntimeTypeInfo(t4, {runtimeType: 'List<' + t5 + '>', 'E': t5});
  this._values = t4;
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC1)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    $.indexSet(this._keys, newIndex, key);
    $.indexSet(this._values, newIndex, value);
  }
  this._numberOfDeleted = 0;
},
 _grow$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      capacity = env1;
      newCapacity = env0;
      break;
    case 2:
      oldKeys = env2;
      capacity = env1;
      newCapacity = env0;
      break;
    case 3:
      oldKeys = env3;
      capacity = env2;
      oldValues = env1;
      newCapacity = env0;
      break;
  }
  switch (state0) {
    case 0:
      capacity = $.get$length(this._keys);
    case 1:
      state0 = 0;
      this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
      oldKeys = this._keys;
    case 2:
      state0 = 0;
      oldValues = this._values;
    case 3:
      var capacity, newCapacity, oldKeys, oldValues, t4, t5, i, key, value, newIndex;
      state0 = 0;
      t4 = $._ListImpl_List(newCapacity, 'dynamic');
      $.setRuntimeTypeInfo(t4, {runtimeType: 'List<dynamic>'});
      this._keys = t4;
      t4 = $._ListImpl_List(newCapacity, $.getRuntimeTypeInfo(this).V);
      t5 = $.getRuntimeTypeInfo(this).V;
      $.setRuntimeTypeInfo(t4, {runtimeType: 'List<' + t5 + '>', 'E': t5});
      this._values = t4;
      for (i = 0; $.ltB(i, capacity); ++i) {
        key = $.index(oldKeys, i);
        if (key == null || key === $.CTC1)
          continue;
        value = $.index(oldValues, i);
        newIndex = this._probeForAdding$1(key);
        $.indexSet(this._keys, newIndex, key);
        $.indexSet(this._values, newIndex, value);
      }
      this._numberOfDeleted = 0;
  }
},
 clear$0: function() {
  var length$, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  length$ = $.get$length(this._keys);
  if (typeof length$ !== 'number')
    return this.clear$0$bailout(1, length$);
  for (i = 0; i < length$; ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 clear$0$bailout: function(state0, length$) {
  var i;
  for (i = 0; $.ltB(i, length$); ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 operator$indexSet$2: function(key, value) {
  var index;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  if ($.index(this._keys, index) == null || $.index(this._keys, index) === $.CTC1)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  $.indexSet(this._keys, index, key);
  $.indexSet(this._values, index, value);
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  return $.index(this._values, index);
},
 putIfAbsent$2: function(key, ifAbsent) {
  var index, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0))
    return $.index(this._values, index);
  value = ifAbsent.call$0();
  this.operator$indexSet$2(key, value);
  return value;
},
 remove$1: function(key) {
  var index, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    this._numberOfEntries = $.sub(this._numberOfEntries, 1);
    value = $.index(this._values, index);
    $.indexSet(this._values, index, null);
    $.indexSet(this._keys, index, $.CTC1);
    this._numberOfDeleted = $.add(this._numberOfDeleted, 1);
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, key;
  length$ = $.get$length(this._keys);
  if (typeof length$ !== 'number')
    return this.forEach$1$bailout(1, f, length$);
  for (i = 0; i < length$; ++i) {
    key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC1))
      f.call$2(key, $.index(this._values, i));
  }
},
 forEach$1$bailout: function(state0, f, length$) {
  var i, key;
  for (i = 0; $.ltB(i, length$); ++i) {
    key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC1))
      f.call$2(key, $.index(this._values, i));
  }
},
 get$keys: function() {
  var t1, list, t2;
  t1 = {};
  list = $._ListImpl_List($.get$length(this), $.getRuntimeTypeInfo(this).K);
  t2 = $.getRuntimeTypeInfo(this).K;
  $.setRuntimeTypeInfo(list, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  t1.i_10 = 0;
  this.forEach$1(new $._HashMapImpl_keys__(t1, list));
  return list;
},
 get$values: function() {
  var t1, list, t2;
  t1 = {};
  list = $._ListImpl_List($.get$length(this), $.getRuntimeTypeInfo(this).V);
  t2 = $.getRuntimeTypeInfo(this).V;
  $.setRuntimeTypeInfo(list, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  t1.i_1 = 0;
  this.forEach$1(new $._HashMapImpl_values__(list, t1));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  var t1, t2;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  t1 = $._ListImpl_List(8, 'dynamic');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'});
  this._keys = t1;
  t1 = $._ListImpl_List(8, $.getRuntimeTypeInfo(this).V);
  t2 = $.getRuntimeTypeInfo(this).V;
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  this._values = t1;
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"": [],
 "super": "Object"
};

$$._KeyValuePair = {"": ["key?", "value="],
 "super": "Object"
};

$$._LinkedHashMapImpl = {"": ["_lib_list", "_map"],
 "super": "Object",
 operator$indexSet$2: function(key, value) {
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    $.addLast(this._lib_list, $._KeyValuePair$(key, value, $.getRuntimeTypeInfo(this).K, $.getRuntimeTypeInfo(this).V));
    $.indexSet(this._map, key, this._lib_list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 putIfAbsent$2: function(key, ifAbsent) {
  var value = this.operator$index$1(key);
  if (this.operator$index$1(key) == null && this._map.containsKey$1(key) !== true) {
    value = ifAbsent.call$0();
    this.operator$indexSet$2(key, value);
  }
  return value;
},
 get$keys: function() {
  var t1, list, t2;
  t1 = {};
  list = $._ListImpl_List($.get$length(this), $.getRuntimeTypeInfo(this).K);
  t2 = $.getRuntimeTypeInfo(this).K;
  $.setRuntimeTypeInfo(list, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  t1.index_10 = 0;
  $.forEach(this._lib_list, new $._LinkedHashMapImpl_keys__(list, t1));
  return list;
},
 get$values: function() {
  var t1, list, t2;
  t1 = {};
  list = $._ListImpl_List($.get$length(this), $.getRuntimeTypeInfo(this).V);
  t2 = $.getRuntimeTypeInfo(this).V;
  $.setRuntimeTypeInfo(list, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  t1.index_1 = 0;
  $.forEach(this._lib_list, new $._LinkedHashMapImpl_values__(list, t1));
  return list;
},
 forEach$1: function(f) {
  $.forEach(this._lib_list, new $._LinkedHashMapImpl_forEach__(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 clear$0: function() {
  $.clear(this._map);
  $.clear(this._lib_list);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  var t1, t2, t3;
  t1 = $.getRuntimeTypeInfo(this).K;
  t2 = $.getRuntimeTypeInfo(this);
  this._map = $.HashMap_HashMap(t1, 'DoubleLinkedQueueEntry<_KeyValuePair<' + t2.K +', ' + t2.V +'>>');
  t3 = $.getRuntimeTypeInfo(this);
  this._lib_list = $.DoubleLinkedQueue$('_KeyValuePair<' + t3.K +', ' + t3.V +'>');
},
 is$Map: function() { return true; }
};

$$.Object = {"": [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
},
 get$runtimeType: function() {
  return $.getOrCreateCachedRuntimeType($.getRuntimeTypeString(this));
}
};

$$.DoubleLinkedQueueEntry = {"": ["_previous=", "_next=", "_lib_element?"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e, $.getRuntimeTypeInfo(this).E)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._lib_element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._lib_element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._lib_element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"": ["_previous", "_next", "_lib_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"": ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel.get$_previous().remove$0();
},
 removeFirst$0: function() {
  return this._sentinel.get$_next().remove$0();
},
 get$last: function() {
  return this._sentinel.get$_previous().get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length__(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1, t2;
  t1 = this._sentinel;
  t2 = t1.get$_next();
  return t2 == null ? t1 == null : t2 === t1;
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 clear$0: function() {
  var t1 = this._sentinel;
  t1.set$_next(t1);
  t1 = this._sentinel;
  t1.set$_previous(t1);
},
 forEach$1: function(f) {
  var entry, t1, nextEntry;
  entry = this._sentinel.get$_next();
  for (; t1 = this._sentinel, !(entry == null ? t1 == null : entry === t1); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_lib_element());
  }
},
 filter$1: function(f) {
  var other, entry, t1, nextEntry;
  other = $.Queue_Queue($.getRuntimeTypeInfo(this).E);
  entry = this._sentinel.get$_next();
  for (; t1 = this._sentinel, !(entry == null ? t1 == null : entry === t1); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_lib_element()) === true)
      $.addLast(other, entry.get$_lib_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel, $.getRuntimeTypeInfo(this).E);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$($.getRuntimeTypeInfo(this).E);
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"": ["_sentinel", "_currentEntry"],
 "super": "Object",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.Sequence = {"": [],
 "super": "Object"
};

$$.SequenceCollection = {"": [],
 "super": "Object",
 iterator$0: function() {
  return $.SequenceIterator$(this.get$sequence(), 'dynamic');
},
 forEach$1: function(f) {
  var i;
  for (i = 0; $.ltB(i, $.get$length(this)); ++i)
    f.call$1(this.operator$index$1(i));
},
 contains$1: function(value) {
  var i;
  for (i = 0; $.ltB(i, $.get$length(this.get$sequence())); ++i)
    if ($.eqB($.index(this.get$sequence(), i), value))
      return true;
  return false;
},
 filter$1: function(f) {
  var result, i, element;
  result = [];
  for (i = 0; $.ltB(i, $.get$length(this)); ++i) {
    element = this.operator$index$1(i);
    if (f.call$1(element) === true)
      result.push(element);
  }
  return result;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 is$Collection: function() { return true; }
};

$$.SequenceList = {"": ["sequence?"],
 "super": "SequenceCollection",
 get$length: function() {
  return $.get$length(this.sequence);
},
 operator$index$1: function(index) {
  return this.sequence.operator$index$1(index);
},
 indexOf$2: function(value, start) {
  var t1, i;
  if (typeof start !== 'number')
    return this.indexOf$2$bailout(1, value, start);
  for (t1 = this.sequence, i = start; $.ltB(i, $.get$length(t1)); ++i)
    if ($.eqB(t1.operator$index$1(i), value))
      return i;
  return -1;
},
 indexOf$2$bailout: function(state0, value, start) {
  var t1, i;
  for (t1 = this.sequence, i = start; $.ltB(i, $.get$length(t1)); i = $.add(i, 1))
    if ($.eqB(t1.operator$index$1(i), value))
      return i;
  return -1;
},
 indexOf$1: function(value) {
  return this.indexOf$2(value,0)
},
 get$last: function() {
  var t1 = this.sequence;
  return t1.operator$index$1($.sub($.get$length(t1), 1));
},
 getRange$2: function(start, length$) {
  var result, t1, i;
  if (typeof start !== 'number')
    return this.getRange$2$bailout(1, start, length$);
  if (typeof length$ !== 'number')
    return this.getRange$2$bailout(1, start, length$);
  result = [];
  for (t1 = this.sequence, i = 0; i < length$; ++i)
    result.push(t1.operator$index$1(start + i));
  return result;
},
 getRange$2$bailout: function(state0, start, length$) {
  var result, t1, i;
  result = [];
  for (t1 = this.sequence, i = 0; $.ltB(i, length$); ++i)
    result.push(t1.operator$index$1($.add(start, i)));
  return result;
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot modify an unmodifiable list'));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$('Cannot change the length of an unmodifiable list'));
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to an unmodifiable list'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to an unmodifiable list'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to an unmodifiable list'));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot clear an unmodifiable list'));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot remove in an unmodifiable list'));
},
 removeRange$2: function(start, length$) {
  throw $.$$throw($.UnsupportedError$('Cannot remove in an unmodifiable list'));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.SequenceIterator = {"": ["_sequence", "_position"],
 "super": "Object",
 get$hasNext: function() {
  return $.lt(this._position, $.get$length(this._sequence));
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() === true) {
    t1 = this._sequence;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.next$0$bailout(1, t1);
    t3 = this._position;
    this._position = t3 + 1;
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  }
  throw $.$$throw($.StateError$('No more elements'));
},
 next$0$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      var t1, t3;
      if (state0 === 1 || state0 === 0 && this.get$hasNext() === true)
        switch (state0) {
          case 0:
            t1 = this._sequence;
          case 1:
            state0 = 0;
            t3 = this._position;
            this._position = t3 + 1;
            return $.index(t1, t3);
        }
      throw $.$$throw($.StateError$('No more elements'));
  }
}
};

$$._HashSetImpl = {"": ["_backingMap?"],
 "super": "Object",
 clear$0: function() {
  $.clear(this._backingMap);
},
 add$1: function(value) {
  $.indexSet(this._backingMap, value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.forEach(collection, new $._HashSetImpl_addAll__(this));
},
 removeAll$1: function(collection) {
  $.forEach(collection, new $._HashSetImpl_removeAll__(this));
},
 forEach$1: function(f) {
  $.forEach(this._backingMap, new $._HashSetImpl_forEach__(f));
},
 filter$1: function(f) {
  var result = $.Set_Set($.getRuntimeTypeInfo(this).E);
  $.forEach(this._backingMap, new $._HashSetImpl_filter__(result, f));
  return result;
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._backingMap);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$length: function() {
  return $.get$length(this._backingMap);
},
 iterator$0: function() {
  return $._HashSetIterator$(this, $.getRuntimeTypeInfo(this).E);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$($.getRuntimeTypeInfo(this).E, $.getRuntimeTypeInfo(this).E);
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"": ["_entries", "_nextValidIndex"],
 "super": "Object",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  if ($.geB(t1, $.get$length(t2)))
    return false;
  if ($.index(t2, this._nextValidIndex) === $.CTC1)
    this._advance$0();
  return $.lt(this._nextValidIndex, $.get$length(t2));
},
 next$0: function() {
  var t1, t3, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._nextValidIndex;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  res = t1[t3];
  this._advance$0();
  return res;
},
 next$0$bailout: function(state0, t1) {
  var res = $.index(t1, this._nextValidIndex);
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._advance$0$bailout(1, t1);
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC1);
},
 _advance$0$bailout: function(state0, t1) {
  var length$, t2, entry;
  length$ = $.get$length(t1);
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if ($.geB(t2, length$))
      break;
    entry = $.index(t1, this._nextValidIndex);
  } while (entry == null || entry === $.CTC1);
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._StringBufferImpl = {"": ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return this._length === 0;
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 add$1: function(obj) {
  var str = $.toString(obj);
  if (str == null || $.get$isEmpty(str) === true)
    return this;
  $.add$1(this._buffer, str);
  this._length = $.add(this._length, $.get$length(str));
  return this;
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.iterator(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  var t1, t2;
  t1 = $._ListImpl_List(null, 'String');
  t2 = 'String';
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  this._buffer = t1;
  this._length = 0;
  return this;
},
 toString$0: function() {
  if ($.get$length(this._buffer) === 0)
    return '';
  if ($.get$length(this._buffer) === 1)
    return $.index(this._buffer, 0);
  var result = $.stringJoinUnchecked($._StringImpl__toJsStringArray(this._buffer), '');
  $.clear(this._buffer);
  $.add$1(this._buffer, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ListIterator = {"": ["i", "list"],
 "super": "Object",
 get$hasNext: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
}
};

$$.StackTrace = {"": ["stack"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.stack;
  return !(t1 == null) ? t1 : '';
}
};

$$.Closure = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.TypeImpl = {"": ["typeName"],
 "super": "Object",
 toString$0: function() {
  return this.typeName;
}
};

$$.ConstantMap = {"": ["length?", "_jsObject", "_lib2_keys?"],
 "super": "Object",
 containsKey$1: function(key) {
  if ($.eqB(key, '__proto__'))
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  $.forEach(this._lib2_keys, new $.ConstantMap_forEach_anon(this, f));
},
 get$keys: function() {
  return this._lib2_keys;
},
 get$values: function() {
  var result = [];
  $.forEach(this._lib2_keys, new $.ConstantMap_values_anon(result, this));
  return result;
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot modify unmodifiable Map'));
},
 operator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this._throwUnmodifiable$0();
},
 remove$1: function(key) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"": ["_tag?", "_tags", "_set?"],
 "super": "Object"
};

$$.StringMatch = {"": ["start?", "str", "pattern?"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$.ViewDemo = {"": ["_dir?", "_dirs", "_dirviews"],
 "super": "Object",
 circle$2: function(text, anchor) {
  var t1 = $.TextView$(text);
  t1.set$width(80);
  t1.set$height(80);
  t1.get$profile().set$anchorView(anchor);
  t1.get$profile().set$location('center center');
  $.add$1(t1.get$classes(), 'dashed-block');
  t1.get$style().set$lineHeight('78px');
  t1.get$style().set$borderRadius('40px');
  t1.get$style().set$fontSize('12px');
  t1.get$style().set$color('#666');
  t1.get$style().set$borderColor('#666');
  return t1;
},
 select$1: function(dir) {
  var t1, t2, j, t3;
  if ($.eqB(this._dir, dir))
    return;
  this._dir = dir;
  for (t1 = this._dirviews, t2 = this._dirs, j = 0; j < 4; ++j) {
    if (j >= t1.length)
      throw $.ioore(j);
    t3 = t1[j];
    if (j >= t2.length)
      throw $.ioore(j);
    this.updateStyle$2(t3, t2[j]);
  }
},
 updateStyle$2: function(v, dir) {
  if ($.eqB(dir, this._dir))
    $.add$1(v.get$classes(), 'checked');
  else
    v.get$classes().remove$1('checked');
},
 radio$1: function(dir) {
  var v, c, t1, t2;
  v = $.View$();
  v.set$width(16);
  v.set$height(16);
  v.get$profile().set$location('center center');
  v.get$style().set$boxSizing('border-box');
  v.get$style().set$border('1px solid #888');
  v.get$style().set$borderRadius('2px');
  $.add$1(v.get$on().get$click(), new $.ViewDemo_radio_anon(dir, this));
  c = $.View$();
  c.set$width(24);
  c.set$height(24);
  c.get$profile().set$location('center center');
  c.get$style().set$boxSizing('border-box');
  v.addChild$1(c);
  t1 = this._dirviews;
  t2 = $.indexOf$1(this._dirs, dir);
  if (t2 !== (t2 | 0))
    throw $.iae(t2);
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  t1[t2] = v;
  this.updateStyle$2(v, dir);
  t2 = $.View$();
  t2.set$width(40);
  t2.set$height(40);
  t2.addChild$1(v);
  return t2;
},
 main$0: function() {
  var t1, body, mainView, container, v1, t2, v2, v3, v4;
  t1 = {};
  body = $.query('#v-main-view');
  mainView = $.View$();
  mainView.addToDocument$1$ref(body);
  container = $.View$();
  container.set$width(240);
  container.set$height(240);
  container.get$profile().set$location('center center');
  mainView.addChild$1(container);
  t1.mv1_1 = false;
  t1.mv2_2 = false;
  t1.mv3_3 = false;
  v1 = $.Button$('Fade');
  v1.set$width(96);
  v1.set$height(96);
  v1.get$style().set$zIndex('10');
  v1.get$profile().set$location('top left');
  $.add$1(v1.get$on().get$click(), new $.ViewDemo_main_anon(t1, v1));
  container.addChild$1(v1);
  t2 = this.circle$2('Fade', v1);
  $.add$1(t2.get$on().get$click(), new $.ViewDemo_main_anon0(t1, container, v1));
  container.addChild$1(t2);
  v2 = $.Button$('Zoom');
  v2.set$width(96);
  v2.set$height(96);
  v2.get$style().set$zIndex('10');
  v2.get$profile().set$location('top right');
  $.add$1(v2.get$on().get$click(), new $.ViewDemo_main_anon1(v2, t1));
  container.addChild$1(v2);
  t2 = this.circle$2('Zoom', v2);
  $.add$1(t2.get$on().get$click(), new $.ViewDemo_main_anon2(v2, t1, container));
  container.addChild$1(t2);
  v3 = $.Button$('Slide');
  v3.set$width(96);
  v3.set$height(96);
  v3.get$style().set$zIndex('10');
  v3.get$profile().set$location('bottom left');
  $.add$1(v3.get$on().get$click(), new $.ViewDemo_main_anon3(this, v3, t1));
  container.addChild$1(v3);
  t2 = this.circle$2('Slide', v3);
  $.add$1(t2.get$on().get$click(), new $.ViewDemo_main_anon4(this, v3, t1, container));
  container.addChild$1(t2);
  t2 = this.radio$1($.CTC36);
  t2.get$profile().set$anchorView(v3);
  t2.get$profile().set$location('north center');
  container.addChild$1(t2);
  t2 = this.radio$1($.CTC39);
  t2.get$profile().set$anchorView(v3);
  t2.get$profile().set$location('south center');
  container.addChild$1(t2);
  t2 = this.radio$1($.CTC38);
  t2.get$profile().set$anchorView(v3);
  t2.get$profile().set$location('west center');
  container.addChild$1(t2);
  t2 = this.radio$1($.CTC37);
  t2.get$profile().set$anchorView(v3);
  t2.get$profile().set$location('east center');
  container.addChild$1(t2);
  v4 = $.Button$('N/A');
  v4.set$width(96);
  v4.set$height(96);
  v4.get$style().set$zIndex('10');
  v4.get$profile().set$location('bottom right');
  $.add$1(v4.get$on().get$click(), new $.ViewDemo_main_anon5(v4));
  container.addChild$1(v4);
  t2 = this.circle$2('N/A', v4);
  $.add$1(t2.get$on().get$click(), new $.ViewDemo_main_anon6(v4, container));
  container.addChild$1(t2);
}
};

$$.PanelDemo = {"": [],
 "super": "Object",
 showWithMask$3: function(motion, mask, end) {
  return $.EasingMotion$join([motion, $.FadeInEffect$(mask, null, null, 1, 0, 500, null)], new $.PanelDemo_showWithMask_anon(), end, 300, 1, null);
},
 hideWithMask$3: function(motion, mask, end) {
  return $.EasingMotion$join([motion, $.FadeOutEffect$(mask, null, null, 1, 0, 500, null)], new $.PanelDemo_hideWithMask_anon(), end, 300, 1, null);
},
 main$0: function() {
  var t1, body, mainView, container, t2, _remove, dialog, t3, t4;
  t1 = {};
  body = $.query('#v-main-panel');
  mainView = $.View$();
  mainView.addToDocument$1$ref(body);
  mainView.addChild$1($.Style$('.v-mask {background: rgba(127,127,127,0.25);}', null, null));
  container = $.View$();
  t2 = container.get$layout();
  t2.set$type('linear');
  t2.set$orient('vertical');
  t2.set$gap('#8');
  container.get$profile().set$text('width: content; height: content; location: center center');
  mainView.addChild$1(container);
  t1.dialog_1 = null;
  t1.removeReady_2 = false;
  t1.removeMotion_3 = null;
  _remove = new $.PanelDemo_main_anon(t1);
  dialog = $.Panel$();
  dialog.addButton$2('close', new $.PanelDemo_main_anon0(_remove));
  dialog.get$profile().set$text('width: 50%; height: 50%; location: center center');
  t1.dialog_1 = dialog;
  t2 = t1.dialog_1;
  t3 = $.TextView$('Is this OK?');
  t3.get$profile().set$location('center center');
  t3.get$style().set$fontSize('14px');
  t2.addChild$1(t3);
  t3 = t1.dialog_1;
  t2 = $.get$browser().get$mobile() === true ? 'bottom center' : 'bottom right';
  t4 = $.Button$('OK');
  t4.set$height(32);
  t4.set$width(96);
  t4.get$profile().set$location(t2);
  $.add$1(t4.get$on().get$click(), new $.PanelDemo_main_anon1(_remove));
  t3.addChild$1(t4);
  t4 = $.Button$('Fade');
  t4.set$height(32);
  t4.set$width(96);
  $.add$1(t4.get$on().get$click(), new $.PanelDemo_main_anon2(body, t1, this));
  container.addChild$1(t4);
  t4 = $.Button$('Zoom');
  t4.set$height(32);
  t4.set$width(96);
  $.add$1(t4.get$on().get$click(), new $.PanelDemo_main_anon3(body, t1, this));
  container.addChild$1(t4);
  t4 = $.Button$('Slide');
  t4.set$height(32);
  t4.set$width(96);
  $.add$1(t4.get$on().get$click(), new $.PanelDemo_main_anon4(body, t1, this));
  container.addChild$1(t4);
  t4 = $.Button$('N/A');
  t4.set$height(32);
  t4.set$width(96);
  $.add$1(t4.get$on().get$click(), new $.PanelDemo_main_anon5(body, t1));
  container.addChild$1(t4);
}
};

$$.SwitchViewDemo = {"": ["moving!", "rand"],
 "super": "Object",
 replace$3: function(vo, vn, effect) {
  var p;
  if (this.moving === true)
    return;
  this.moving = true;
  if (effect == null) {
    p = vo.get$node().get$parent();
    vo.remove$0();
    vn.addToDocument$1$ref(p);
    this.moving = false;
  } else {
    vn.get$style().set$visibility('hidden');
    vn.addToDocument$1$ref(vo.get$node().get$parent());
    vn.requestLayout$1(true);
    effect.call$3(vo.get$node(), vn.get$node(), new $.SwitchViewDemo_replace_anon(vn, vo, this));
  }
},
 addFly$4: function(element, range, actions, ends) {
  var t1;
  if ($.get$isEmpty(element.get$elements()) === true)
    this.addRandFly$4(element, range, actions, ends);
  else
    for (t1 = $.iterator(element.get$$$dom_children()); t1.get$hasNext() === true;)
      this.addFly$4(t1.next$0(), range, actions, ends);
},
 addRandFly$4: function(element, range, actions, ends) {
  var initX, initY, t1;
  initX = $.CSS_intOf(element.get$style().get$left(), null);
  initY = $.CSS_intOf(element.get$style().get$top(), null);
  t1 = this.rand;
  actions.push(new $.SwitchViewDemo_addRandFly_anon($.mul($.sub($.mul(t1.nextDouble$0(), 2), 1), range.get$x()), initY, initX, $.mul($.sub($.mul(t1.nextDouble$0(), 2), 1), range.get$y()), element));
  ends.push(new $.SwitchViewDemo_addRandFly_anon0(initY, initX, element));
},
 main$0: function() {
  var t1, v1, container, v2, bak, t2, t3, t4, w4;
  t1 = {};
  t1.body_1 = $.query('#v-main-switch');
  if (t1.body_1 == null)
    t1.body_1 = $.document().get$body();
  v1 = $.View$();
  v1.addToDocument$1$ref(t1.body_1);
  v1.get$style().set$background('#333333');
  container = $.View$();
  container.set$width(240);
  container.set$height(240);
  container.get$profile().set$location('center center');
  v1.addChild$1(container);
  v2 = $.View$();
  v2.get$style().set$background('#FFFFFF');
  bak = $.TextView$('Back');
  bak.get$profile().set$location('center center');
  bak.set$height(144);
  bak.set$width(144);
  $.add$1(bak.get$classes(), 'dashed-block');
  t2 = $.CSS_px(72);
  t3 = $.CSS_px(140);
  t4 = bak.get$style();
  t4.set$lineHeight(t3);
  t4.set$borderRadius(t2);
  t4.set$fontSize('17px');
  t4.set$color('#444444');
  t4.set$borderColor('#444444');
  v2.addChild$1(bak);
  t1._eff_2 = null;
  $.add$1(bak.get$on().get$click(), new $.SwitchViewDemo_main_anon(t1, v1, this, v2));
  t4 = $.Button$('Fade');
  t4.set$width(96);
  t4.set$height(96);
  t4.get$profile().set$location('top left');
  $.add$1(t4.get$on().get$click(), new $.SwitchViewDemo_main_anon0(t1, v1, this, v2));
  container.addChild$1(t4);
  t4 = $.Button$('Slide');
  t4.set$width(96);
  t4.set$height(96);
  t4.get$profile().set$location('top right');
  $.add$1(t4.get$on().get$click(), new $.SwitchViewDemo_main_anon1(t1, v1, this, v2));
  container.addChild$1(t4);
  t4 = $.Button$('Collapse');
  t4.set$width(96);
  t4.set$height(96);
  t4.get$profile().set$location('bottom left');
  $.add$1(t4.get$on().get$click(), new $.SwitchViewDemo_main_anon2(t1, v1, this, v2));
  container.addChild$1(t4);
  w4 = $.Button$('N/A');
  w4.set$width(96);
  w4.set$height(96);
  w4.get$profile().set$location('bottom right');
  t4 = $.Button$('N/A');
  t4.set$width(96);
  t4.set$height(96);
  t4.get$profile().set$location('bottom right');
  $.add$1(t4.get$on().get$click(), new $.SwitchViewDemo_main_anon3(t1, v1, this, v2));
  container.addChild$1(t4);
}
};

$$.AbstractWorkerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.AudioContextEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$.BatteryManagerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.BodyElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$message: function() {
  return this.operator$index$1('message');
},
 get$resize: function() {
  return this.operator$index$1('resize');
}
};

$$.DOMApplicationCacheEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.DedicatedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$.DocumentEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$select: function() {
  return this.operator$index$1('select');
},
 select$1: function(arg0) { return this.get$select().call$1(arg0); },
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
}
};

$$._FilteredElementList = {"": ["_lib3_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  var t1 = $._ListImpl_List$from($.filter(this._childNodes, new $._FilteredElementList__filtered_anon()), 'dynamic');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'});
  return t1;
},
 forEach$1: function(f) {
  $.forEach(this.get$_filtered(), f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$('Invalid list length'));
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  $.add$1(this._childNodes, value);
},
 get$add: function() { return new $.BoundClosure(this, 'add$1'); },
 addAll$1: function(collection) {
  $.forEach(collection, this.get$add());
},
 addLast$1: function(value) {
  $.add$1(this._childNodes, value);
},
 contains$1: function(element) {
  return typeof element === 'object' && element !== null && element.is$Element() && $.contains$1(this._childNodes, element) === true;
},
 removeRange$2: function(start, rangeLength) {
  $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $._FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  $.clear(this._childNodes);
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 filter$1: function(f) {
  return $.filter(this.get$_filtered(), f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this.get$_filtered());
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$length: function() {
  return $.get$length(this.get$_filtered());
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  return $.iterator(this.get$_filtered());
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this.get$_filtered(), start, rangeLength);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_filtered(), element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return $.get$last(this.get$_filtered());
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenCssClassSet = {"": ["_element"],
 "super": "_CssClassSet",
 _write$1: function(s) {
  throw $.$$throw($.UnsupportedError$('frozen class set cannot be modified'));
},
 _read$0: function() {
  return $.Set_Set('String');
}
};

$$._ChildrenElementList = {"": ["_element?", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1, output, len, t2, i, t3;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  output = $._ListImpl_List(t1.length, 'dynamic');
  $.setRuntimeTypeInfo(output, {runtimeType: 'List<dynamic>'});
  for (len = t1.length, t2 = output.length, i = 0; i < len; ++i) {
    t3 = t1[i];
    if (i >= t2)
      throw $.ioore(i);
    output[i] = t3;
  }
  return output;
},
 _toList$0$bailout: function(state0, t1) {
  var output, len, i, t2;
  output = $._ListImpl_List($.get$length(t1), 'dynamic');
  $.setRuntimeTypeInfo(output, {runtimeType: 'List<dynamic>'});
  for (len = $.get$length(t1), i = 0; $.ltB(i, len); ++i) {
    t2 = $.index(t1, i);
    if (i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 contains$1: function(element) {
  return $.contains$1(this._childElements, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this._childElements); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(output, f);
  for (t2 = $.iterator(this._childElements); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 get$isEmpty: function() {
  return this._element.get$$$dom_firstElementChild() == null;
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$length: function() {
  return $.get$length(this._childElements);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._element.$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(''));
},
 add$1: function(value) {
  this._element.$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._element.$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  return $.iterator(this._toList$0());
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._element; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnimplementedError$(null));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  this._element.set$text('');
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._element.$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"": ["_nodeList"],
 "super": "Object",
 contains$1: function(element) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = $.iterator(this); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._nodeList);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$length: function() {
  return $.get$length(this._nodeList);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 set$length: function(newLength) {
  $.set$length(this._nodeList, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(''));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$(''));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._nodeList, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 get$last: function() {
  return $.get$last(this._nodeList);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"": ["_list", "_index"],
 "super": "Object",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._list;
  t2 = this._index;
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  return $.lt(this._index, $.get$length(this._list));
}
};

$$.AttributeMap = {"": [],
 "super": "Object",
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"": ["_element?"],
 "super": "AttributeMap",
 containsKey$1: function(key) {
  return this._element.$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._element.$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._element.$dom_setAttribute$2(key, $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this._element.$dom_hasAttribute$1(key) !== true)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._element;
  value = t1.$dom_getAttribute$1(key);
  t1.$dom_removeAttribute$1(key);
  return value;
},
 clear$0: function() {
  var attributes, i;
  attributes = this._element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.clear$0$bailout(1, attributes);
  for (i = attributes.length - 1; i >= 0; --i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    this.remove$1(attributes[i].get$name());
  }
},
 clear$0$bailout: function(state0, attributes) {
  var i;
  for (i = $.sub($.get$length(attributes), 1); $.geB(i, 0); i = $.sub(i, 1))
    this.remove$1($.index(attributes, i).get$name());
},
 forEach$1: function(f) {
  var attributes, len, i, item;
  attributes = this._element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.forEach$1$bailout(1, f, attributes);
  for (len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    item = attributes[i];
    f.call$2(item.get$name(), item.get$value());
  }
},
 forEach$1$bailout: function(state0, f, attributes) {
  var len, i, item;
  for (len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    item = $.index(attributes, i);
    f.call$2(item.get$name(), item.get$value());
  }
},
 get$keys: function() {
  var attributes, keys, t2, len, t1, i;
  attributes = this._element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  keys = $._ListImpl_List(attributes.length, 'String');
  t2 = 'String';
  $.setRuntimeTypeInfo(keys, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  for (len = attributes.length, t1 = keys.length, i = 0; i < len; ++i) {
    t2 = attributes[i].get$name();
    if (i >= t1)
      throw $.ioore(i);
    keys[i] = t2;
  }
  return keys;
},
 get$keys$bailout: function(state0, attributes) {
  var keys, t2, len, i, t1;
  keys = $._ListImpl_List($.get$length(attributes), 'String');
  t2 = 'String';
  $.setRuntimeTypeInfo(keys, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  for (len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    t1 = $.index(attributes, i).get$name();
    if (i >= keys.length)
      throw $.ioore(i);
    keys[i] = t1;
  }
  return keys;
},
 get$values: function() {
  var attributes, values, t2, len, i, t1;
  attributes = this._element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$values$bailout(1, attributes);
  values = $._ListImpl_List(attributes.length, 'String');
  t2 = 'String';
  $.setRuntimeTypeInfo(values, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  for (len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    t1 = attributes[i].get$value();
    if (i >= values.length)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$values$bailout: function(state0, attributes) {
  var values, t2, len, i, t1;
  values = $._ListImpl_List($.get$length(attributes), 'String');
  t2 = 'String';
  $.setRuntimeTypeInfo(values, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  for (len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    t1 = $.index(attributes, i).get$value();
    if (i >= values.length)
      throw $.ioore(i);
    values[i] = t1;
  }
  return values;
},
 get$length: function() {
  return $.get$length(this._element.get$$$dom_attributes());
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); }
};

$$._DataAttributeMap = {"": ["$$dom_attributes"],
 "super": "AttributeMap",
 containsKey$1: function(key) {
  return this.$$dom_attributes.containsKey$1('data-' + $.S(key));
},
 operator$index$1: function(key) {
  return $.index(this.$$dom_attributes, 'data-' + $.S(key));
},
 operator$indexSet$2: function(key, value) {
  $.indexSet(this.$$dom_attributes, 'data-' + $.S(key), $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this.$$dom_attributes.putIfAbsent$2('data-' + $.S(key), ifAbsent);
},
 remove$1: function(key) {
  return this.$$dom_attributes.remove$1('data-' + $.S(key));
},
 clear$0: function() {
  var t1, t2;
  for (t1 = $.iterator(this.get$keys()), t2 = this.$$dom_attributes; t1.get$hasNext() === true;)
    t2.remove$1('data-' + $.S(t1.next$0()));
},
 forEach$1: function(f) {
  $.forEach(this.$$dom_attributes, new $._DataAttributeMap_forEach_anon(this, f));
},
 get$keys: function() {
  var keys, t1;
  keys = $._ListImpl_List(null, 'String');
  t1 = 'String';
  $.setRuntimeTypeInfo(keys, {runtimeType: 'List<' + t1 + '>', 'E': t1});
  $.forEach(this.$$dom_attributes, new $._DataAttributeMap_keys_anon(this, keys));
  return keys;
},
 get$values: function() {
  var values, t1;
  values = $._ListImpl_List(null, 'String');
  t1 = 'String';
  $.setRuntimeTypeInfo(values, {runtimeType: 'List<' + t1 + '>', 'E': t1});
  $.forEach(this.$$dom_attributes, new $._DataAttributeMap_values_anon(values, this));
  return values;
},
 get$length: function() {
  return $.get$length(this.get$keys());
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); }
};

$$.CssClassSet = {"": [],
 "super": "Object",
 is$Collection: function() { return true; }
};

$$._CssClassSet = {"": ["_element?"],
 "super": "CssClassSet",
 toString$0: function() {
  return this._formatSet$1(this._read$0());
},
 iterator$0: function() {
  return $.iterator(this._read$0());
},
 forEach$1: function(f) {
  $.forEach(this._read$0(), f);
},
 filter$1: function(f) {
  return $.filter(this._read$0(), f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._read$0());
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$length: function() {
  return $.get$length(this._read$0());
},
 contains$1: function(value) {
  return $.contains$1(this._read$0(), value);
},
 add$1: function(value) {
  this._modify$1(new $._CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s, result;
  s = this._read$0();
  result = s.remove$1(value);
  this._write$1(s);
  return result;
},
 addAll$1: function(collection) {
  this._modify$1(new $._CssClassSet_addAll_anon(collection));
},
 removeAll$1: function(collection) {
  this._modify$1(new $._CssClassSet_removeAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $._CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this._read$0();
  f.call$1(s);
  this._write$1(s);
},
 _read$0: function() {
  var s, t1, trimmed;
  s = $.Set_Set('String');
  for (t1 = $.iterator($.split(this._classname$0(), ' ')); t1.get$hasNext() === true;) {
    trimmed = $.trim(t1.next$0());
    if ($.get$isEmpty(trimmed) !== true)
      $.add$1(s, trimmed);
  }
  return s;
},
 _classname$0: function() {
  return this._element.get$$$dom_className();
},
 _write$1: function(s) {
  var t1 = this._formatSet$1(s);
  this._element.set$$$dom_className(t1);
},
 _formatSet$1: function(s) {
  var list = $._ListImpl_List$from(s, 'dynamic');
  $.setRuntimeTypeInfo(list, {runtimeType: 'List<dynamic>'});
  return $.Strings_join(list, ' ');
}
};

$$.ElementEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$select: function() {
  return this.operator$index$1('select');
},
 select$1: function(arg0) { return this.get$select().call$1(arg0); },
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
}
};

$$.EventSourceEvents = {"": ["_ptr"],
 "super": "Events",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$.Events = {"": ["_ptr?"],
 "super": "Object",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"": ["_ptr?", "_lib3_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._lib3_type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._lib3_type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
}
};

$$.FileReaderEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.FileWriterEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.FrameSetElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$message: function() {
  return this.operator$index$1('message');
},
 get$resize: function() {
  return this.operator$index$1('resize');
}
};

$$.HttpRequestEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.HttpRequestUploadEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBDatabaseEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBOpenDBRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.IDBRequestEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBTransactionEvents = {"": ["_ptr"],
 "super": "Events",
 get$complete: function() {
  return this.operator$index$1('complete');
},
 complete$1: function(arg0) { return this.get$complete().call$1(arg0); }
};

$$.IDBVersionChangeRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.InputElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.LocalWindowEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$message: function() {
  return this.operator$index$1('message');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$resize: function() {
  return this.operator$index$1('resize');
},
 get$select: function() {
  return this.operator$index$1('select');
},
 select$1: function(arg0) { return this.get$select().call$1(arg0); },
 get$touchStart: function() {
  return this.operator$index$1('touchstart');
}
};

$$.MediaElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.MediaStreamEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MessagePortEvents = {"": ["_ptr"],
 "super": "Events",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$._ChildNodeListLazy = {"": ["_this"],
 "super": "Object",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._this.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  return $.iterator(this._this.get$$$dom_childNodes());
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 get$length: function() {
  return $.get$length(this._this.get$$$dom_childNodes());
},
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ListWrapper = {"": [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._list);
},
 contains$1: function(element) {
  return $.contains$1(this._list, element);
},
 forEach$1: function(f) {
  return $.forEach(this._list, f);
},
 filter$1: function(f) {
  return $.filter(this._list, f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._list);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$length: function() {
  return $.get$length(this._list);
},
 operator$index$1: function(index) {
  return $.index(this._list, index);
},
 operator$indexSet$2: function(index, value) {
  $.indexSet(this._list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._list, newLength);
},
 add$1: function(value) {
  return $.add$1(this._list, value);
},
 addLast$1: function(value) {
  return $.addLast(this._list, value);
},
 addAll$1: function(collection) {
  return $.addAll(this._list, collection);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._list, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  return $.clear(this._list);
},
 removeLast$0: function() {
  return $.removeLast(this._list);
},
 get$last: function() {
  return $.get$last(this._list);
},
 getRange$2: function(start, rangeLength) {
  return $.getRange(this._list, start, rangeLength);
},
 removeRange$2: function(start, rangeLength) {
  return $.removeRange(this._list, start, rangeLength);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"": ["_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  return $._NodeListWrapper$($.filter(this._list, f));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($.getRange(this._list, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.NotificationEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$display: function() {
  return this.operator$index$1('display');
}
};

$$.PeerConnection00Events = {"": ["_ptr"],
 "super": "Events"
};

$$.RTCDataChannelEvents = {"": ["_ptr"],
 "super": "Events",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$.RTCPeerConnectionEvents = {"": ["_ptr"],
 "super": "Events"
};

$$._AttributeClassSet = {"": ["_element"],
 "super": "_CssClassSet",
 $dom_className$0: function() {
  return $.index(this._element.get$attributes(), 'class');
},
 get$$$dom_className: function() { return new $.BoundClosure2(this, '$dom_className$0'); },
 _write$1: function(s) {
  $.indexSet(this._element.get$attributes(), 'class', this._formatSet$1(s));
}
};

$$.SVGElementInstanceEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$reset: function() {
  return this.operator$index$1('reset');
},
 reset$0: function() { return this.get$reset().call$0(); },
 get$resize: function() {
  return this.operator$index$1('resize');
},
 get$select: function() {
  return this.operator$index$1('select');
},
 select$1: function(arg0) { return this.get$select().call$1(arg0); }
};

$$.ScriptProcessorNodeEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.SharedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.SpeechRecognitionEvents = {"": ["_ptr"],
 "super": "Events",
 get$start: function() {
  return this.operator$index$1('start');
}
};

$$.TextTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackCueEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.WebSocketEvents = {"": ["_ptr"],
 "super": "Events",
 get$close: function() {
  return this.operator$index$1('close');
},
 close$0: function() { return this.get$close().call$0(); },
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$.WorkerEvents = {"": ["_ptr"],
 "super": "AbstractWorkerEvents",
 get$message: function() {
  return this.operator$index$1('message');
}
};

$$.WorkerContextEvents = {"": ["_ptr"],
 "super": "Events"
};

$$._MeasurementRequest = {"": ["computeValue", "completer?", "value=", "exception="],
 "super": "Object",
 computeValue$0: function() { return this.computeValue.call$0(); }
};

$$._MeasurementScheduler = {"": ["_callback?"],
 "super": "Object",
 _callback$0: function() { return this._callback.call$0(); },
 _callback$2: function(arg0, arg1) { return this._callback.call$2(arg0, arg1); },
 maybeSchedule$0: function() {
  if (this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = true;
  this._schedule$0();
},
 _onCallback$0: function() {
  if (!this._nextMeasurementFrameScheduled)
    return;
  this._nextMeasurementFrameScheduled = false;
  this._callback$0();
}
};

$$._PostMessageScheduler = {"": ["_MEASUREMENT_MESSAGE", "_nextMeasurementFrameScheduled", "_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  $.window().postMessage$2(this._MEASUREMENT_MESSAGE, '*');
},
 _handleMessage$1: function(e) {
  this._onCallback$0();
},
 get$_handleMessage: function() { return new $.BoundClosure(this, '_handleMessage$1'); },
 _PostMessageScheduler$1: function(callback) {
  $.add$1($.window().get$on().get$message(), this.get$_handleMessage());
}
};

$$._MutationObserverScheduler = {"": ["_observer", "_dummy", "_nextMeasurementFrameScheduled", "_callback"],
 "super": "_MeasurementScheduler",
 _schedule$0: function() {
  var t1 = this._dummy.get$hidden() !== true;
  this._dummy.set$hidden(t1);
},
 _handleMutation$2: function(mutations, observer) {
  this._onCallback$0();
},
 get$_handleMutation: function() { return new $.BoundClosure3(this, '_handleMutation$2'); },
 _MutationObserverScheduler$1: function(callback) {
  this._observer = $.MutationObserver_MutationObserver(this.get$_handleMutation());
  this._dummy = $.DivElement_DivElement();
  this._observer.observe$2$attributes(this._dummy, true);
}
};

$$._DOMWindowCrossFrame = {"": ["_window"],
 "super": "Object",
 get$location: function() {
  return $._LocationCrossFrame__createSafe(this._window.location);
},
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 get$top: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.top);
},
 close$0: function() {
  return this._window.close();
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1, t2;
  t1 = messagePorts == null;
  t2 = this._window;
  if (t1)
    t2.postMessage(message,targetOrigin);
  else
    t2.postMessage(message,targetOrigin,messagePorts);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,null)
}
};

$$._LocationCrossFrame = {"": ["_location="],
 "super": "Object",
 is$Location: function() { return true; }
};

$$._LocationWrapper = {"": ["_ptr?"],
 "super": "Object",
 get$href: function() {
  return $._LocationWrapper__get(this._ptr, 'href');
},
 toString$0: function() {
  return this._ptr.toString();
},
 is$_LocationWrapper: true,
 is$Location: function() { return true; }
};

$$._FixedSizeListIterator = {"": ["_lib3_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 get$hasNext: function() {
  return $.gt(this._lib3_length, this._pos);
}
};

$$._VariableSizeListIterator = {"": [],
 "super": "Object",
 get$hasNext: function() {
  return $.gt($.get$length(this._array), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
}
};

$$._Manager = {"": ["nextIsolateId=", "currentManagerId?", "nextManagerId", "currentContext=", "rootContext=", "topEventLoop?", "fromCommandLine?", "isWorker?", "supportsWorkers", "isolates?", "mainManager?", "managers?"],
 "super": "Object",
 get$useWorkers: function() {
  return this.supportsWorkers;
},
 get$needSerialization: function() {
  return this.get$useWorkers();
},
 _nativeDetectEnvironment$0: function() {
  this.isWorker = $isWorker;
  this.supportsWorkers = $supportsWorkers;
  this.fromCommandLine = typeof(window) == 'undefined';
},
 _nativeInitWorkerMessageHandler$0: function() {
  $globalThis.onmessage = function (e) {
  _IsolateNatives._processWorkerMessage(this.mainManager, e);
};
},
 maybeCloseWorker$0: function() {
  if ($.get$isEmpty(this.isolates) === true)
    this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'close'])));
},
 _Manager$0: function() {
  this._nativeDetectEnvironment$0();
  this.topEventLoop = $._EventLoop$();
  this.isolates = $.Map_Map('int', '_IsolateContext');
  this.managers = $.Map_Map('int', '_ManagerStub');
  if (this.isWorker === true) {
    this.mainManager = $._MainManagerStub$();
    this._nativeInitWorkerMessageHandler$0();
  }
}
};

$$._IsolateContext = {"": ["id=", "ports?", "isolateStatics"],
 "super": "Object",
 initGlobals$0: function() {
  $initGlobals(this);
},
 eval$1: function(code) {
  var old, result, t1;
  old = $._globalState().get$currentContext();
  $._globalState().set$currentContext(this);
  this._setGlobals$0();
  result = null;
  try {
    result = code.call$0();
  } finally {
    t1 = old;
    $._globalState().set$currentContext(t1);
    if (!(old == null))
      old._setGlobals$0();
  }
  return result;
},
 _setGlobals$0: function() {
  $setGlobals(this);
},
 lookup$1: function(portId) {
  return $.index(this.ports, portId);
},
 register$2: function(portId, port) {
  if (this.ports.containsKey$1(portId) === true)
    throw $.$$throw($._ExceptionImplementation$('Registry: ports must be registered only once.'));
  $.indexSet(this.ports, portId, port);
  $.indexSet($._globalState().get$isolates(), this.id, this);
},
 unregister$1: function(portId) {
  this.ports.remove$1(portId);
  if ($.get$isEmpty(this.ports) === true)
    $._globalState().get$isolates().remove$1(this.id);
},
 _IsolateContext$0: function() {
  var t1, t2;
  t1 = $._globalState();
  t2 = t1.get$nextIsolateId();
  t1.set$nextIsolateId($.add(t2, 1));
  this.id = t2;
  this.ports = $.Map_Map('int', 'ReceivePort');
  this.initGlobals$0();
}
};

$$._EventLoop = {"": ["events"],
 "super": "Object",
 enqueue$3: function(isolate, fn, msg) {
  $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
},
 dequeue$0: function() {
  var t1 = this.events;
  if ($.get$isEmpty(t1) === true)
    return;
  return t1.removeFirst$0();
},
 runIteration$0: function() {
  var event$ = this.dequeue$0();
  if (event$ == null) {
    if ($._globalState().get$isWorker() === true)
      $._globalState().maybeCloseWorker$0();
    else if (!($._globalState().get$rootContext() == null) && $._globalState().get$isolates().containsKey$1($._globalState().get$rootContext().get$id()) === true && $._globalState().get$fromCommandLine() === true && $.get$isEmpty($._globalState().get$rootContext().get$ports()) === true)
      throw $.$$throw($._ExceptionImplementation$('Program exited with open ReceivePorts.'));
    return false;
  }
  event$.process$0();
  return true;
},
 _runHelper$0: function() {
  if (!($._window() == null))
    new $._EventLoop__runHelper_next(this).call$0();
  else
    for (; this.runIteration$0() === true;)
      ;
},
 run$0: function(exception) {
  var t1, e, trace;
  if ($._globalState().get$isWorker() !== true)
    this._runHelper$0();
  else
    try {
      this._runHelper$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      trace = $.getTraceFromException(exception);
      $._globalState().get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(['command', 'error', 'msg', $.S(e) + '\n' + $.S(trace)])));
    }

}
};

$$._IsolateEvent = {"": ["isolate", "fn", "message?"],
 "super": "Object",
 process$0: function() {
  this.isolate.eval$1(this.fn);
}
};

$$._MainManagerStub = {"": [],
 "super": "Object",
 get$id: function() {
  return 0;
},
 set$id: function(i) {
  throw $.$$throw($.UnimplementedError$(null));
},
 postMessage$1: function(msg) {
  $globalThis.postMessage(msg);
}
};

$$._BaseSendPort = {"": ["_isolateId?"],
 "super": "Object",
 _checkReplyTo$1: function(replyTo) {
  if (!(replyTo == null) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_NativeJsSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_WorkerSendPort) && !(typeof replyTo === 'object' && replyTo !== null && !!replyTo.is$_BufferingSendPort))
    throw $.$$throw($._ExceptionImplementation$('SendPort.send: Illegal replyTo port type'));
},
 call$1: function(message) {
  var completer, port;
  completer = $.Completer_Completer('dynamic');
  port = $._ReceivePortImpl$();
  this.send$2(message, port.toSendPort$0());
  port.receive$1(new $._BaseSendPort_call_anon(completer, port));
  return completer.get$future();
},
 is$SendPort: true
};

$$._NativeJsSendPort = {"": ["_receivePort?", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, replyTo, message));
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$_NativeJsSendPort && $.eqB(this._receivePort, other._receivePort);
},
 get$hashCode: function() {
  return this._receivePort.get$_id();
},
 is$_NativeJsSendPort: true,
 is$SendPort: true
};

$$._WorkerSendPort = {"": ["_workerId?", "_receivePortId", "_isolateId"],
 "super": "_BaseSendPort",
 send$2: function(message, replyTo) {
  $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(replyTo, message, this));
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$_WorkerSendPort)
    t1 = $.eqB(this._workerId, other._workerId) && $.eqB(this._isolateId, other._isolateId) && $.eqB(this._receivePortId, other._receivePortId);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  return $.xor($.xor($.shl(this._workerId, 16), $.shl(this._isolateId, 8)), this._receivePortId);
},
 is$_WorkerSendPort: true,
 is$SendPort: true
};

$$._ReceivePortImpl = {"": ["_id?", "_lib10_callback?"],
 "super": "Object",
 _lib10_callback$0: function() { return this._lib10_callback.call$0(); },
 _lib10_callback$2: function(arg0, arg1) { return this._lib10_callback.call$2(arg0, arg1); },
 receive$1: function(onMessage) {
  this._lib10_callback = onMessage;
},
 close$0: function() {
  this._lib10_callback = null;
  $._globalState().get$currentContext().unregister$1(this._id);
},
 toSendPort$0: function() {
  return $._NativeJsSendPort$(this, $._globalState().get$currentContext().get$id());
},
 _ReceivePortImpl$0: function() {
  $._globalState().get$currentContext().register$2(this._id, this);
}
};

$$._PendingSendPortFinder = {"": ["ports?", "_visited"],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
},
 visitList$1: function(list) {
  if (!($.index(this._visited, list) == null))
    return;
  $.indexSet(this._visited, list, true);
  $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
},
 visitMap$1: function(map) {
  if (!($.index(this._visited, map) == null))
    return;
  $.indexSet(this._visited, map, true);
  $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
},
 visitSendPort$1: function(port) {
  if (!!port.is$_BufferingSendPort && port._port == null)
    this.ports.push(port.get$_futurePort());
},
 _PendingSendPortFinder$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsSerializer = {"": ["_nextFreeRefId", "_visited"],
 "super": "_Serializer",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return ['sendport', x._workerId, x._isolateId, x._receivePortId];
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(x));
},
 visitNativeJsSendPort$1: function(port) {
  return ['sendport', $._globalState().get$currentManagerId(), port._isolateId, port._receivePort.get$_id()];
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsSerializer$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsCopier = {"": ["_visited"],
 "super": "_Copier",
 visitSendPort$1: function(x) {
  if (typeof x === 'object' && x !== null && !!x.is$_NativeJsSendPort)
    return this.visitNativeJsSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_WorkerSendPort)
    return this.visitWorkerSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$_BufferingSendPort)
    return this.visitBufferingSendPort$1(x);
  throw $.$$throw('Illegal underlying port ' + $.S(this.get$p()));
},
 visitNativeJsSendPort$1: function(port) {
  return $._NativeJsSendPort$(port._receivePort, port._isolateId);
},
 visitWorkerSendPort$1: function(port) {
  return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
},
 visitBufferingSendPort$1: function(port) {
  var t1 = port._port;
  if (!(t1 == null))
    return this.visitSendPort$1(t1);
  else
    throw $.$$throw('internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.');
},
 _JsCopier$0: function() {
  this._visited = $._JsVisitedMap$();
}
};

$$._JsDeserializer = {"": ["_deserialized"],
 "super": "_Deserializer",
 deserializeSendPort$1: function(x) {
  var managerId, isolateId, receivePortId, isolate;
  managerId = $.index(x, 1);
  isolateId = $.index(x, 2);
  receivePortId = $.index(x, 3);
  if ($.eqB(managerId, $._globalState().get$currentManagerId())) {
    isolate = $.index($._globalState().get$isolates(), isolateId);
    if (isolate == null)
      return;
    return $._NativeJsSendPort$(isolate.lookup$1(receivePortId), isolateId);
  } else
    return $._WorkerSendPort$(managerId, isolateId, receivePortId);
}
};

$$._JsVisitedMap = {"": ["tagged"],
 "super": "Object",
 operator$index$1: function(object) {
  return object['__MessageTraverser__attached_info__'];
},
 operator$indexSet$2: function(object, info) {
  $.add$1(this.tagged, object);
  object['__MessageTraverser__attached_info__'] = info;
},
 reset$0: function() {
  var t1 = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'});
  this.tagged = t1;
},
 cleanup$0: function() {
  var length$, i;
  length$ = $.get$length(this.tagged);
  if (typeof length$ !== 'number')
    return this.cleanup$0$bailout(1, length$);
  i = 0;
  for (; i < length$; ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
},
 cleanup$0$bailout: function(state0, length$) {
  var i = 0;
  for (; $.ltB(i, length$); ++i)
    $.index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
  this.tagged = null;
}
};

$$._MessageTraverserVisitedMap = {"": [],
 "super": "Object",
 operator$index$1: function(object) {
  return;
},
 operator$indexSet$2: function(object, info) {
},
 reset$0: function() {
},
 cleanup$0: function() {
}
};

$$._MessageTraverser = {"": [],
 "super": "Object",
 traverse$1: function(x) {
  var t1, result;
  t1 = x;
  if (t1 == null || typeof t1 === 'string' || typeof t1 === 'number' || typeof t1 === 'boolean')
    return this.visitPrimitive$1(x);
  this._visited.reset$0();
  result = null;
  try {
    result = this._dispatch$1(x);
  } finally {
    this._visited.cleanup$0();
  }
  return result;
},
 _dispatch$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return this.visitPrimitive$1(x);
  if (typeof x === 'object' && x !== null && (x.constructor === Array || x.is$List()))
    return this.visitList$1(x);
  if (typeof x === 'object' && x !== null && x.is$Map())
    return this.visitMap$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPort)
    return this.visitSendPort$1(x);
  if (typeof x === 'object' && x !== null && !!x.is$SendPortSync)
    return this.visitSendPortSync$1(x);
  return this.visitObject$1(x);
},
 visitObject$1: function(x) {
  throw $.$$throw('Message serialization: Illegal value ' + $.S(x) + ' passed');
}
};

$$._Copier = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copy, len, i, t1;
  if (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior())
    return this.visitList$1$bailout(1, list);
  copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  len = list.length;
  copy = $._ListImpl_List(len, 'dynamic');
  $.setRuntimeTypeInfo(copy, {runtimeType: 'List<dynamic>'});
  $.indexSet(this._visited, list, copy);
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    t1 = this._dispatch$1(list[i]);
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitList$1$bailout: function(state0, list) {
  var copy, len, i, t1;
  copy = $.index(this._visited, list);
  if (!(copy == null))
    return copy;
  len = $.get$length(list);
  copy = $._ListImpl_List(len, 'dynamic');
  $.setRuntimeTypeInfo(copy, {runtimeType: 'List<dynamic>'});
  $.indexSet(this._visited, list, copy);
  for (i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i >= copy.length)
      throw $.ioore(i);
    copy[i] = t1;
  }
  return copy;
},
 visitMap$1: function(map) {
  var t1, t2;
  t1 = {};
  t1.copy_10 = $.index(this._visited, map);
  t2 = t1.copy_10;
  if (!(t2 == null))
    return t2;
  t1.copy_10 = $.Map_Map('dynamic', 'dynamic');
  $.indexSet(this._visited, map, t1.copy_10);
  map.forEach$1(new $._Copier_visitMap_anon(t1, this));
  return t1.copy_10;
}
};

$$._Serializer = {"": [],
 "super": "_MessageTraverser",
 visitPrimitive$1: function(x) {
  return x;
},
 visitList$1: function(list) {
  var copyId, id;
  copyId = $.index(this._visited, list);
  if (!(copyId == null))
    return ['ref', copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, list, id);
  return ['list', id, this._serializeList$1(list)];
},
 visitMap$1: function(map) {
  var copyId, id;
  copyId = $.index(this._visited, map);
  if (!(copyId == null))
    return ['ref', copyId];
  id = this._nextFreeRefId;
  this._nextFreeRefId = id + 1;
  $.indexSet(this._visited, map, id);
  return ['map', id, this._serializeList$1(map.get$keys()), this._serializeList$1(map.get$values())];
},
 _serializeList$1: function(list) {
  var len, result, i, t1;
  if (typeof list !== 'string' && (typeof list !== 'object' || list === null || list.constructor !== Array && !list.is$JavaScriptIndexingBehavior()))
    return this._serializeList$1$bailout(1, list);
  len = list.length;
  result = $._ListImpl_List(len, 'dynamic');
  $.setRuntimeTypeInfo(result, {runtimeType: 'List<dynamic>'});
  for (i = 0; i < len; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    t1 = this._dispatch$1(list[i]);
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
},
 _serializeList$1$bailout: function(state0, list) {
  var len, result, i, t1;
  len = $.get$length(list);
  result = $._ListImpl_List(len, 'dynamic');
  $.setRuntimeTypeInfo(result, {runtimeType: 'List<dynamic>'});
  for (i = 0; $.ltB(i, len); ++i) {
    t1 = this._dispatch$1($.index(list, i));
    if (i >= result.length)
      throw $.ioore(i);
    result[i] = t1;
  }
  return result;
}
};

$$._Deserializer = {"": [],
 "super": "Object",
 deserialize$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  this._deserialized = $.HashMap_HashMap('dynamic', 'dynamic');
  return this._deserializeHelper$1(x);
},
 _deserializeHelper$1: function(x) {
  if (x == null || typeof x === 'string' || typeof x === 'number' || typeof x === 'boolean')
    return x;
  switch ($.index(x, 0)) {
    case 'ref':
      return this._deserializeRef$1(x);
    case 'list':
      return this._deserializeList$1(x);
    case 'map':
      return this._deserializeMap$1(x);
    case 'sendport':
      return this.deserializeSendPort$1(x);
    default:
      return this.deserializeObject$1(x);
  }
},
 _deserializeRef$1: function(x) {
  var id = $.index(x, 1);
  return $.index(this._deserialized, id);
},
 _deserializeList$1: function(x) {
  var id, dartList, len, i, t1;
  id = $.index(x, 1);
  dartList = $.index(x, 2);
  if (typeof dartList !== 'object' || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.is$JavaScriptIndexingBehavior())
    return this._deserializeList$1$bailout(1, dartList, id);
  $.indexSet(this._deserialized, id, dartList);
  len = dartList.length;
  for (i = 0; i < len; ++i) {
    if (i >= dartList.length)
      throw $.ioore(i);
    t1 = this._deserializeHelper$1(dartList[i]);
    if (i >= dartList.length)
      throw $.ioore(i);
    dartList[i] = t1;
  }
  return dartList;
},
 _deserializeList$1$bailout: function(state0, dartList, id) {
  var len, i;
  $.indexSet(this._deserialized, id, dartList);
  len = $.get$length(dartList);
  for (i = 0; $.ltB(i, len); ++i)
    $.indexSet(dartList, i, this._deserializeHelper$1($.index(dartList, i)));
  return dartList;
},
 _deserializeMap$1: function(x) {
  var result, id, keys, values, len, i, key;
  result = $.Map_Map('dynamic', 'dynamic');
  id = $.index(x, 1);
  $.indexSet(this._deserialized, id, result);
  keys = $.index(x, 2);
  if (typeof keys !== 'string' && (typeof keys !== 'object' || keys === null || keys.constructor !== Array && !keys.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(1, x, result, keys);
  values = $.index(x, 3);
  if (typeof values !== 'string' && (typeof values !== 'object' || values === null || values.constructor !== Array && !values.is$JavaScriptIndexingBehavior()))
    return this._deserializeMap$1$bailout(2, values, result, keys);
  len = keys.length;
  for (i = 0; i < len; ++i) {
    if (i >= keys.length)
      throw $.ioore(i);
    key = this._deserializeHelper$1(keys[i]);
    if (i >= values.length)
      throw $.ioore(i);
    $.indexSet(result, key, this._deserializeHelper$1(values[i]));
  }
  return result;
},
 _deserializeMap$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      keys = env2;
      result = env1;
      x = env0;
      break;
    case 2:
      keys = env2;
      result = env1;
      values = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $.Map_Map('dynamic', 'dynamic');
      id = $.index(x, 1);
      $.indexSet(this._deserialized, id, result);
      keys = $.index(x, 2);
    case 1:
      state0 = 0;
      values = $.index(x, 3);
    case 2:
      var result, id, keys, x, values, len, i;
      state0 = 0;
      len = $.get$length(keys);
      for (i = 0; $.ltB(i, len); ++i)
        $.indexSet(result, this._deserializeHelper$1($.index(keys, i)), this._deserializeHelper$1($.index(values, i)));
      return result;
  }
},
 deserializeObject$1: function(x) {
  throw $.$$throw('Unexpected serialized object');
}
};

$$._Timer = {"": ["_once", "_handle"],
 "super": "Object",
 _Timer$repeating$2: function(milliSeconds, callback) {
  this._handle = $._window().setInterval$2(new $.anon2(this, callback), milliSeconds);
},
 _Timer$2: function(milliSeconds, callback) {
  this._handle = $._window().setTimeout$2(new $.anon1(callback, this), milliSeconds);
}
};

$$._Random = {"": [],
 "super": "Object",
 nextDouble$0: function() {
  return Math.random();
}
};

$$.View = {"": ["_uuid", "_lib1_parent=", "_nextSibling=", "_prevSibling=", "_virtIS=", "_childInfo", "_evlInfo", "_dataAttrs!", "_mntAttrs", "_annos", "_style", "_node", "_left", "_top?", "_width", "_height", "_profile", "_layout", "_inDoc"],
 "super": "Object",
 get$className: function() {
  return $.S($.get$runtimeType(this));
},
 _initChildInfo$0: function() {
  if (this._childInfo == null)
    this._childInfo = $._ChildInfo$();
  return this._childInfo;
},
 _initEventListenerInfo$0: function() {
  if (this._evlInfo == null)
    this._evlInfo = $._EventListenerInfo$(this);
  return this._evlInfo;
},
 get$uuid: function() {
  if (this._uuid == null) {
    var t1 = $.View__uuidNext;
    $.View__uuidNext = $.add(t1, 1);
    this._uuid = $.StringUtil_encodeId(t1, $.get$viewConfig().get$uuidPrefix());
  }
  return this._uuid;
},
 get$id: function() {
  return this.get$node().get$id();
},
 set$id: function(id) {
  if (id == null)
    id = '';
  if (!$.eqB(this.get$node().get$id(), id)) {
    if ($.gtB($.get$length(id), 0))
      $._ViewImpl_checkIdSpaces(this, id);
    $._ViewImpl_removeFromIdSpace(this, false);
    this.get$node().set$id(id);
    $._ViewImpl_addToIdSpace(this, false);
  }
},
 query$1: function(selector) {
  var so, iter;
  if (selector == null)
    return;
  switch (selector) {
    case '':
      return;
    case 'parent':
      return this.get$parent();
    case 'spaceOwner':
      so = this.get$spaceOwner();
      return typeof so === 'object' && so !== null && !!so.is$View ? so : null;
  }
  iter = $.iterator(this.queryAll$1(selector));
  return iter.get$hasNext() === true ? iter.next$0() : null;
},
 queryAll$1: function(selector) {
  return $.ViewIterable$(this, selector);
},
 getFellow$1: function(id) {
  return this.get$spaceOwner().getFellow$1(id);
},
 get$fellows: function() {
  return this.get$spaceOwner().get$fellows();
},
 bindFellow_$2: function(id, fellow) {
  throw $.$$throw($.UnsupportedError$('Not IdSpace, ' + $.S(this)));
},
 get$spaceOwner: function() {
  return $._ViewImpl_spaceOwner(this);
},
 isDescendantOf$1: function(parent$) {
  var w;
  for (w = this; !(w == null); w = w.get$parent())
    if (w == null ? parent$ == null : w === parent$)
      return true;
  return false;
},
 get$parent: function() {
  return this._lib1_parent;
},
 get$firstChild: function() {
  var t1 = this._childInfo;
  return !(t1 == null) ? t1.get$firstChild() : null;
},
 get$lastChild: function() {
  var t1 = this._childInfo;
  return !(t1 == null) ? t1.get$lastChild() : null;
},
 get$nextSibling: function() {
  return this._nextSibling;
},
 get$previousSibling: function() {
  return this._prevSibling;
},
 get$children: function() {
  var ci = this._initChildInfo$0();
  if (ci.get$children() == null)
    ci.set$children($._SubviewList$(this));
  return ci.get$children();
},
 get$childCount: function() {
  var t1 = this._childInfo;
  return !(t1 == null) ? t1.get$nChild() : 0;
},
 onChildAdded_$1: function(child) {
},
 beforeChildRemoved_$1: function(child) {
},
 onChildRemoved_$1: function(child) {
},
 onParentChanged_$1: function(oldParent) {
},
 beforeParentChanged_$1: function(newParent) {
},
 onLayout_$1: function(mctx) {
  this.sendEvent$1($.LayoutEvent$(mctx, 'layout', null));
},
 onPreLayout_$1: function(mctx) {
  this.sendEvent$1($.LayoutEvent$(mctx, 'preLayout', null));
},
 get$isViewGroup: function() {
  return true;
},
 addChild$2: function(child, beforeChild) {
  var oldParent, t1, parentChanged;
  if (this.isDescendantOf$1(child) === true)
    throw $.$$throw($.UIException$($.S(child) + ' is an ancestor of ' + $.S(this)));
  if (this.get$isViewGroup() !== true)
    throw $.$$throw($.UIException$('No child allowed for ' + $.S(this)));
  if (!(beforeChild == null))
    if (!(beforeChild.get$parent() === this))
      beforeChild = null;
    else if (child == null ? beforeChild == null : child === beforeChild)
      return;
  oldParent = child.get$parent();
  t1 = oldParent === this;
  parentChanged = !t1;
  if (t1) {
    t1 = child.get$nextSibling();
    t1 = beforeChild == null ? t1 == null : beforeChild === t1;
  } else
    t1 = false;
  if (t1)
    return;
  t1 = oldParent == null;
  if (t1 && child.get$inDocument() === true)
    child._removeFromDocument$0();
  if (parentChanged)
    child.beforeParentChanged_$1(this);
  if (!t1)
    oldParent._removeChild$2(child, false);
  $._ViewImpl_link(this, child, beforeChild);
  this.addChildNode_$2(child, beforeChild);
  if (this.get$inDocument() === true)
    child._mount$0();
  this.onChildAdded_$1(child);
  if (parentChanged)
    child.onParentChanged_$1(oldParent);
},
 addChild$1: function(child) {
  return this.addChild$2(child,null)
},
 remove$0: function() {
  if (!(this.get$parent() == null))
    this.get$parent()._removeChild$1(this);
  else if (this.get$inDocument() === true)
    this._removeFromDocument$0();
},
 _removeChild$2: function(child, notifyChild) {
  var t1;
  if (!(child.get$parent() === this))
    return;
  this.beforeChildRemoved_$1(child);
  t1 = notifyChild === true;
  if (t1)
    child.beforeParentChanged_$1(null);
  if (this.get$inDocument() === true)
    child._unmount$0();
  this.removeChildNode_$1(child);
  $._ViewImpl_unlink(this, child);
  if (t1)
    child.onParentChanged_$1(this);
  this.onChildRemoved_$1(child);
},
 _removeChild$1: function(child) {
  return this._removeChild$2(child,true)
},
 addChildNode_$2: function(child, beforeChild) {
  var beforeNode;
  if (!(beforeChild == null)) {
    beforeNode = beforeChild.get$node();
    beforeNode.get$parent().insertBefore$2(child.get$node(), beforeNode);
  } else
    $.add$1(this.get$node().get$nodes(), child.get$node());
},
 removeChildNode_$1: function(child) {
  child.get$node().remove$0();
},
 get$node: function() {
  if (this._node == null) {
    this._node = this.render_$0();
    this._initNode$0();
  }
  return this._node;
},
 _initNode$0: function() {
  var t1 = this.get$node().get$classes();
  $.add$1(t1, $.get$viewConfig().get$classPrefix());
  $.add$1(t1, $.S($.get$viewConfig().get$classPrefix()) + $.S(this.get$className()));
},
 render_$0: function() {
  return $.Element_Element$tag('div');
},
 getNode$1: function(subId) {
  var subId0;
  if ($.get$isEmpty(subId) === true)
    return this.get$node();
  subId0 = '#' + $.S(this.get$uuid()) + '-' + subId;
  return this.get$inDocument() === true ? $.document().query$1(subId0) : this.get$node().query$1(subId0);
},
 get$maskNode: function() {
  var di = $.index($.get$dialogInfos(), this);
  return !(di == null) ? di.get$mask() : null;
},
 get$inDocument: function() {
  return this._inDoc;
},
 addToDocument$3$layout$mode$ref: function(layout, mode, ref) {
  var t1, p, nxt, refid, dlgInfo;
  this.remove$0();
  $._ViewImpl_init();
  if (ref == null) {
    ref = $.document().query$1('#v-main');
    t1 = ref == null;
  } else
    t1 = false;
  if (t1)
    ref = $.document().get$body();
  switch (mode) {
    case 'before':
      p = ref.get$parent();
      nxt = ref;
      break;
    case 'replace':
      refid = ref.get$id();
      if ($.get$isEmpty(refid) !== true && $.get$isEmpty(this.get$id()) === true)
        this.set$id(refid);
      p = ref.get$parent();
      nxt = ref.get$nextElementSibling();
      ref.remove$0();
      break;
    case 'inner':
      $.clear(ref.get$nodes());
      p = ref;
      nxt = null;
      break;
    case 'dialog':
      t1 = $.get$dialogInfos();
      dlgInfo = $._ViewImpl_createDialog(ref, this, 'v-mask');
      $.indexSet(t1, this, dlgInfo);
      t1 = $.get$ViewUtil__views();
      p = dlgInfo.cave;
      $.indexSet(t1, p, this);
      if ($.get$isEmpty(this.get$profile().get$location()) === true)
        this.get$profile().set$location('center center');
      nxt = null;
      break;
    default:
      p = ref;
      nxt = null;
      break;
  }
  if (!(nxt == null))
    nxt.get$parent().insertBefore$2(this.get$node(), nxt);
  else if (!(p == null))
    $.add$1(p.get$nodes(), this.get$node());
  this._mount$0();
  $.addAll(this.get$classes(), $._rootClasses());
  $.add$1($.get$rootViews(), this);
  if (!$.eqB(layout, false))
    this.requestLayout$1($.eq(layout, true));
},
 addToDocument$1$ref: function(ref) {
  return this.addToDocument$3$layout$mode$ref(null,null,ref)
},
 addToDocument$2$mode$ref: function(mode,ref) {
  return this.addToDocument$3$layout$mode$ref(null,mode,ref)
},
 _removeFromDocument$0: function() {
  var dlgInfo, t1, t2;
  this._unmount$0();
  this.get$classes().removeAll$1($._rootClasses());
  $.ListUtil_remove($.get$rootViews(), this);
  dlgInfo = $.get$dialogInfos().remove$1(this);
  if (!(dlgInfo == null)) {
    t1 = $.get$ViewUtil__views();
    t2 = dlgInfo.get$cave();
    t2.remove$0();
    t1.remove$1(t2);
  } else
    this.get$node().remove$0();
},
 _mount$0: function() {
  var afters, t1, t2, view;
  $.View__mntCnt = $.add($.View__mntCnt, 1);
  try {
    this._mntInit$0();
    this.mount_$0();
  } finally {
    $.View__mntCnt = $.sub($.View__mntCnt, 1);
  }
  if ($.eqB($.View__mntCnt, 0))
    if ($.get$isEmpty($.get$View__afters()) !== true) {
      afters = $._ListImpl_List$from($.get$View__afters(), 'dynamic');
      $.setRuntimeTypeInfo(afters, {runtimeType: 'List<dynamic>'});
      $.clear($.get$View__afters());
      for (t1 = $.iterator(afters); t1.get$hasNext() === true;) {
        t2 = t1.next$0();
        view = $.index(t2, 0);
        if (view.get$inDocument() === true)
          $.index(t2, 1).call$1(view);
      }
    }
},
 _unmount$0: function() {
  if (this._inDoc) {
    this.unmount_$0();
    this._mntClean$0();
  }
},
 mount_$0: function() {
  var child;
  for (var child = this.get$firstChild(); !(child == null); child = child.get$nextSibling()) {
    child._mntInit$0();
    child.mount_$0();
  }
  this.sendEvent$1($.ViewEvent$('mount', null));
},
 unmount_$0: function() {
  var child;
  this.sendEvent$1($.ViewEvent$('unmount', null));
  for (var child = this.get$firstChild(); !(child == null); child = child.get$nextSibling()) {
    child.unmount_$0();
    child._mntClean$0();
  }
},
 _mntInit$0: function() {
  var t1, t3;
  this._inDoc = true;
  t1 = $.get$ViewUtil__views();
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this._mntInit$0$bailout(1, t1);
  t3 = this.get$node();
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = this;
},
 _mntInit$0$bailout: function(state0, t1) {
  $.indexSet(t1, this.get$node(), this);
},
 _mntClean$0: function() {
  $.get$ViewUtil__views().remove$1(this.get$node());
  this._mntAttrs = null;
  this._inDoc = false;
},
 requestLayout$2: function(immediate, descendantOnly) {
  $.get$layoutManager().requestLayout$3(this, immediate, descendantOnly);
},
 requestLayout$0: function() {
  return this.requestLayout$2(false,false)
},
 requestLayout$1: function(immediate) {
  return this.requestLayout$2(immediate,false)
},
 doLayout_$1: function(mctx) {
  $.get$layoutManager().doLayout$2(mctx, this);
},
 measureWidth_$1: function(mctx) {
  return this.get$isMeasuredByContent() === true ? mctx.measureWidthByContent$2(this, true) : mctx.measureWidth$1(this);
},
 measureHeight_$1: function(mctx) {
  return this.get$isMeasuredByContent() === true ? mctx.measureHeightByContent$2(this, true) : mctx.measureHeight$1(this);
},
 get$isMeasuredByContent: function() {
  return this.get$isViewGroup() !== true;
},
 shallLayout_$1: function(child) {
  var v;
  if (child.get$visible() !== true)
    return false;
  v = child.get$style().get$position();
  if (typeof v !== 'string')
    return this.shallLayout_$1$bailout(1, v);
  return $.get$isEmpty(v) === true || v === 'absolute';
},
 shallLayout_$1$bailout: function(state0, v) {
  return $.get$isEmpty(v) === true || $.eqB(v, 'absolute');
},
 get$visible: function() {
  return !$.eqB(this.get$node().get$style().get$display(), 'none');
},
 set$visible: function(visible) {
  var changed, t1, t2;
  changed = !$.eqB(visible, this.get$visible());
  t1 = visible === true;
  t2 = t1 ? '' : 'none';
  this.get$node().get$style().set$display(t2);
  if (this._inDoc && changed && t1)
    this.requestLayout$1(true);
},
 get$left: function() {
  return this._left;
},
 set$left: function(left) {
  var t1;
  this._left = left;
  t1 = $.CSS_px(left);
  this.get$node().get$style().set$left(t1);
  $.ViewImpl_leftUpdated(this);
},
 get$top: function() {
  return this._top;
},
 set$top: function(top$) {
  var t1;
  this._top = top$;
  t1 = $.CSS_px(top$);
  this.get$node().get$style().set$top(t1);
  $.ViewImpl_topUpdated(this);
},
 get$width: function() {
  return this._width;
},
 set$width: function(width) {
  var t1;
  this._width = width;
  t1 = $.CSS_px(width);
  this.get$node().get$style().set$width(t1);
  $.ViewImpl_widthUpdated(this);
},
 get$height: function() {
  return this._height;
},
 set$height: function(height) {
  var t1;
  this._height = height;
  t1 = $.CSS_px(height);
  this.get$node().get$style().set$height(t1);
  $.ViewImpl_heightUpdated(this);
},
 get$realWidth: function() {
  var t1 = this._width;
  return !(t1 == null) ? t1 : $.DOMAgent_DOMAgent(this.get$node()).get$width();
},
 get$realHeight: function() {
  var t1 = this._height;
  return !(t1 == null) ? t1 : $.DOMAgent_DOMAgent(this.get$node()).get$height();
},
 get$innerWidth: function() {
  return $.DOMAgent_DOMAgent(this.get$node()).get$innerWidth();
},
 get$innerHeight: function() {
  return $.DOMAgent_DOMAgent(this.get$node()).get$innerHeight();
},
 get$pageOffset: function() {
  var left, top$, view, t1;
  if (this._inDoc)
    return $.DOMAgent_DOMAgent(this.get$node()).get$pageOffset();
  for (left = 0, top$ = 0, view = this; true;) {
    t1 = view.get$left();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    left += t1;
    t1 = view.get$top();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    top$ += t1;
    if (!$.eqB(view.get$style().get$position(), 'fixed')) {
      view = view.get$parent();
      t1 = view == null;
    } else
      t1 = true;
    if (t1)
      return $.Offset$(left, top$);
  }
},
 get$layout: function() {
  if (this._layout == null)
    this._layout = $.LayoutDeclaration$(this);
  return this._layout;
},
 get$profile: function() {
  if (this._profile == null)
    this._profile = $.ProfileDeclaration$(this);
  return this._profile;
},
 get$style: function() {
  if (this._style == null)
    this._style = $._CSSStyleImpl$(this);
  return this._style;
},
 get$classes: function() {
  return this.get$node().get$classes();
},
 get$on: function() {
  return this._initEventListenerInfo$0().get$on();
},
 sendEvent$2: function(event$, type) {
  var t1;
  if (event$.get$target() == null)
    event$.set$target(this);
  t1 = this._evlInfo;
  return !(t1 == null) && t1.send$2(event$, type) === true;
},
 sendEvent$1: function(event$) {
  return this.sendEvent$2(event$,null)
},
 onEventListened_$2: function(type, target) {
  return this._evlInfo.onEventListened_$2(type, target);
},
 onEventListened_$1: function(type) {
  return this.onEventListened_$2(type,null)
},
 onEventUnlistened_$2: function(type, target) {
  return this._evlInfo.onEventUnlistened_$2(type, target);
},
 onEventUnlistened_$1: function(type) {
  return this.onEventUnlistened_$2(type,null)
},
 get$dataAttributes: function() {
  var t1 = this._dataAttrs;
  return !(t1 == null) ? t1 : $.MapUtil_onDemand(new $.View_dataAttributes_anon(this));
},
 toString$0: function() {
  var t1 = $.S(this.get$className()) + '(';
  return t1 + $.S($.get$isEmpty(this.get$id()) === true ? this.get$uuid() : this.get$id()) + ')';
},
 is$View: true
};

$$.UIException = {"": ["message?"],
 "super": "Object",
 toString$0: function() {
  return 'UIException(' + this.message + ')';
},
 is$Exception: true
};

$$.Declaration = {"": [],
 "super": "Object",
 set$text: function(text) {
  var t1, pair, j, key, value;
  $.clear(this._props);
  for (t1 = $.iterator($.split($._s(text), ';')); t1.get$hasNext() === true;) {
    pair = $.trim(t1.next$0());
    if ($.get$isEmpty(pair) === true)
      continue;
    j = $.indexOf$1(pair, ':');
    if ($.gtB(j, 0)) {
      key = $.trim($.substring$2(pair, 0, j));
      value = $.trim($.substring$1(pair, $.add(j, 1)));
      if ($.get$isEmpty(key) !== true) {
        this.setProperty$2(key, value);
        continue;
      }
    }
    throw $.$$throw($.UIException$('Unknown declaration: ' + $.S(pair)));
  }
},
 getPropertyValue$1: function(propertyName) {
  var value = $.index(this._props, propertyName);
  return !(value == null) ? value : '';
},
 removeProperty$1: function(propertyName) {
  this._props.remove$1(propertyName);
},
 setProperty$2: function(propertyName, value) {
  var t1, t3;
  if (value == null || $.get$isEmpty(value) === true)
    this.removeProperty$1(propertyName);
  else {
    t1 = this._props;
    if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
      return this.setProperty$2$bailout(1, propertyName, value, t1);
    t3 = $.trim(value);
    if (propertyName !== (propertyName | 0))
      throw $.iae(propertyName);
    if (propertyName < 0 || propertyName >= t1.length)
      throw $.ioore(propertyName);
    t1[propertyName] = t3;
  }
},
 setProperty$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env2;
      value = env1;
      propertyName = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      var t1, value, propertyName;
      if (state0 === 0 && (value == null || $.get$isEmpty(value) === true))
        this.removeProperty$1(propertyName);
      else
        switch (state0) {
          case 0:
            t1 = this._props;
          case 1:
            state0 = 0;
            $.indexSet(t1, propertyName, $.trim(value));
        }
  }
}
};

$$.ProfileDeclaration = {"": ["_owner", "_anchorView", "_props"],
 "super": "Declaration",
 get$anchor: function() {
  return this.getPropertyValue$1('anchor');
},
 get$anchorView: function() {
  var t1, anc;
  t1 = this._anchorView;
  if (!(t1 == null))
    return t1;
  anc = this.get$anchor();
  if ($.get$isEmpty(anc) === true)
    t1 = $.get$isEmpty(this.get$location()) === true ? null : this._owner.get$parent();
  else
    t1 = this._owner.query$1(anc);
  return t1;
},
 set$anchorView: function(view) {
  var t1, av, t2, t3, t4;
  t1 = view == null;
  if (t1)
    av = '';
  else {
    t2 = this._owner;
    t3 = t2.get$parent();
    if (view == null ? t3 == null : view === t3)
      av = 'parent';
    else {
      if (!t1)
        if (!(view.get$parent() == null))
          if (!(t2.get$parent() == null)) {
            t1 = view.get$parent();
            t3 = t2.get$parent();
            t4 = !(t1 == null ? t3 == null : t1 === t3);
            t1 = t4;
          } else
            t1 = false;
        else
          t1 = false;
      else
        t1 = false;
      if (t1)
        throw $.$$throw($.UIException$('Only parent or sibling allowed for an anchor, not ' + $.S(view)));
      if (view === t2)
        throw $.$$throw($.CTC40);
      av = $.get$isEmpty(view.get$id()) === true ? '' : '#' + $.S(view.get$id());
    }
  }
  this.setProperty$2('anchor', av);
  this._anchorView = view;
},
 get$location: function() {
  return this.getPropertyValue$1('location');
},
 set$location: function(value) {
  this.setProperty$2('location', value);
},
 get$offset: function() {
  return this.getPropertyValue$1('offset');
},
 get$align: function() {
  return this.getPropertyValue$1('align');
},
 get$spacing: function() {
  return this.getPropertyValue$1('spacing');
},
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$2('width', value);
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$2('height', value);
},
 get$minWidth: function() {
  return this.getPropertyValue$1('min-width');
},
 get$minHeight: function() {
  return this.getPropertyValue$1('min-height');
},
 get$maxWidth: function() {
  return this.getPropertyValue$1('max-width');
},
 get$maxHeight: function() {
  return this.getPropertyValue$1('max-height');
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); }
};

$$.LayoutDeclaration = {"": ["_owner", "_handler", "_props"],
 "super": "Declaration",
 get$type: function() {
  return this.getPropertyValue$1('type');
},
 set$type: function(value) {
  this.setProperty$2('type', value);
},
 get$handler: function() {
  var t1, handler;
  t1 = this._handler;
  if (!(t1 == null))
    return t1;
  handler = $.get$layoutManager().getLayout$1(this.get$type());
  if (handler == null)
    throw $.$$throw($.UIException$('Unknown type, ' + $.S(this.get$type())));
  return handler;
},
 get$orient: function() {
  return this.getPropertyValue$1('orient');
},
 set$orient: function(value) {
  this.setProperty$2('orient', value);
},
 get$align: function() {
  return this.getPropertyValue$1('align');
},
 get$spacing: function() {
  return this.getPropertyValue$1('spacing');
},
 get$gap: function() {
  return this.getPropertyValue$1('gap');
},
 set$gap: function(value) {
  this.setProperty$2('gap', value);
},
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$2('width', value);
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$2('height', value);
}
};

$$._ChildInfo = {"": ["firstChild=", "lastChild=", "nChild=", "children="],
 "super": "Object"
};

$$._EventListenerInfo = {"": ["_owner", "on?", "_listeners", "_domListeners"],
 "super": "Object",
 isEmpty$1: function(type) {
  var t1, ls;
  t1 = this._listeners;
  if (!(t1 == null)) {
    ls = $.index(t1, type);
    t1 = ls == null || $.get$isEmpty(ls) === true;
  } else
    t1 = true;
  return t1;
},
 get$isEmpty: function() { return new $.BoundClosure(this, 'isEmpty$1'); },
 add$2: function(type, listener) {
  var t1 = {};
  if (listener == null)
    throw $.$$throw($.CTC19);
  if (this._listeners == null)
    this._listeners = $.makeLiteralMap([]);
  t1.first_10 = false;
  $.add$1(this._listeners.putIfAbsent$2(type, new $._EventListenerInfo_add_anon(t1)), listener);
  if (t1.first_10 === true)
    this._owner.onEventListened_$1(type);
},
 remove$2: function(type, listener) {
  var t1, ls, j, found;
  t1 = this._listeners;
  if (!(t1 == null)) {
    ls = $.index(t1, type);
    t1 = !(ls == null);
  } else {
    ls = null;
    t1 = false;
  }
  if (t1) {
    j = $.indexOf$1(ls, listener);
    if ($.geB(j, 0)) {
      $.removeRange(ls, j, 1);
      if ($.get$isEmpty(ls) === true)
        this._owner.onEventUnlistened_$1(type);
      found = true;
    } else
      found = false;
  } else
    found = false;
  return found;
},
 send$2: function(event$, type) {
  var t1, ls, dispatched;
  if (type == null)
    type = event$.get$type();
  t1 = this._listeners;
  if (!(t1 == null)) {
    ls = $.index(t1, type);
    t1 = !(ls == null);
  } else {
    ls = null;
    t1 = false;
  }
  if (t1) {
    event$.set$currentTarget(this._owner);
    for (t1 = $._ListImpl_List$from(ls, 'dynamic'), $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'}), t1 = $.iterator(t1), dispatched = false; t1.get$hasNext() === true; dispatched = true) {
      t1.next$0().call$1(event$);
      if (event$.get$isPropagationStopped() === true)
        return true;
    }
  } else
    dispatched = false;
  return dispatched;
},
 onEventListened_$2: function(type, target) {
  var disp, t1, ln;
  disp = $._domEventDispatcher(type);
  if (!(disp == null)) {
    t1 = this._owner;
    ln = disp.call$1(t1);
    if (this._domListeners == null)
      this._domListeners = $.makeLiteralMap([]);
    t1 = $.index((!(target == null) ? target : $._domEvtTarget(type, t1.get$node())).get$on(), $.toLowerCase(type));
    $.indexSet(this._domListeners, type, ln);
    $.add$1(t1, ln);
  }
},
 onEventUnlistened_$2: function(type, target) {
  var t1, ln;
  t1 = this._domListeners;
  if (!(t1 == null)) {
    ln = t1.remove$1(type);
    t1 = !(ln == null);
  } else {
    ln = null;
    t1 = false;
  }
  if (t1)
    $.index((!(target == null) ? target : $._domEvtTarget(type, this._owner.get$node())).get$on(), $.toLowerCase(type)).remove$1(ln);
},
 _EventListenerInfo$1: function(_owner) {
  this.on = $.ViewEvents$(this);
}
};

$$._VirtualIdSpace = {"": ["_owner", "_fellows"],
 "super": "Object",
 query$1: function(selector) {
  return this._owner.query$1(selector);
},
 getFellow$1: function(id) {
  return $.index(this._fellows, id);
},
 bindFellow_$2: function(id, fellow) {
  var t1, t2;
  t1 = !(fellow == null);
  t2 = this._fellows;
  if (t1)
    $.indexSet(t2, id, fellow);
  else
    t2.remove$1(id);
},
 get$fellows: function() {
  return this._fellows.get$values();
},
 toString$0: function() {
  return '_VirtualIdSpace(' + $.S(this._owner) + ': ' + $.S(this._fellows) + ')';
},
 is$IdSpace: true
};

$$._SubviewSeq = {"": ["_owner"],
 "super": "Sequence",
 get$length: function() {
  return this._owner.get$childCount();
},
 operator$index$1: function(index) {
  var index2, t1, t2, child;
  if (typeof index !== 'number')
    return this.operator$index$1$bailout(1, index);
  $.ListUtil_rangeCheck(this, index, 1);
  index2 = $.sub($.sub($.get$length(this), index), 1);
  if (typeof index2 !== 'number')
    return this.operator$index$1$bailout(2, index, index2);
  t1 = index <= index2;
  t2 = this._owner;
  if (t1) {
    child = t2.get$firstChild();
    for (; --index, index >= 0;)
      child = child.get$nextSibling();
    return child;
  } else {
    child = t2.get$lastChild();
    for (; --index2, index2 >= 0;)
      child = child.get$previousSibling();
    return child;
  }
},
 operator$index$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      index = env0;
      break;
    case 2:
      index2 = env1;
      index = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.ListUtil_rangeCheck(this, index, 1);
      index2 = $.sub($.sub($.get$length(this), index), 1);
    case 2:
      var index, index2, t1, t2, child;
      state0 = 0;
      t1 = $.leB(index, index2);
      t2 = this._owner;
      if (t1) {
        child = t2.get$firstChild();
        for (; index = $.sub(index, 1), $.geB(index, 0);)
          child = child.get$nextSibling();
        return child;
      } else {
        child = t2.get$lastChild();
        for (; index2 = $.sub(index2, 1), $.geB(index2, 0);)
          child = child.get$previousSibling();
        return child;
      }
  }
}
};

$$._SubviewList = {"": ["_owner", "sequence"],
 "super": "SequenceList",
 operator$indexSet$2: function(index, value) {
  var w, next;
  if (value == null)
    throw $.$$throw($.CTC21);
  w = this.operator$index$1(index);
  if (!(w == null ? value == null : w === value)) {
    next = w.get$nextSibling();
    w.remove$0();
    this._owner.addChild$2(value, next);
  }
},
 add$1: function(view) {
  this._owner.addChild$1(view);
},
 removeLast$0: function() {
  var w = $.get$last(this);
  if (!(w == null))
    w.remove$0();
  return w;
},
 removeRange$2: function(start, length$) {
  var child, next;
  if (length$ <= 0)
    return;
  child = this.operator$index$1(start);
  while (true) {
    --length$;
    if (!(length$ >= 0 && !(child == null)))
      break;
    next = child.get$nextSibling();
    child.remove$0();
    child = next;
  }
}
};

$$._CSSStyleImpl = {"": ["_lib1_view?"],
 "super": "Object",
 get$_st: function() {
  return this._lib1_view.get$node().get$style();
},
 _g$1: function(n) {
  var t1 = $.CSS_name(n);
  return this.get$_st().getPropertyValue$1(t1);
},
 _s$2: function(n, v) {
  return this.setProperty$3($.CSS_name(n), v, '');
},
 getPropertyValue$1: function(propertyName) {
  return this.get$_st().getPropertyValue$1(propertyName);
},
 setProperty$3: function(propertyName, value, priority) {
  var t1 = $ === priority;
  if (t1)
    priority = null;
  if (!t1)
    this.get$_st().setProperty$3(propertyName, value, priority);
  else
    this.get$_st().setProperty$2(propertyName, value);
},
 setProperty$2: function(propertyName,value) {
  return this.setProperty$3(propertyName,value,$)
},
 set$cssText: function(value) {
  var style, t1;
  style = this.get$_st();
  style.set$cssText(value);
  t1 = this._lib1_view;
  style.set$left($.CSS_px(t1.get$left()));
  style.set$top($.CSS_px(t1.get$top()));
  if (!(t1.get$width() == null))
    style.set$width($.CSS_px(t1.get$width()));
  if (!(t1.get$height() == null))
    style.set$height($.CSS_px(t1.get$height()));
},
 get$length: function() {
  return $.get$length(this.get$_st());
},
 set$background: function(v) {
  this._s$2('background', v);
},
 set$border: function(v) {
  this._s$2('border', v);
},
 get$borderBottom: function() {
  return this._g$1('border-bottom');
},
 get$borderBottomWidth: function() {
  return this._g$1('border-bottom-width');
},
 set$borderColor: function(v) {
  this._s$2('border-color', v);
},
 get$borderLeft: function() {
  return this._g$1('border-left');
},
 get$borderLeftWidth: function() {
  return this._g$1('border-left-width');
},
 set$borderRadius: function(v) {
  this._s$2('border-radius', v);
},
 get$borderRight: function() {
  return this._g$1('border-right');
},
 get$borderRightWidth: function() {
  return this._g$1('border-right-width');
},
 get$borderTop: function() {
  return this._g$1('border-top');
},
 get$borderTopWidth: function() {
  return this._g$1('border-top-width');
},
 get$bottom: function() {
  return this._g$1('bottom');
},
 set$boxSizing: function(v) {
  this._s$2('box-sizing', v);
},
 get$clear: function() {
  return this._g$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 set$color: function(v) {
  this._s$2('color', v);
},
 get$display: function() {
  return this._g$1('display');
},
 set$display: function(v) {
  this._s$2('display', v);
},
 get$filter: function() {
  return this._g$1('filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 set$fontSize: function(v) {
  this._s$2('font-size', v);
},
 get$height: function() {
  return this._g$1('height');
},
 set$height: function(v) {
  this._s$2('height', v);
},
 get$left: function() {
  return this._g$1('left');
},
 set$left: function(v) {
  this._s$2('left', v);
},
 set$lineHeight: function(v) {
  this._s$2('line-height', v);
},
 get$marginBottom: function() {
  return this._g$1('margin-bottom');
},
 get$marginLeft: function() {
  return this._g$1('margin-left');
},
 get$marginRight: function() {
  return this._g$1('margin-right');
},
 get$marginTop: function() {
  return this._g$1('margin-top');
},
 get$mask: function() {
  return this._g$1('mask');
},
 get$maxHeight: function() {
  return this._g$1('max-height');
},
 get$maxWidth: function() {
  return this._g$1('max-width');
},
 get$minHeight: function() {
  return this._g$1('min-height');
},
 get$minWidth: function() {
  return this._g$1('min-width');
},
 set$opacity: function(v) {
  this._s$2('opacity', v);
},
 get$overflow: function() {
  return this._g$1('overflow');
},
 set$overflow: function(v) {
  this._s$2('overflow', v);
},
 get$paddingBottom: function() {
  return this._g$1('padding-bottom');
},
 get$paddingLeft: function() {
  return this._g$1('padding-left');
},
 get$paddingRight: function() {
  return this._g$1('padding-right');
},
 get$paddingTop: function() {
  return this._g$1('padding-top');
},
 get$position: function() {
  return this._g$1('position');
},
 set$position: function(v) {
  this._s$2('position', v);
},
 get$resize: function() {
  return this._g$1('resize');
},
 get$right: function() {
  return this._g$1('right');
},
 get$size: function() {
  return this._g$1('size');
},
 get$top: function() {
  return this._g$1('top');
},
 set$top: function(v) {
  this._s$2('top', v);
},
 get$transform: function() {
  return this._g$1('transform');
},
 set$transform: function(v) {
  this._s$2('transform', v);
},
 get$visibility: function() {
  return this._g$1('visibility');
},
 set$visibility: function(v) {
  this._s$2('visibility', v);
},
 get$whiteSpace: function() {
  return this._g$1('white-space');
},
 set$whiteSpace: function(v) {
  this._s$2('white-space', v);
},
 get$width: function() {
  return this._g$1('width');
},
 set$width: function(v) {
  this._s$2('width', v);
},
 get$zIndex: function() {
  return this._g$1('z-index');
},
 set$zIndex: function(v) {
  this._s$2('z-index', v);
}
};

$$._CSSAgent = {"": ["_node"],
 "super": "Object",
 get$style: function() {
  return $.DOMAgent_DOMAgent(this._node).get$computedStyle();
},
 sumHor$3$bor$mar$pad: function(bor, mar, pad) {
  return this._sum$4(false, mar, bor, pad);
},
 sumHor$1$bor: function(bor) {
  return this.sumHor$3$bor$mar$pad(bor,false,false)
},
 sumHor$1$pad: function(pad) {
  return this.sumHor$3$bor$mar$pad(false,false,pad)
},
 sumVer$3$bor$mar$pad: function(bor, mar, pad) {
  return this._sum$4(true, mar, bor, pad);
},
 sumVer$1$bor: function(bor) {
  return this.sumVer$3$bor$mar$pad(bor,false,false)
},
 sumVer$1$pad: function(pad) {
  return this.sumVer$3$bor$mar$pad(false,false,pad)
},
 _sum$4: function(ver, margin, border, padding) {
  var s, t1, sum;
  s = this.get$style();
  if (margin === true) {
    t1 = ver ? $.add($.CSS_intOf(s.get$marginTop(), null), $.CSS_intOf(s.get$marginBottom(), null)) : $.add($.CSS_intOf(s.get$marginLeft(), null), $.CSS_intOf(s.get$marginRight(), null));
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    sum = 0 + t1;
  } else
    sum = 0;
  if (border === true) {
    t1 = ver ? $.add($.CSS_intOf(s.get$borderTop(), null), $.CSS_intOf(s.get$borderBottom(), null)) : $.add($.CSS_intOf(s.get$borderLeft(), null), $.CSS_intOf(s.get$borderRight(), null));
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    sum += t1;
  }
  if (padding === true) {
    t1 = ver ? $.add($.CSS_intOf(s.get$paddingTop(), null), $.CSS_intOf(s.get$paddingBottom(), null)) : $.add($.CSS_intOf(s.get$paddingLeft(), null), $.CSS_intOf(s.get$paddingRight(), null));
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    sum += t1;
  }
  return sum;
}
};

$$.Button = {"": ["_text", "_uuid", "_lib1_parent", "_nextSibling", "_prevSibling", "_virtIS", "_childInfo", "_evlInfo", "_dataAttrs", "_mntAttrs", "_annos", "_style", "_node", "_left", "_top", "_width", "_height", "_profile", "_layout", "_inDoc"],
 "super": "TextView",
 get$_buttonNode: function() {
  return this.get$node();
},
 get$type: function() {
  return this.get$_buttonNode().get$type();
},
 set$type: function(type) {
  var t1 = this.get$node();
  t1.$dom_setAttribute$2('type', type == null || $.get$isEmpty(type) === true ? 'button' : type);
},
 render_$0: function() {
  return $.Element_Element$html('<button>' + $.S(this.get$encodedText()) + '</button>');
}
};

$$.Panel = {"": ["_uuid", "_lib1_parent", "_nextSibling", "_prevSibling", "_virtIS", "_childInfo", "_evlInfo", "_dataAttrs", "_mntAttrs", "_annos", "_style", "_node", "_left", "_top", "_width", "_height", "_profile", "_layout", "_inDoc"],
 "super": "View",
 get$contentNode: function() {
  return this.getNode$1('inner');
},
 addButton$2: function(name$, listener) {
  this._addBtn$3(this.getNode$1('btns'), name$, listener);
},
 _addBtn$3: function(btns, name$, listener) {
  var t1, t2;
  t1 = btns.get$nodes();
  t2 = $.Element_Element$html('<div class="v-btn v-btn-' + name$ + '" id="' + $.S(this.get$uuid()) + '-btn-' + name$ + '"></div>');
  $.add$1(t2.get$on().get$click(), listener);
  $.add$1(t1, t2);
},
 render_$0: function() {
  return $.Element_Element$html('<div class="v-shadow">\r\n  <div class="v-btns" id="' + $.S(this.get$uuid()) + '-btns"></div>\r\n  <div class="v-body" id="' + $.S(this.get$uuid()) + '-body">\r\n    <div class="v-inner" id="' + $.S(this.get$uuid()) + '-inner"></div>\r\n  </div>\r\n</div>\r\n');
},
 addChildNode_$2: function(child, beforeChild) {
  if (!(beforeChild == null))
    $.View.prototype.addChildNode_$2.call(this, child, beforeChild);
  else
    $.add$1(this.get$contentNode().get$nodes(), child.get$node());
},
 set$height: function(height) {
  $.View.prototype.set$height.call(this, height);
  if (this.get$inDocument() === true)
    this._adjustHeight$0();
},
 set$width: function(width) {
  $.View.prototype.set$width.call(this, width);
  if (this.get$inDocument() === true)
    this._adjustWidth$0();
},
 onPreLayout_$1: function(mctx) {
  $.View.prototype.onPreLayout_$1.call(this, mctx);
  if (this.get$inDocument() === true) {
    this._adjustWidth$0();
    this._adjustHeight$0();
  }
},
 _adjustWidth$0: function() {
  var bd, t1;
  bd = this.getNode$1('body');
  t1 = $.CSS_px($.sub($.DOMAgent_DOMAgent(bd).get$innerWidth(), $._CSSAgent$(bd).sumHor$1$pad(true)));
  this.get$contentNode().get$style().set$width(t1);
},
 _adjustHeight$0: function() {
  var bd, bdcss, t1;
  bd = this.getNode$1('body');
  bdcss = $._CSSAgent$(bd);
  t1 = $.CSS_px($.sub($.DOMAgent_DOMAgent(this.get$node()).get$innerHeight(), $._CSSAgent$(this.get$node()).sumVer$1$pad(true)));
  bd.get$style().set$height(t1);
  t1 = $.CSS_px($.sub($.DOMAgent_DOMAgent(bd).get$innerHeight(), bdcss.sumVer$1$pad(true)));
  this.get$contentNode().get$style().set$height(t1);
},
 get$innerWidth: function() {
  return this.get$inDocument() === true ? $.DOMAgent_DOMAgent(this.get$contentNode()).get$innerWidth() : 0;
},
 get$innerHeight: function() {
  return this.get$inDocument() === true ? $.DOMAgent_DOMAgent(this.get$contentNode()).get$innerHeight() : 0;
},
 measureHeight_$1: function(mctx) {
  var t1, t3, bdh, t5;
  t1 = $._CSSAgent$(this.getNode$1('body')).sumVer$3$bor$mar$pad(true, true, true);
  if (typeof t1 !== 'number')
    return this.measureHeight_$1$bailout(1, t1, mctx);
  t3 = $.View.prototype.measureHeight_$1.call(this, mctx);
  if (typeof t3 !== 'number')
    return this.measureHeight_$1$bailout(2, t1, t3);
  bdh = t1 + t3;
  t3 = $.DOMAgent_DOMAgent(this.getNode$1('btns')).get$height();
  if (typeof t3 !== 'number')
    return this.measureHeight_$1$bailout(3, t3, bdh);
  t5 = $._CSSAgent$(this.get$node()).sumVer$1$bor(true);
  if (typeof t5 !== 'number')
    return this.measureHeight_$1$bailout(4, t3, bdh, t5);
  return $.max(bdh, t3 + t5);
},
 measureHeight_$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      mctx = env1;
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
    case 3:
      bdh = env1;
      t3 = env0;
      break;
    case 4:
      t5 = env2;
      bdh = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = $._CSSAgent$(this.getNode$1('body')).sumVer$3$bor$mar$pad(true, true, true);
    case 1:
      state0 = 0;
      t3 = $.View.prototype.measureHeight_$1.call(this, mctx);
    case 2:
      state0 = 0;
      bdh = $.add(t1, t3);
      t3 = $.DOMAgent_DOMAgent(this.getNode$1('btns')).get$height();
    case 3:
      state0 = 0;
      t5 = $._CSSAgent$(this.get$node()).sumVer$1$bor(true);
    case 4:
      var t1, mctx, t3, bdh, t5;
      state0 = 0;
      return $.max(bdh, $.add(t3, t5));
  }
},
 measureWidth_$1: function(mctx) {
  var t1, t3, bdw, t5;
  t1 = $._CSSAgent$(this.getNode$1('body')).sumHor$3$bor$mar$pad(true, true, true);
  if (typeof t1 !== 'number')
    return this.measureWidth_$1$bailout(1, t1, mctx);
  t3 = $.View.prototype.measureWidth_$1.call(this, mctx);
  if (typeof t3 !== 'number')
    return this.measureWidth_$1$bailout(2, t1, t3);
  bdw = t1 + t3;
  t3 = $.DOMAgent_DOMAgent(this.getNode$1('btns')).get$width();
  if (typeof t3 !== 'number')
    return this.measureWidth_$1$bailout(3, t3, bdw);
  t5 = $._CSSAgent$(this.get$node()).sumHor$1$bor(true);
  if (typeof t5 !== 'number')
    return this.measureWidth_$1$bailout(4, t3, bdw, t5);
  return $.max(bdw, t3 + t5);
},
 measureWidth_$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      mctx = env1;
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
    case 3:
      bdw = env1;
      t3 = env0;
      break;
    case 4:
      t5 = env2;
      bdw = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = $._CSSAgent$(this.getNode$1('body')).sumHor$3$bor$mar$pad(true, true, true);
    case 1:
      state0 = 0;
      t3 = $.View.prototype.measureWidth_$1.call(this, mctx);
    case 2:
      state0 = 0;
      bdw = $.add(t1, t3);
      t3 = $.DOMAgent_DOMAgent(this.getNode$1('btns')).get$width();
    case 3:
      state0 = 0;
      t5 = $._CSSAgent$(this.get$node()).sumHor$1$bor(true);
    case 4:
      var t1, mctx, t3, bdw, t5;
      state0 = 0;
      return $.max(bdw, $.add(t3, t5));
  }
}
};

$$.Style = {"": ["_media", "_uuid", "_lib1_parent", "_nextSibling", "_prevSibling", "_virtIS", "_childInfo", "_evlInfo", "_dataAttrs", "_mntAttrs", "_annos", "_style", "_node", "_left", "_top", "_width", "_height", "_profile", "_layout", "_inDoc"],
 "super": "View",
 get$src: function() {
  var n = this.get$_linkNode();
  return !(n == null) ? n.get$href() : null;
},
 get$_linkNode: function() {
  return this.get$node().query$1('link');
},
 get$media: function() {
  return this._media;
},
 _updateInner$2: function(content$, src) {
  var out, t1;
  out = $.StringBuffer_StringBuffer('');
  t1 = !(src == null);
  if (t1)
    $.add$1($.add$1($.add$1(out, '<link rel="stylesheet" type="text/css" href="'), src), '"');
  else
    $.add$1(out, '<style');
  if (!(this.get$media() == null))
    $.add$1($.add$1($.add$1(out, ' media="'), this.get$media()), '"');
  if (t1)
    $.add$1(out, '/>');
  else {
    $.add$1(out, '>');
    if (!(content$ == null))
      $.add$1(out, content$);
    $.add$1(out, '</style>');
  }
  t1 = $.toString(out);
  this.get$node().set$innerHTML(t1);
},
 get$isViewGroup: function() {
  return false;
},
 toString$0: function() {
  return $.S(this.get$className()) + '(' + $.S(this.get$src()) + ')';
},
 Style$3$content$$media$src: function(content$, media, src) {
  this._media = media;
  this.set$visible(false);
  this._updateInner$2(content$, src);
}
};

$$.TextView = {"": ["_text", "_uuid", "_lib1_parent", "_nextSibling", "_prevSibling", "_virtIS", "_childInfo", "_evlInfo", "_dataAttrs", "_mntAttrs", "_annos", "_style", "_node", "_left", "_top", "_width", "_height", "_profile", "_layout", "_inDoc"],
 "super": "View",
 get$text: function() {
  return this._text;
},
 set$text: function(text) {
  this._text = $._s(text);
  this.get$classes().remove$1('v-html');
  this.updateInner_$0();
},
 updateInner_$1: function(html) {
  var t1, t2;
  t1 = $.S(this.get$encodedText());
  t2 = t1 + $.S(!(html == null) ? html : '');
  this.get$node().set$innerHTML(t2);
},
 updateInner_$0: function() {
  return this.updateInner_$1(null)
},
 get$encodedText: function() {
  return $.XMLUtil_encode(this.get$text(), 0, true, false);
},
 render_$0: function() {
  return $.Element_Element$html('<div>' + $.S(this.get$encodedText()) + '</div>');
},
 get$isViewGroup: function() {
  return false;
},
 toString$0: function() {
  return $.S(this.get$className()) + '(' + $.S(this.get$text()) + ')';
},
 TextView$1: function(text) {
  if (!(text == null) && $.get$isEmpty(text) !== true)
    this.set$text(text);
}
};

$$._OnDemandMap = {"": ["_creator", "_lib4_map"],
 "super": "Object",
 _creator$0: function() { return this._creator.call$0(); },
 operator$index$1: function(key) {
  var t1 = this._lib4_map;
  return !(t1 == null) ? $.index(t1, key) : null;
},
 operator$indexSet$2: function(key, value) {
  var t1 = this._lib4_map;
  if (!(t1 == null))
    ;
  else {
    t1 = this._creator$0();
    this._lib4_map = t1;
  }
  $.indexSet(t1, key, value);
},
 clear$0: function() {
  var t1 = this._lib4_map;
  if (!(t1 == null))
    $.clear(t1);
},
 containsKey$1: function(key) {
  var t1 = this._lib4_map;
  return !(t1 == null) && t1.containsKey$1(key) === true;
},
 forEach$1: function(f) {
  var t1 = this._lib4_map;
  if (!(t1 == null))
    $.forEach(t1, f);
},
 get$keys: function() {
  var t1 = this._lib4_map;
  return !(t1 == null) ? t1.get$keys() : $.CTC0;
},
 get$values: function() {
  var t1 = this._lib4_map;
  return !(t1 == null) ? t1.get$values() : $.CTC0;
},
 get$isEmpty: function() {
  var t1 = this._lib4_map;
  return t1 == null || $.get$isEmpty(t1) === true;
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$length: function() {
  var t1 = this._lib4_map;
  return !(t1 == null) ? $.get$length(t1) : 0;
},
 putIfAbsent$2: function(key, ifAbsent) {
  var t1 = this._lib4_map;
  if (!(t1 == null))
    ;
  else {
    t1 = this._creator$0();
    this._lib4_map = t1;
  }
  return t1.putIfAbsent$2(key, ifAbsent);
},
 remove$1: function(key) {
  var t1 = this._lib4_map;
  return !(t1 == null) ? t1.remove$1(key) : null;
},
 is$Map: function() { return true; }
};

$$.Offset = {"": ["left?", "top?"],
 "super": "Object",
 get$x: function() {
  return this.left;
},
 get$y: function() {
  return this.top;
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Offset)
    t1 = $.eqB(this.left, other.left) && $.eqB(this.top, other.top);
  else
    t1 = false;
  return t1;
},
 operator$sub$1: function(other) {
  return $.Offset$($.sub(this.left, other.get$left()), $.sub(this.top, other.get$top()));
},
 operator$add$1: function(other) {
  return $.Offset$($.add(this.left, other.get$left()), $.add(this.top, other.get$top()));
},
 operator$mul$1: function(scalar) {
  return $.Offset$($.mul(this.left, scalar), $.mul(this.top, scalar));
},
 operator$div$1: function(scalar) {
  return $.Offset$($.div(this.left, scalar), $.div(this.top, scalar));
},
 get$hashCode: function() {
  return $.toInt($.add(this.left, this.top));
},
 toString$0: function() {
  return '(' + $.S(this.left) + ', ' + $.S(this.top) + ')';
},
 is$Offset: true
};

$$.Offset3d = {"": ["zIndex?", "left", "top"],
 "super": "Offset",
 get$z: function() {
  return this.zIndex;
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Offset3d)
    t1 = $.eqB(this.left, other.left) && $.eqB(this.top, other.top) && $.eqB(this.zIndex, other.zIndex);
  else
    t1 = false;
  return t1;
},
 operator$sub$1: function(other) {
  return $.Offset3d$($.sub(this.left, other.get$left()), $.sub(this.top, other.get$top()), $.sub(this.zIndex, other.get$zIndex()));
},
 operator$add$1: function(other) {
  return $.Offset3d$($.add(this.left, other.get$left()), $.add(this.top, other.get$top()), $.add(this.zIndex, other.get$zIndex()));
},
 operator$mul$1: function(scalar) {
  return $.Offset3d$($.mul(this.left, scalar), $.mul(this.top, scalar), $.mul(this.zIndex, scalar));
},
 operator$div$1: function(scalar) {
  return $.Offset3d$($.div(this.left, scalar), $.div(this.top, scalar), $.div(this.zIndex, scalar));
},
 get$hashCode: function() {
  return $.toInt($.add($.add(this.get$x(), this.get$y()), this.get$z()));
},
 toString$0: function() {
  return '(' + $.S(this.get$x()) + ', ' + $.S(this.get$y()) + ', ' + $.S(this.get$z()) + ')';
},
 is$Offset3d: true
};

$$.Size = {"": ["width?", "height?"],
 "super": "Object",
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Size)
    t1 = $.eqB(this.width, other.width) && $.eqB(this.height, other.height);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  return $.toInt($.add(this.width, this.height));
},
 toString$0: function() {
  return '(' + $.S(this.width) + ', ' + $.S(this.height) + ')';
},
 is$Size: true
};

$$.Browser = {"": ["name=", "version!", "safari", "chrome", "msie?", "firefox?", "webkit?", "opera?", "ios?", "android?", "mobile?", "touch?", "webkitVersion", "iosVersion?", "androidVersion?", "size?", "_innerSize", "_innerOfs"],
 "super": "Object",
 toString$0: function() {
  return $.S(this.name) + '(v' + $.S(this.version) + ', ' + $.S(this.size) + ')';
},
 _initBrowserInfo$0: function() {
  var ua, bm, m2, t1, q;
  ua = $.toLowerCase($.window().get$navigator().get$userAgent());
  bm = new $.Browser__initBrowserInfo_anon(this, ua);
  m2 = $.CTC3.firstMatch$1(ua);
  if (!(m2 == null)) {
    this.android = true;
    this.mobile = true;
    this.touch = true;
    this.androidVersion = $.Browser__versionOf(m2.group$1(1), '.');
  } else {
    m2 = $.CTC4.firstMatch$1(ua);
    if (!(m2 == null)) {
      this.ios = true;
      this.mobile = true;
      this.touch = true;
      this.iosVersion = $.Browser__versionOf(m2.group$1(1), '_');
    }
  }
  if (bm.call$1($.CTC5) === true) {
    this.webkit = true;
    this.webkitVersion = this.version;
    if (bm.call$1($.CTC6) === true)
      this.chrome = true;
    else if (bm.call$1($.CTC7) === true)
      this.safari = true;
  } else if (bm.call$1($.CTC8) === true) {
    this.msie = true;
    t1 = $.ge($.indexOf$1(ua, 'IEMobile'), 0);
    this.mobile = t1;
    this.touch = t1;
  } else if (bm.call$1($.CTC9) === true)
    this.opera = true;
  else if ($.ltB($.indexOf$1(ua, 'compatible'), 0) && bm.call$1($.CTC10) === true) {
    this.name = 'firefox';
    this.firefox = true;
  } else {
    this.name = 'unknown';
    this.version = 1;
  }
  q = $.WindowAgent_WindowAgent($.window());
  this.size = $.Size$(q.get$innerWidth(), q.get$innerHeight());
},
 get$innerSize: function() {
  if (this._innerSize == null) {
    var cs = $.DOMAgent_DOMAgent($.document().get$body()).get$computedStyle();
    this._innerSize = $.Size$($.sub($.sub($.sub($.sub(this.size.get$width(), $.CSS_intOf(cs.get$marginLeft(), null)), $.CSS_intOf(cs.get$marginRight(), null)), $.CSS_intOf(cs.get$borderLeft(), null)), $.CSS_intOf(cs.get$borderRight(), null)), $.sub($.sub($.sub($.sub(this.size.get$height(), $.CSS_intOf(cs.get$marginTop(), null)), $.CSS_intOf(cs.get$marginBottom(), null)), $.CSS_intOf(cs.get$borderTop(), null)), $.CSS_intOf(cs.get$borderBottom(), null)));
  }
  return this._innerSize;
},
 updateSize$0: function() {
  var q, newsz;
  q = $.WindowAgent_WindowAgent($.window());
  newsz = $.Size$(q.get$innerWidth(), q.get$innerHeight());
  if (!$.eqB(newsz, this.size)) {
    this.size = newsz;
    this._innerSize = null;
    this._innerOfs = null;
  }
},
 Browser$0: function() {
  this._initBrowserInfo$0();
}
};

$$.DOMAgent = {"": ["node?"],
 "super": "Object",
 get$innerWidth: function() {
  return this.node.get$clientWidth();
},
 get$innerHeight: function() {
  return this.node.get$clientHeight();
},
 get$innerSize: function() {
  return $.Size$(this.get$innerWidth(), this.get$innerHeight());
},
 get$width: function() {
  return this.node.get$offsetWidth();
},
 get$height: function() {
  return this.node.get$offsetHeight();
},
 get$size: function() {
  return $.Size$(this.get$width(), this.get$height());
},
 get$offsetParent: function() {
  return this.node.get$offsetParent();
},
 get$offsetLeft: function() {
  return this.node.get$offsetLeft();
},
 get$offsetTop: function() {
  return this.node.get$offsetTop();
},
 get$offset: function() {
  var t1 = this.node;
  return $.Offset$(t1.get$offsetLeft(), t1.get$offsetTop());
},
 get$pageOffset: function() {
  var el, el0, top$, left, t1, txofs;
  el = this.node;
  el0 = el;
  top$ = 0;
  left = 0;
  while (true) {
    t1 = el0.get$offsetLeft();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    left += t1;
    t1 = el0.get$offsetTop();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    top$ += t1;
    if (!$.eqB(el0.get$style().get$position(), 'fixed')) {
      el0 = el0.get$offsetParent();
      t1 = !(el0 == null);
    } else
      t1 = false;
    if (!t1)
      break;
  }
  while (true) {
    txofs = $.CSS_offset3dOf(el.get$style().get$transform());
    t1 = $.sub(el.get$scrollLeft(), txofs.left);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    left -= t1;
    t1 = $.sub(el.get$scrollTop(), txofs.top);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    top$ -= t1;
    el = el.get$parent();
    if (!(!(el == null) && !(typeof el === 'object' && el !== null && el.is$Document())))
      break;
  }
  t1 = $.window().get$pageXOffset();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  left += t1;
  t1 = $.window().get$pageYOffset();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return $.Offset$(left, top$ + t1);
},
 get$computedStyle: function() {
  return $.window().$dom_getComputedStyle$2(this.node, '');
},
 isDescendantOf$1: function(parent$) {
  var n;
  for (n = this.node; !(n == null); n = n.get$parent())
    if (n == null ? parent$ == null : n === parent$)
      return true;
  return false;
},
 hide$0: function() {
  this.set$visible(false);
},
 set$visible: function(visible) {
  var t1 = visible === true ? '' : 'none';
  this.node.get$style().set$display(t1);
}
};

$$.WindowAgent = {"": ["node"],
 "super": "DOMAgent",
 get$innerWidth: function() {
  return this.node.get$innerWidth();
},
 get$innerHeight: function() {
  return this.node.get$innerHeight();
},
 get$width: function() {
  return this.node.get$innerWidth();
},
 get$height: function() {
  return this.node.get$innerHeight();
},
 get$offsetParent: function() {
  return;
},
 get$offsetLeft: function() {
  return 0;
},
 get$offsetTop: function() {
  return 0;
},
 get$offset: function() {
  return $.Offset$(0, 0);
},
 get$pageOffset: function() {
  return this.get$offset();
},
 isDescendantOf$1: function(parent$) {
  return false;
},
 get$computedStyle: function() {
  return $.CSSStyleDeclaration_CSSStyleDeclaration();
},
 set$visible: function(visible) {
}
};

$$._NullAgent = {"": ["node"],
 "super": "WindowAgent",
 get$innerWidth: function() {
  return 0;
},
 get$innerHeight: function() {
  return 0;
},
 get$width: function() {
  return 0;
},
 get$height: function() {
  return 0;
}
};

$$.ViewEvent = {"": ["_type", "_stamp", "_propStop", "target=", "currentTarget!"],
 "super": "Object",
 get$type: function() {
  return this._type;
},
 get$isPropagationStopped: function() {
  return this._propStop;
},
 toString$0: function() {
  return 'ViewEvent(' + $.S(this.target) + ',' + $.S(this.get$type()) + ')';
},
 ViewEvent$_super$2: function(_type, target) {
  this.currentTarget = target;
  this.target = target;
},
 ViewEvent$2: function(type, target) {
  this.currentTarget = target;
  this.target = target;
}
};

$$.DOMEvent = {"": ["_uic", "_keyInf", "cause", "_type", "_stamp", "_propStop", "target", "currentTarget"],
 "super": "ViewEvent",
 get$pageOffset: function() {
  var t1 = this._uic;
  return !(t1 == null) ? $.Offset$(t1.get$pageX(), t1.get$pageY()) : $.Offset$(0, 0);
},
 toString$0: function() {
  return 'DOMEvent(' + $.S(this.target) + ',' + $.S(this.cause) + ')';
}
};

$$.ViewEventListenerList = {"": ["_lib5_ptr?", "_type"],
 "super": "Object",
 add$1: function(handler) {
  this._lib5_ptr.add$2(this._type, handler);
  return this;
},
 remove$1: function(handler) {
  this._lib5_ptr.remove$2(this._type, handler);
  return this;
},
 get$isEmpty: function() {
  return this._lib5_ptr.isEmpty$1(this._type);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); }
};

$$.ViewEventListenerMap = {"": ["_lib5_ptr?"],
 "super": "Object",
 operator$index$1: function(type) {
  return this._get$1(type);
},
 _get$1: function(type) {
  return this._lnlist.putIfAbsent$2(type, new $.ViewEventListenerMap__get_anon(this, type));
}
};

$$.ViewEvents = {"": ["_lib5_ptr", "_lnlist"],
 "super": "ViewEventListenerMap",
 get$click: function() {
  return this._get$1('click');
},
 get$mouseDown: function() {
  return this._get$1('mouseDown');
},
 get$select: function() {
  return this._get$1('select');
},
 select$1: function(arg0) { return this.get$select().call$1(arg0); },
 get$layout: function() {
  return this._get$1('layout');
},
 get$preLayout: function() {
  return this._get$1('preLayout');
},
 preLayout$1: function(arg0) { return this.get$preLayout().call$1(arg0); }
};

$$.Broadcaster = {"": [],
 "super": "Object"
};

$$.BroadcastEvents = {"": ["_lib5_ptr", "_lnlist"],
 "super": "ViewEventListenerMap"
};

$$._Broadcaster = {"": ["_lib5_listeners", "_on"],
 "super": "Broadcaster",
 get$on: function() {
  return this._on;
},
 sendEvent$2: function(event$, type) {
  return this._lib5_listeners.send$2(event$, type);
},
 sendEvent$1: function(event$) {
  return this.sendEvent$2(event$,null)
},
 _Broadcaster$0: function() {
  this._lib5_listeners = $._BroadcastListeners$(this);
  this._on = $.BroadcastEvents$(this._lib5_listeners);
}
};

$$._BroadcastListeners = {"": ["_lib5_owner", "_lib5_listeners"],
 "super": "Object",
 isEmpty$1: function(type) {
  var t1, ls;
  t1 = this._lib5_listeners;
  if (!(t1 == null)) {
    ls = $.index(t1, type);
    t1 = ls == null || $.get$isEmpty(ls) === true;
  } else
    t1 = true;
  return t1;
},
 get$isEmpty: function() { return new $.BoundClosure(this, 'isEmpty$1'); },
 add$2: function(type, listener) {
  if (listener == null)
    throw $.$$throw($.CTC19);
  $.add$1(this._lib5_listeners.putIfAbsent$2(type, new $._BroadcastListeners_add_anon()), listener);
},
 remove$2: function(type, listener) {
  var ls = $.index(this._lib5_listeners, type);
  return !(ls == null) && $.ListUtil_remove(ls, listener);
},
 send$2: function(event$, type) {
  var ls, t1, dispatched;
  if (type == null)
    type = event$.get$type();
  ls = $.index(this._lib5_listeners, type);
  if (!(ls == null))
    for (t1 = $._ListImpl_List$from(ls, 'dynamic'), $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'}), t1 = $.iterator(t1), dispatched = false; t1.get$hasNext() === true; dispatched = true) {
      t1.next$0().call$1(event$);
      if (event$.get$isPropagationStopped() === true)
        return true;
    }
  else
    dispatched = false;
  for (t1 = $.iterator($.get$rootViews()); t1.get$hasNext() === true;)
    if (t1.next$0().sendEvent$2(event$, type) === true)
      dispatched = true;
  return dispatched;
}
};

$$.ActivateEvent = {"": ["_lib5_source?", "_type", "_stamp", "_propStop", "target", "currentTarget"],
 "super": "ViewEvent",
 get$source: function() {
  return this._lib5_source;
},
 source$1: function(arg0) { return this.get$source().call$1(arg0); }
};

$$.ChangeEvent = {"": ["_value", "_type", "_stamp", "_propStop", "target", "currentTarget"],
 "super": "ViewEvent",
 get$value: function() {
  return this._value;
},
 toString$0: function() {
  return 'ChangeEvent(' + $.S(this.target) + ',' + $.S(this.get$value()) + ')';
}
};

$$.LayoutEvent = {"": ["_context", "_type", "_stamp", "_propStop", "target", "currentTarget"],
 "super": "ViewEvent",
 toString$0: function() {
  return 'LayoutEvent(' + $.S(this.target) + ')';
}
};

$$.LayoutManager = {"": ["_layouts", "_imgWaits", "_afters", "_inLayout", "_inCallback=", "_runQue", "_views", "_task", "_readyChecks", "_ignoreDetached", "_ignoreSubviews"],
 "super": "RunOnceViewManager",
 addLayout$2: function(name$, clayout) {
  var t1, old;
  t1 = this._layouts;
  old = $.index(t1, name$);
  $.indexSet(t1, name$, clayout);
  return old;
},
 getLayout$1: function(name$) {
  return $.index(this._layouts, name$);
},
 requestLayout$3: function(view, immediate, descendantOnly) {
  var parent$;
  if (descendantOnly !== true) {
    parent$ = view.get$parent();
    if (view.get$profile().get$anchorView() == null && !(parent$ == null) && $.get$isEmpty(parent$.get$layout().get$type()) !== true)
      view = parent$;
  }
  if (immediate === true)
    this.flush$2(view, true);
  else
    this.queue$1(view);
},
 get$inLayout: function() {
  return this._inLayout > 0 && $.leB(this._inCallback, 0);
},
 flush$2: function(view, force) {
  if ($.get$isEmpty(this._imgWaits) === true)
    $.RunOnceViewManager.prototype.flush$2.call(this, view, force);
  else if (!(view == null))
    this.queue$1(view);
},
 flush$0: function() {
  return this.flush$2(null,false)
},
 handle_$1: function(view) {
  var mctx, parent$, t1, afters0, afters, task;
  this._inLayout = this._inLayout + 1;
  try {
    mctx = $.MeasureContext$();
    mctx.preLayout$1(view);
    parent$ = view.get$parent();
    if (parent$ == null)
      $.rootLayout(mctx, view);
    else if (!(view.get$profile().get$anchorView() == null))
      $.AnchorRelation$(parent$)._layoutAnchored$3(mctx, view.get$profile().get$anchorView(), view);
    else if ($.get$isEmpty(parent$.get$layout().get$type()) === true) {
      mctx.setWidthByProfile$2(view, new $.LayoutManager_handle__anon(parent$));
      mctx.setHeightByProfile$2(view, new $.LayoutManager_handle__anon0(parent$));
    }
    this.doLayout$2(mctx, view);
  } finally {
    t1 = this._inLayout - 1;
    this._inLayout = t1;
    if (t1 <= 0 && this.isQueueEmpty$0() === true && $.get$isEmpty(this._afters) !== true) {
      t1 = this._afters;
      afters0 = $._ListImpl_List$from(t1, 'dynamic');
      $.setRuntimeTypeInfo(afters0, {runtimeType: 'List<dynamic>'});
      afters = afters0;
      $.clear(t1);
      for (t1 = $.iterator(afters); t1.get$hasNext() === true;) {
        task = t1.next$0();
        task.call$0();
      }
    }
  }
},
 doLayout$2: function(mctx, view) {
  if (view.get$visible() === true) {
    view.get$layout().get$handler().doLayout$2(mctx, view);
    this._inCallback = $.add(this._inCallback, 1);
    try {
      view.onLayout_$1(mctx);
    } finally {
      this._inCallback = $.sub(this._inCallback, 1);
    }
  }
},
 LayoutManager$0: function() {
  this.addLayout$2('linear', $.LinearLayout$());
  this.addLayout$2('tile', $.TileLayout$());
  var freeLayout = $.FreeLayout$();
  this.addLayout$2('none', freeLayout);
  this.addLayout$2('', freeLayout);
}
};

$$.Layout = {"": [],
 "super": "Object"
};

$$.AbstractLayout = {"": [],
 "super": "Layout",
 get$isProfileInherited: function() {
  return true;
},
 get$isFlex: function() {
  return false;
},
 doLayout$2: function(mctx, view) {
  var ar, t1, t2;
  if (!(view.get$firstChild() == null)) {
    ar = $.AnchorRelation$(view);
    for (t1 = ar.indeps, t2 = $.iterator(t1); t2.get$hasNext() === true;)
      mctx.preLayout$1(t2.next$0());
    this.doLayout_$3(mctx, view, t1);
    ar.layoutAnchored$1(mctx);
    for (t1 = $.iterator(view.get$children()); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      if (t2.get$visible() === true)
        t2.doLayout_$1(mctx);
    }
  }
}
};

$$.FreeLayout = {"": [],
 "super": "AbstractLayout",
 measureWidth$2: function(mctx, view) {
  var wd, t1, t2, subsz;
  wd = mctx.getWidthByApp$1(view);
  if (wd == null) {
    wd = view.get$innerWidth();
    if (typeof wd !== 'number')
      return this.measureWidth$2$bailout(1, mctx, view, wd);
    for (t1 = $.iterator(view.get$children()); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      if (view.shallLayout_$1(t2) === true && t2.get$profile().get$anchorView() == null) {
        subsz = t2.measureWidth_$1(mctx);
        t2 = t2.get$left();
        subsz = $.add(t2, !(subsz == null) ? subsz : 0);
        if (wd == null || $.gtB(subsz, wd))
          wd = subsz;
      }
    }
    if (!(wd == null))
      wd = $.add(wd, mctx.getBorderWidth$1(view));
  }
  return wd;
},
 measureWidth$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      wd = env2;
      view = env1;
      mctx = env0;
      break;
  }
  switch (state0) {
    case 0:
      wd = mctx.getWidthByApp$1(view);
    case 1:
      var wd, view, mctx, t1, t2, subsz;
      if (state0 === 1 || state0 === 0 && wd == null)
        switch (state0) {
          case 0:
            wd = view.get$innerWidth();
          case 1:
            state0 = 0;
            for (t1 = $.iterator(view.get$children()); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              if (view.shallLayout_$1(t2) === true && t2.get$profile().get$anchorView() == null) {
                subsz = t2.measureWidth_$1(mctx);
                t2 = t2.get$left();
                subsz = $.add(t2, !(subsz == null) ? subsz : 0);
                if (wd == null || $.gtB(subsz, wd))
                  wd = subsz;
              }
            }
            if (!(wd == null))
              wd = $.add(wd, mctx.getBorderWidth$1(view));
        }
      return wd;
  }
},
 measureHeight$2: function(mctx, view) {
  var hgh, t1, t2, subsz;
  hgh = mctx.getHeightByApp$1(view);
  if (hgh == null) {
    hgh = view.get$innerHeight();
    if (typeof hgh !== 'number')
      return this.measureHeight$2$bailout(1, mctx, view, hgh);
    for (t1 = $.iterator(view.get$children()); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      if (view.shallLayout_$1(t2) === true && t2.get$profile().get$anchorView() == null) {
        subsz = t2.measureHeight_$1(mctx);
        t2 = t2.get$top();
        subsz = $.add(t2, !(subsz == null) ? subsz : 0);
        if (hgh == null || $.gtB(subsz, hgh))
          hgh = subsz;
      }
    }
    if (!(hgh == null))
      hgh = $.add(hgh, mctx.getBorderHeight$1(view));
  }
  return hgh;
},
 measureHeight$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      hgh = env2;
      view = env1;
      mctx = env0;
      break;
  }
  switch (state0) {
    case 0:
      hgh = mctx.getHeightByApp$1(view);
    case 1:
      var hgh, view, mctx, t1, t2, subsz;
      if (state0 === 1 || state0 === 0 && hgh == null)
        switch (state0) {
          case 0:
            hgh = view.get$innerHeight();
          case 1:
            state0 = 0;
            for (t1 = $.iterator(view.get$children()); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              if (view.shallLayout_$1(t2) === true && t2.get$profile().get$anchorView() == null) {
                subsz = t2.measureHeight_$1(mctx);
                t2 = t2.get$top();
                subsz = $.add(t2, !(subsz == null) ? subsz : 0);
                if (hgh == null || $.gtB(subsz, hgh))
                  hgh = subsz;
              }
            }
            if (!(hgh == null))
              hgh = $.add(hgh, mctx.getBorderHeight$1(view));
        }
      return hgh;
  }
},
 get$isProfileInherited: function() {
  return false;
},
 doLayout_$3: function(mctx, view, children) {
  var innerWidth$, innerHeight$, t1, t2;
  innerWidth$ = new $.FreeLayout_doLayout__anon(view);
  innerHeight$ = new $.FreeLayout_doLayout__anon0(view);
  for (t1 = $.iterator(children); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    mctx.setWidthByProfile$2(t2, innerWidth$);
    mctx.setHeightByProfile$2(t2, innerHeight$);
  }
}
};

$$._AnchorOfRoot = {"": [],
 "super": "Object",
 get$realWidth: function() {
  return $.get$browser().get$innerSize().get$width();
},
 get$innerWidth: function() {
  return $.get$browser().get$innerSize().get$width();
},
 get$realHeight: function() {
  return $.get$browser().get$innerSize().get$height();
},
 get$innerHeight: function() {
  return $.get$browser().get$innerSize().get$height();
}
};

$$._AnchorOfNode = {"": ["_q"],
 "super": "Object",
 get$realWidth: function() {
  return this._q.get$width();
},
 get$innerWidth: function() {
  return this._q.get$innerWidth();
},
 get$realHeight: function() {
  return this._q.get$height();
},
 get$innerHeight: function() {
  return this._q.get$innerHeight();
}
};

$$.MeasureContext = {"": ["widths", "heights", "_borderWds", "_borderHghs", "_lib8_dataAttrs!"],
 "super": "Object",
 getBorderWidth$1: function(view) {
  var t1, v, qs, t2;
  t1 = this._borderWds;
  v = $.index(t1, view);
  if (v == null) {
    qs = $.DOMAgent_DOMAgent(view.get$node()).get$computedStyle();
    t2 = $.add($.CSS_intOf(qs.get$borderLeftWidth(), null), $.CSS_intOf(qs.get$borderRightWidth(), null));
    $.indexSet(t1, view, t2);
    return t2;
  }
  return v;
},
 getBorderHeight$1: function(view) {
  var t1, v, qs, t2;
  t1 = this._borderHghs;
  v = $.index(t1, view);
  if (v == null) {
    qs = $.DOMAgent_DOMAgent(view.get$node()).get$computedStyle();
    t2 = $.add($.CSS_intOf(qs.get$borderTopWidth(), null), $.CSS_intOf(qs.get$borderBottomWidth(), null));
    $.indexSet(t1, view, t2);
    return t2;
  }
  return v;
},
 getProfile$2: function(view, name$) {
  var v = view.get$profile().getPropertyValue$1(name$);
  if ($.get$isEmpty(v) === true) {
    if (!(view.get$parent() == null) && view.get$parent().get$layout().get$handler().get$isProfileInherited() === true)
      v = view.get$parent().get$layout().getPropertyValue$1(name$);
    if ($.get$isEmpty(v) === true && view.get$layout().get$handler().get$isFlex() === true)
      v = 'flex';
  }
  return v;
},
 setWidthByProfile$2: function(view, width) {
  var amt, wd, t1;
  if (view.get$visible() === true) {
    amt = $.AmountInfo$(this.getProfile$2(view, 'width'));
    switch (amt.type) {
      case $.CTC27:
        view.set$width(amt.value);
        break;
      case $.CTC28:
        view.set$width($.MeasureContext__minMax(width.call$0(), this.getProfile$2(view, 'min-width'), this.getProfile$2(view, 'max-width')));
        break;
      case $.CTC29:
        view.set$width($.MeasureContext__minMax($.toInt($.round($.mul(width.call$0(), amt.value))), this.getProfile$2(view, 'min-width'), this.getProfile$2(view, 'max-width')));
        break;
      case $.CTC31:
        this._contentWd$1(view);
        break;
      case $.CTC30:
        if (this.getWidthByApp$1(view) == null) {
          if (view.get$parent() == null)
            if (view.get$isMeasuredByContent() !== true) {
              wd = width.call$0();
              t1 = $.gtB(wd, 0);
            } else {
              wd = null;
              t1 = false;
            }
          else {
            wd = null;
            t1 = false;
          }
          if (t1)
            view.set$width($.MeasureContext__minMax(wd, this.getProfile$2(view, 'min-width'), this.getProfile$2(view, 'max-width')));
          else
            this._contentWd$1(view);
        }
        break;
    }
  }
},
 setHeightByProfile$2: function(view, height) {
  var amt, hgh, t1;
  if (view.get$visible() === true) {
    amt = $.AmountInfo$(this.getProfile$2(view, 'height'));
    switch (amt.type) {
      case $.CTC27:
        view.set$height(amt.value);
        break;
      case $.CTC28:
        view.set$height($.MeasureContext__minMax(height.call$0(), this.getProfile$2(view, 'min-height'), this.getProfile$2(view, 'max-height')));
        break;
      case $.CTC29:
        view.set$height($.MeasureContext__minMax($.toInt($.round($.mul(height.call$0(), amt.value))), this.getProfile$2(view, 'min-height'), this.getProfile$2(view, 'max-height')));
        break;
      case $.CTC31:
        this._contentHgh$1(view);
        break;
      case $.CTC30:
        if (this.getHeightByApp$1(view) == null) {
          if (view.get$parent() == null)
            if (view.get$isMeasuredByContent() !== true) {
              hgh = height.call$0();
              t1 = $.gtB(hgh, 0);
            } else {
              hgh = null;
              t1 = false;
            }
          else {
            hgh = null;
            t1 = false;
          }
          if (t1)
            view.set$height($.MeasureContext__minMax(hgh, this.getProfile$2(view, 'min-height'), this.getProfile$2(view, 'max-height')));
          else
            this._contentHgh$1(view);
        }
        break;
    }
  }
},
 _contentWd$1: function(view) {
  var wd = view.measureWidth_$1(this);
  if (!(wd == null))
    view.set$width(wd);
},
 _contentHgh$1: function(view) {
  var hgh = view.measureHeight_$1(this);
  if (!(hgh == null))
    view.set$height(hgh);
},
 measureWidth$1: function(view) {
  var t1, wd, parentInnerWidth, limit, t2;
  if (view.get$visible() === true) {
    t1 = this.widths;
    wd = $.index(t1, view);
    if (!(wd == null) || t1.containsKey$1(view) === true)
      return wd;
    wd = view.get$layout().get$handler().measureWidth$2(this, view);
    parentInnerWidth = new $.MeasureContext_measureWidth_anon(view);
    limit = $.MeasureContext__amountOf(view.get$profile().get$maxWidth(), parentInnerWidth);
    if (!(limit == null))
      t2 = wd == null || $.gtB(wd, limit);
    else
      t2 = false;
    if (t2)
      wd = limit;
    limit = $.MeasureContext__amountOf(view.get$profile().get$minWidth(), parentInnerWidth);
    if (!(limit == null))
      t2 = wd == null || $.ltB(wd, limit);
    else
      t2 = false;
    if (t2)
      wd = limit;
    $.indexSet(t1, view, wd);
    return wd;
  }
  return 0;
},
 measureHeight$1: function(view) {
  var t1, hgh, parentInnerHeight, limit, t2;
  if (view.get$visible() === true) {
    t1 = this.heights;
    hgh = $.index(t1, view);
    if (!(hgh == null) || t1.containsKey$1(view) === true)
      return hgh;
    hgh = view.get$layout().get$handler().measureHeight$2(this, view);
    parentInnerHeight = new $.MeasureContext_measureHeight_anon(view);
    limit = $.MeasureContext__amountOf(view.get$profile().get$maxHeight(), parentInnerHeight);
    if (!(limit == null))
      t2 = hgh == null || $.gtB(hgh, limit);
    else
      t2 = false;
    if (t2)
      hgh = limit;
    limit = $.MeasureContext__amountOf(view.get$profile().get$minHeight(), parentInnerHeight);
    if (!(limit == null))
      t2 = hgh == null || $.ltB(hgh, limit);
    else
      t2 = false;
    if (t2)
      hgh = limit;
    $.indexSet(t1, view, hgh);
    return hgh;
  }
  return 0;
},
 measureWidthByContent$2: function(view, autowidth) {
  var t1, wd;
  t1 = this.widths;
  wd = $.index(t1, view);
  return !(wd == null) || t1.containsKey$1(view) === true ? wd : this._measureByContent$2(view, autowidth).get$width();
},
 measureHeightByContent$2: function(view, autowidth) {
  var t1, hgh;
  t1 = this.heights;
  hgh = $.index(t1, view);
  return !(hgh == null) || t1.containsKey$1(view) === true ? hgh : this._measureByContent$2(view, autowidth).get$height();
},
 _measureByContent$2: function(view, autowidth) {
  var nodestyle, pos, orgspace, orgwd, orghgh, qview, width, height, parentInnerWidth, parentInnerHeight, limit, t1;
  if (view.get$visible() !== true) {
    $.indexSet(this.widths, view, 0);
    $.indexSet(this.heights, view, 0);
    return $.Size$(0, 0);
  }
  if (autowidth) {
    nodestyle = view.get$node().get$style();
    pos = nodestyle.get$position();
    if (!$.eqB(pos, 'fixed') && !$.eqB(pos, 'static')) {
      orgspace = nodestyle.get$whiteSpace();
      if (orgspace == null)
        orgspace = '';
      nodestyle.set$whiteSpace('nowrap');
    } else
      orgspace = null;
    orgwd = nodestyle.get$width();
    orghgh = nodestyle.get$height();
    nodestyle.set$width('');
    nodestyle.set$height('');
  } else {
    nodestyle = null;
    orgwd = null;
    orghgh = null;
    orgspace = null;
  }
  qview = $.DOMAgent_DOMAgent(view.get$node());
  width = qview.get$width();
  height = qview.get$height();
  if (!(orgspace == null))
    nodestyle.set$whiteSpace(orgspace);
  if (!(orgwd == null) && $.get$isEmpty(orgwd) !== true)
    nodestyle.set$width(orgwd);
  if (!(orghgh == null) && $.get$isEmpty(orghgh) !== true)
    nodestyle.set$height(orghgh);
  parentInnerWidth = new $.MeasureContext__measureByContent_anon(view);
  parentInnerHeight = new $.MeasureContext__measureByContent_anon0(view);
  limit = $.MeasureContext__amountOf(view.get$profile().get$maxWidth(), parentInnerWidth);
  if (!(autowidth && $.gtB(width, $.get$browser().get$size().get$width())))
    t1 = !(limit == null) && $.gtB(width, limit);
  else
    t1 = true;
  if (t1) {
    nodestyle.set$width($.CSS_px(!(limit == null) ? limit : $.get$browser().get$size().get$width()));
    width = qview.get$width();
    height = qview.get$height();
  }
  limit = $.MeasureContext__amountOf(view.get$profile().get$maxHeight(), parentInnerHeight);
  if (!(limit == null) && $.gtB(height, limit))
    height = limit;
  limit = $.MeasureContext__amountOf(view.get$profile().get$minWidth(), parentInnerWidth);
  if (!(limit == null) && $.ltB(width, limit))
    width = limit;
  limit = $.MeasureContext__amountOf(view.get$profile().get$minHeight(), parentInnerHeight);
  if (!(limit == null) && $.ltB(height, limit))
    height = limit;
  $.indexSet(this.widths, view, width);
  $.indexSet(this.heights, view, height);
  return $.Size$(width, height);
},
 getLeftByApp$1: function(view) {
  return view.get$profile().get$anchorView() == null && $.ViewImpl_isLeftByApp(view) ? view.get$left() : null;
},
 getTopByApp$1: function(view) {
  return view.get$profile().get$anchorView() == null && $.ViewImpl_isTopByApp(view) ? view.get$top() : null;
},
 getWidthByApp$1: function(view) {
  var amtInf = $.AmountInfo$(this.getProfile$2(view, 'width'));
  switch (amtInf.type) {
    case $.CTC27:
      return amtInf.value;
    case $.CTC30:
      return $.ViewImpl_isWidthByApp(view) ? view.get$width() : null;
  }
},
 getHeightByApp$1: function(view) {
  var amtInf = $.AmountInfo$(this.getProfile$2(view, 'height'));
  switch (amtInf.type) {
    case $.CTC27:
      return amtInf.value;
    case $.CTC30:
      return $.ViewImpl_isHeightByApp(view) ? view.get$height() : null;
  }
},
 preLayout$1: function(view) {
  var t1 = $.get$layoutManager();
  t1.set$_inCallback($.add(t1.get$_inCallback(), 1));
  try {
    view.onPreLayout_$1(this);
  } finally {
    t1 = $.get$layoutManager();
    t1.set$_inCallback($.sub(t1.get$_inCallback(), 1));
  }
},
 get$dataAttributes: function() {
  var t1 = this._lib8_dataAttrs;
  return !(t1 == null) ? t1 : $.MapUtil_onDemand(new $.MeasureContext_dataAttributes_anon(this));
}
};

$$.LinearLayout = {"": [],
 "super": "AbstractLayout",
 measureWidth$2: function(mctx, view) {
  return $.LinearLayout__getRealLayout(view).measureWidth$2(mctx, view);
},
 measureHeight$2: function(mctx, view) {
  return $.LinearLayout__getRealLayout(view).measureHeight$2(mctx, view);
},
 doLayout_$3: function(mctx, view, children) {
  return $.LinearLayout__getRealLayout(view).doLayout$3(mctx, view, children);
}
};

$$._RealLinearLayout = {"": [],
 "super": "Object"
};

$$._HLayout = {"": [],
 "super": "_RealLinearLayout",
 measureWidth$2: function(mctx, view) {
  var va, spcinf, gapinf, defpwd, t1, width, prevSpacing, t2, si, t3, pwd, amt, wapp, wd;
  va = mctx.getWidthByApp$1(view);
  if (!(va == null))
    return va;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), 4, null);
  gapinf = $.SideInfo$(view.get$layout().get$gap(), null, null);
  defpwd = view.get$layout().get$width();
  for (t1 = $.iterator(view.get$children()), width = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true || !(t2.get$profile().get$anchorView() == null))
      continue;
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    if (prevSpacing == null)
      t3 = si.left;
    else {
      t3 = gapinf.left;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.left);
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    width += t3;
    prevSpacing = si.right;
    pwd = t2.get$profile().get$width();
    amt = $._getAmountInfo(t2, $.get$isEmpty(pwd) === true ? defpwd : pwd);
    switch (amt.type) {
      case $.CTC27:
        t2 = amt.value;
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        width += t2;
        break;
      case $.CTC30:
      case $.CTC31:
        wapp = mctx.getWidthByApp$1(t2);
        wd = !(wapp == null) && !$.eqB(amt.type, $.CTC31) ? wapp : t2.measureWidth_$1(mctx);
        t2 = !(wd == null) ? wd : t2.get$realWidth();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        width += t2;
        break;
    }
  }
  t1 = mctx.getBorderWidth$1(view);
  t1 = $.add(t1, !(prevSpacing == null) ? prevSpacing : $.add(spcinf.left, spcinf.right));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return width + t1;
},
 measureHeight$2: function(mctx, view) {
  var va, spcinf, defphgh, borderHgh, t1, height, t2, si, hgh, phgh, amt, happ, h;
  va = mctx.getHeightByApp$1(view);
  if (!(va == null))
    return va;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), 4, null);
  defphgh = view.get$layout().get$height();
  borderHgh = mctx.getBorderHeight$1(view);
  for (t1 = $.iterator(view.get$children()), height = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true || !(t2.get$profile().get$anchorView() == null))
      continue;
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    hgh = $.add($.add(si.top, si.bottom), borderHgh);
    phgh = t2.get$profile().get$height();
    amt = $._getAmountInfo(t2, $.get$isEmpty(phgh) === true ? defphgh : phgh);
    switch (amt.type) {
      case $.CTC27:
        hgh = $.add(hgh, amt.value);
        break;
      case $.CTC30:
      case $.CTC31:
        happ = mctx.getHeightByApp$1(t2);
        h = !(happ == null) && !$.eqB(amt.type, $.CTC31) ? happ : t2.measureHeight_$1(mctx);
        hgh = $.add(hgh, !(h == null) ? h : t2.get$realHeight());
        break;
      default:
        continue;
    }
    if (height == null || $.gtB(hgh, height))
      height = hgh;
  }
  return height;
},
 doLayout$3: function(mctx, view, children) {
  var spcinf, gapinf, defpwd, childspcinfs, flexViews, flexs, t1, nflex, assigned, prevSpacing, t2, si, t3, pwd, amt, wdapp, wd, space, per, len, j, delta, defAlign, align;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), 4, null);
  gapinf = $.SideInfo$(view.get$layout().get$gap(), null, null);
  defpwd = view.get$layout().get$width();
  childspcinfs = $.Map_Map('dynamic', 'dynamic');
  flexViews = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(flexViews, {runtimeType: 'List<dynamic>'});
  flexs = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(flexs, {runtimeType: 'List<dynamic>'});
  for (t1 = $.iterator(children), nflex = 0, assigned = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true) {
      mctx.setWidthByProfile$2(t2, new $._HLayout_doLayout_anon(view));
      mctx.setHeightByProfile$2(t2, new $._HLayout_doLayout_anon0(view));
      continue;
    }
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    $.indexSet(childspcinfs, t2, si);
    if (prevSpacing == null)
      t3 = si.left;
    else {
      t3 = gapinf.left;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.left);
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    prevSpacing = si.right;
    pwd = t2.get$profile().get$width();
    amt = $._getAmountInfo(t2, $.get$isEmpty(pwd) === true ? defpwd : pwd);
    t3 = amt.type;
    switch (t3) {
      case $.CTC27:
        t3 = amt.value;
        t2.set$width(t3);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      case $.CTC28:
        t3 = amt.value;
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        nflex += t3;
        flexs.push(t3);
        flexViews.push(t2);
        break;
      case $.CTC29:
        t3 = $.toInt($.round($.mul(view.get$innerWidth(), amt.value)));
        t2.set$width(t3);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      default:
        if ($.eqB(t3, $.CTC30)) {
          wdapp = mctx.getWidthByApp$1(t2);
          t3 = !(wdapp == null);
        } else {
          wdapp = null;
          t3 = false;
        }
        if (t3) {
          if (typeof wdapp !== 'number')
            throw $.iae(wdapp);
          assigned += wdapp;
        } else {
          wd = t2.measureWidth_$1(mctx);
          if (!(wd == null)) {
            t2.set$width(wd);
            if (typeof wd !== 'number')
              throw $.iae(wd);
            assigned += wd;
          } else {
            t3 = t2.get$realWidth();
            if (typeof t3 !== 'number')
              throw $.iae(t3);
            assigned += t3;
          }
        }
        break;
    }
    mctx.setHeightByProfile$2(t2, new $._HLayout_doLayout_anon1(view, si));
  }
  if (nflex > 0) {
    space = $.sub($.sub(view.get$innerWidth(), assigned), prevSpacing);
    per = $.div(space, nflex);
    for (len = flexs.length - 1, j = 0; true; ++j) {
      if (j === len) {
        if (j >= flexViews.length)
          throw $.ioore(j);
        flexViews[j].set$width(space);
        break;
      }
      if (j >= flexs.length)
        throw $.ioore(j);
      delta = $.toInt($.round($.mul(per, flexs[j])));
      if (j >= flexViews.length)
        throw $.ioore(j);
      flexViews[j].set$width(delta);
      space = $.sub(space, delta);
    }
  }
  defAlign = view.get$layout().get$align();
  for (t1 = $.iterator(children), assigned = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true)
      continue;
    si = $.index(childspcinfs, t2);
    if (prevSpacing == null)
      t3 = si.get$left();
    else {
      t3 = gapinf.left;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.get$left());
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    t2.set$left(assigned);
    t3 = t2.get$realWidth();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    prevSpacing = si.get$right();
    align = t2.get$profile().get$align();
    if ($.get$isEmpty(align) === true)
      align = defAlign;
    space = $.index(childspcinfs, t2).get$top();
    switch (align) {
      case 'center':
      case 'end':
        delta = $.sub($.sub($.sub(view.get$innerHeight(), si.get$top()), si.get$bottom()), t2.get$realHeight());
        t2.set$top($.add(space, $.eqB(align, 'center') ? $.tdiv(delta, 2) : delta));
        break;
      default:
        t2.set$top(space);
    }
  }
}
};

$$._VLayout = {"": [],
 "super": "_RealLinearLayout",
 measureHeight$2: function(mctx, view) {
  var va, spcinf, gapinf, defphgh, t1, height, prevSpacing, t2, si, t3, phgh, amt, happ, hgh;
  va = mctx.getHeightByApp$1(view);
  if (!(va == null))
    return va;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), 4, null);
  gapinf = $.SideInfo$(view.get$layout().get$gap(), null, null);
  defphgh = view.get$layout().get$height();
  for (t1 = $.iterator(view.get$children()), height = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true || !(t2.get$profile().get$anchorView() == null))
      continue;
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    if (prevSpacing == null)
      t3 = si.top;
    else {
      t3 = gapinf.top;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.top);
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    height += t3;
    prevSpacing = si.bottom;
    phgh = t2.get$profile().get$height();
    amt = $._getAmountInfo(t2, $.get$isEmpty(phgh) === true ? defphgh : phgh);
    switch (amt.type) {
      case $.CTC27:
        t2 = amt.value;
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        height += t2;
        break;
      case $.CTC30:
      case $.CTC31:
        happ = mctx.getHeightByApp$1(t2);
        hgh = !(happ == null) && !$.eqB(amt.type, $.CTC31) ? happ : t2.measureHeight_$1(mctx);
        t2 = !(hgh == null) ? hgh : t2.get$realHeight();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        height += t2;
        break;
    }
  }
  t1 = mctx.getBorderHeight$1(view);
  t1 = $.add(t1, !(prevSpacing == null) ? prevSpacing : $.add(spcinf.top, spcinf.bottom));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return height + t1;
},
 measureWidth$2: function(mctx, view) {
  var va, spcinf, defpwd, borderWd, t1, width, t2, si, wd, pwd, amt, wapp, w;
  va = mctx.getWidthByApp$1(view);
  if (!(va == null))
    return va;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), 4, null);
  defpwd = view.get$layout().get$width();
  borderWd = mctx.getBorderWidth$1(view);
  for (t1 = $.iterator(view.get$children()), width = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true || !(t2.get$profile().get$anchorView() == null))
      continue;
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    wd = $.add($.add(si.left, si.right), borderWd);
    pwd = t2.get$profile().get$width();
    amt = $._getAmountInfo(t2, $.get$isEmpty(pwd) === true ? defpwd : pwd);
    switch (amt.type) {
      case $.CTC27:
        wd = $.add(wd, amt.value);
        break;
      case $.CTC30:
      case $.CTC31:
        wapp = mctx.getWidthByApp$1(t2);
        w = !(wapp == null) && !$.eqB(amt.type, $.CTC31) ? wapp : t2.measureWidth_$1(mctx);
        wd = $.add(wd, !(w == null) ? w : t2.get$realWidth());
        break;
      default:
        continue;
    }
    if (width == null || $.gtB(wd, width))
      width = wd;
  }
  return width;
},
 doLayout$3: function(mctx, view, children) {
  var spcinf, gapinf, defphgh, childspcinfs, flexViews, flexs, t1, nflex, assigned, prevSpacing, t2, si, t3, phgh, amt, hghapp, hgh, space, per, len, j, delta, defAlign, align;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), 4, null);
  gapinf = $.SideInfo$(view.get$layout().get$gap(), null, null);
  defphgh = view.get$layout().get$height();
  childspcinfs = $.Map_Map('dynamic', 'dynamic');
  flexViews = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(flexViews, {runtimeType: 'List<dynamic>'});
  flexs = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(flexs, {runtimeType: 'List<dynamic>'});
  for (t1 = $.iterator(children), nflex = 0, assigned = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true) {
      mctx.setWidthByProfile$2(t2, new $._VLayout_doLayout_anon(view));
      mctx.setHeightByProfile$2(t2, new $._VLayout_doLayout_anon0(view));
      continue;
    }
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    $.indexSet(childspcinfs, t2, si);
    if (prevSpacing == null)
      t3 = si.top;
    else {
      t3 = gapinf.top;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.top);
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    prevSpacing = si.bottom;
    phgh = t2.get$profile().get$height();
    amt = $._getAmountInfo(t2, $.get$isEmpty(phgh) === true ? defphgh : phgh);
    t3 = amt.type;
    switch (t3) {
      case $.CTC27:
        t3 = amt.value;
        t2.set$height(t3);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      case $.CTC28:
        t3 = amt.value;
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        nflex += t3;
        flexs.push(t3);
        flexViews.push(t2);
        break;
      case $.CTC29:
        t3 = $.toInt($.round($.mul(view.get$innerHeight(), amt.value)));
        t2.set$height(t3);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      default:
        if ($.eqB(t3, $.CTC30)) {
          hghapp = mctx.getHeightByApp$1(t2);
          t3 = !(hghapp == null);
        } else {
          hghapp = null;
          t3 = false;
        }
        if (t3) {
          if (typeof hghapp !== 'number')
            throw $.iae(hghapp);
          assigned += hghapp;
        } else {
          hgh = t2.measureHeight_$1(mctx);
          if (!(hgh == null)) {
            t2.set$height(hgh);
            if (typeof hgh !== 'number')
              throw $.iae(hgh);
            assigned += hgh;
          } else {
            t3 = t2.get$realHeight();
            if (typeof t3 !== 'number')
              throw $.iae(t3);
            assigned += t3;
          }
        }
        break;
    }
    mctx.setWidthByProfile$2(t2, new $._VLayout_doLayout_anon1(view, si));
  }
  if (nflex > 0) {
    space = $.sub($.sub(view.get$innerHeight(), assigned), prevSpacing);
    per = $.div(space, nflex);
    for (len = flexs.length - 1, j = 0; true; ++j) {
      if (j === len) {
        if (j >= flexViews.length)
          throw $.ioore(j);
        flexViews[j].set$height(space);
        break;
      }
      if (j >= flexs.length)
        throw $.ioore(j);
      delta = $.toInt($.round($.mul(per, flexs[j])));
      if (j >= flexViews.length)
        throw $.ioore(j);
      flexViews[j].set$height(delta);
      space = $.sub(space, delta);
    }
  }
  defAlign = view.get$layout().get$align();
  for (t1 = $.iterator(children), assigned = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true)
      continue;
    si = $.index(childspcinfs, t2);
    if (prevSpacing == null)
      t3 = si.get$top();
    else {
      t3 = gapinf.top;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.get$top());
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    t2.set$top(assigned);
    t3 = t2.get$realHeight();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    prevSpacing = si.get$bottom();
    align = t2.get$profile().get$align();
    if ($.get$isEmpty(align) === true)
      align = defAlign;
    space = $.index(childspcinfs, t2).get$left();
    switch (align) {
      case 'center':
      case 'end':
        delta = $.sub($.sub($.sub(view.get$innerWidth(), si.get$left()), si.get$right()), t2.get$realWidth());
        t2.set$left($.add(space, $.eqB(align, 'center') ? $.tdiv(delta, 2) : delta));
        break;
      default:
        t2.set$left(space);
    }
  }
}
};

$$.TileLayout = {"": [],
 "super": "AbstractLayout",
 doLayout_$3: function(mctx, view, children) {
  var innerWidth$, innerHeight$, t1, t2;
  innerWidth$ = new $.TileLayout_doLayout__anon(view);
  innerHeight$ = new $.TileLayout_doLayout__anon0(view);
  for (t1 = $.iterator(children); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true) {
      mctx.setWidthByProfile$2(t2, innerWidth$);
      mctx.setHeightByProfile$2(t2, innerHeight$);
      continue;
    }
  }
},
 measureWidth$2: function(ctx, view) {
  throw $.$$throw($.CTC32);
},
 measureHeight$2: function(ctx, view) {
  throw $.$$throw($.CTC32);
},
 get$isFlex: function() {
  return true;
}
};

$$.AnchorRelation = {"": ["indeps", "anchored", "parent?"],
 "super": "Object",
 layoutAnchored$1: function(mctx) {
  var t1;
  this._layoutAnchored$2(mctx, this.parent);
  for (t1 = $.iterator(this.indeps); t1.get$hasNext() === true;)
    this._layoutAnchored$2(mctx, t1.next$0());
},
 _layoutAnchored$3: function(mctx, anchor, thisOnly) {
  var t1, views, t2, t3;
  t1 = this.anchored;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._layoutAnchored$3$bailout(1, mctx, anchor, thisOnly, t1);
  if (anchor !== (anchor | 0))
    throw $.iae(anchor);
  if (anchor < 0 || anchor >= t1.length)
    throw $.ioore(anchor);
  views = t1[anchor];
  if (!(views == null) && $.get$isEmpty(views) !== true) {
    for (t1 = $.iterator(views), t2 = !(thisOnly == null); t1.get$hasNext() === true;) {
      t3 = t1.next$0();
      if (thisOnly == null || $.eqB(t3, thisOnly)) {
        mctx.preLayout$1(t3);
        mctx.setWidthByProfile$2(t3, new $.AnchorRelation__layoutAnchored_anon(anchor, t3));
        mctx.setHeightByProfile$2(t3, new $.AnchorRelation__layoutAnchored_anon0(anchor, t3));
        $.locateToView(t3, t3.get$profile().get$location(), anchor, 0, 0);
        if (t2)
          return;
      }
    }
    for (t1 = $.iterator(views); t1.get$hasNext() === true;)
      this._layoutAnchored$3(mctx, t1.next$0(), thisOnly);
  }
},
 _layoutAnchored$3$bailout: function(state0, mctx, anchor, thisOnly, t1) {
  var views, t2, t3;
  views = $.index(t1, anchor);
  if (!(views == null) && $.get$isEmpty(views) !== true) {
    for (t1 = $.iterator(views), t2 = !(thisOnly == null); t1.get$hasNext() === true;) {
      t3 = t1.next$0();
      if (thisOnly == null || $.eqB(t3, thisOnly)) {
        mctx.preLayout$1(t3);
        mctx.setWidthByProfile$2(t3, new $.AnchorRelation__layoutAnchored_anon(anchor, t3));
        mctx.setHeightByProfile$2(t3, new $.AnchorRelation__layoutAnchored_anon0(anchor, t3));
        $.locateToView(t3, t3.get$profile().get$location(), anchor, 0, 0);
        if (t2)
          return;
      }
    }
    for (t1 = $.iterator(views); t1.get$hasNext() === true;)
      this._layoutAnchored$3(mctx, t1.next$0(), thisOnly);
  }
},
 _layoutAnchored$2: function(mctx,anchor) {
  return this._layoutAnchored$3(mctx,anchor,null)
},
 AnchorRelation$1: function(view) {
  var t1, t2, t3, t4, av, t5, deps;
  t1 = $.iterator(view.get$children());
  t2 = this.indeps;
  t3 = this.anchored;
  if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
    return this.AnchorRelation$1$bailout(1, t3, view, t1, t2);
  for (; t1.get$hasNext() === true;) {
    t4 = t1.next$0();
    av = t4.get$profile().get$anchorView();
    if (av == null)
      t2.push(t4);
    else {
      t5 = av.get$parent();
      if (!(t5 == null ? view == null : t5 === view) && !(av == null ? view == null : av === view))
        throw $.$$throw($.UIException$('Anchor can be parent or sibling, not ' + $.S(av)));
      if (av !== (av | 0))
        throw $.iae(av);
      if (av < 0 || av >= t3.length)
        throw $.ioore(av);
      deps = t3[av];
      if (!(deps == null))
        $.add$1(deps, t4);
      else
        t3[av] = [t4];
    }
  }
},
 AnchorRelation$1$bailout: function(state0, t3, view, t1, t2) {
  var t4, av, t5, deps;
  for (; t1.get$hasNext() === true;) {
    t4 = t1.next$0();
    av = t4.get$profile().get$anchorView();
    if (av == null)
      t2.push(t4);
    else {
      t5 = av.get$parent();
      if (!(t5 == null ? view == null : t5 === view) && !(av == null ? view == null : av === view))
        throw $.$$throw($.UIException$('Anchor can be parent or sibling, not ' + $.S(av)));
      deps = $.index(t3, av);
      if (!(deps == null))
        $.add$1(deps, t4);
      else
        $.indexSet(t3, av, [t4]);
    }
  }
}
};

$$._AnchorOfPoint = {"": [],
 "super": "Object",
 get$realWidth: function() {
  return 0;
},
 get$innerWidth: function() {
  return 0;
},
 get$realHeight: function() {
  return 0;
},
 get$innerHeight: function() {
  return 0;
}
};

$$.AmountType = {"": ["name?"],
 "super": "Object",
 toString$0: function() {
  return this.name;
}
};

$$.AmountInfo = {"": ["type=", "value="],
 "super": "Object",
 toString$0: function() {
  return $.S(this.type) + ':' + $.S(this.value);
},
 AmountInfo$1: function(profile) {
  if (profile == null || $.get$isEmpty(profile) === true)
    this.type = $.CTC30;
  else if ($.eqB(profile, 'content'))
    this.type = $.CTC31;
  else if ($.startsWith(profile, 'flex') === true) {
    this.type = $.CTC28;
    this.value = $.gtB($.get$length(profile), 4) ? $.int_parse($.trim($.substring$1(profile, 4))) : 1;
    if ($.ltB(this.value, 1))
      this.value = 1;
  } else if ($.endsWith(profile, '%') === true) {
    this.type = $.CTC29;
    this.value = $.div($.double_parse($.trim($.substring$2(profile, 0, $.sub($.get$length(profile), 1)))), 100);
  } else {
    this.type = $.CTC27;
    this.value = $.CSS_intOf(profile, true);
  }
}
};

$$.SideInfo = {"": ["top=", "bottom?", "left=", "right?"],
 "super": "Object",
 toString$0: function() {
  return '(' + $.S(this.left) + ',' + $.S(this.top) + ':' + $.S(this.right) + ',' + $.S(this.bottom) + ')';
},
 SideInfo$3: function(profile, defaultValue, defaultInfo) {
  var wds, t1, t2;
  if (!(profile == null) && $.get$isEmpty(profile) !== true) {
    wds = [];
    for (t1 = $.iterator($.CTC24.allMatches$1(profile)); t1.get$hasNext() === true;)
      wds.push($.int_parse(t1.next$0().group$1(0)));
    t1 = wds.length;
    switch (t1) {
      case 0:
        break;
      case 1:
        if (0 >= t1)
          throw $.ioore(0);
        t2 = wds[0];
        this.right = t2;
        this.left = t2;
        this.bottom = t2;
        this.top = t2;
        return;
      case 2:
        if (0 >= t1)
          throw $.ioore(0);
        t2 = wds[0];
        this.bottom = t2;
        this.top = t2;
        if (1 >= wds.length)
          throw $.ioore(1);
        t2 = wds[1];
        this.right = t2;
        this.left = t2;
        return;
      case 3:
        if (0 >= t1)
          throw $.ioore(0);
        this.top = wds[0];
        if (1 >= wds.length)
          throw $.ioore(1);
        t2 = wds[1];
        this.right = t2;
        this.left = t2;
        if (2 >= wds.length)
          throw $.ioore(2);
        this.bottom = wds[2];
        return;
      default:
        if (0 >= t1)
          throw $.ioore(0);
        this.top = wds[0];
        if (1 >= wds.length)
          throw $.ioore(1);
        this.right = wds[1];
        if (2 >= wds.length)
          throw $.ioore(2);
        this.bottom = wds[2];
        if (3 >= wds.length)
          throw $.ioore(3);
        this.left = wds[3];
        return;
    }
  }
  if (!(defaultInfo == null)) {
    this.top = defaultInfo.get$top();
    this.bottom = defaultInfo.get$bottom();
    this.left = defaultInfo.get$left();
    this.right = defaultInfo.get$right();
  } else if (!(defaultValue == null)) {
    this.right = defaultValue;
    this.left = defaultValue;
    this.bottom = defaultValue;
    this.top = defaultValue;
  }
}
};

$$.PairInfo = {"": ["first", "second"],
 "super": "Object",
 toString$0: function() {
  return '(' + $.S(this.first) + ',' + $.S(this.second) + ')';
},
 PairInfo$2: function(profile, defaultValue) {
  var wds, t1, t2;
  if (!(profile == null) && $.get$isEmpty(profile) !== true) {
    wds = [];
    for (t1 = $.iterator($.CTC24.allMatches$1(profile)); t1.get$hasNext() === true;)
      wds.push($.int_parse(t1.next$0().group$1(0)));
    t1 = wds.length;
    switch (t1) {
      case 0:
        break;
      case 1:
        if (0 >= t1)
          throw $.ioore(0);
        t2 = wds[0];
        this.second = t2;
        this.first = t2;
        return;
      default:
        if (0 >= t1)
          throw $.ioore(0);
        this.first = wds[0];
        if (1 >= wds.length)
          throw $.ioore(1);
        this.second = wds[1];
        return;
    }
  }
  if (!(defaultValue == null)) {
    this.second = defaultValue;
    this.first = defaultValue;
  }
}
};

$$.DialogInfo = {"": ["cave?", "mask?"],
 "super": "Object",
 updateSize$0: function() {
  var p, size, t1, t2, t3;
  p = this.cave.get$parent();
  size = $.eqB(p, $.document().get$body()) || p == null ? $.get$browser().get$innerSize() : $.DOMAgent_DOMAgent(p).get$innerSize();
  t1 = $.CSS_px(size.get$height());
  t2 = $.CSS_px(size.get$width());
  t3 = this.mask.get$style();
  t3.set$width(t2);
  t3.set$height(t1);
}
};

$$.ViewConfig = {"": ["classPrefix?", "uuidPrefix?"],
 "super": "Object",
 ViewConfig$0: function() {
  var appid = $.ViewUtil_appId();
  if ($.gtB(appid, 0))
    this.uuidPrefix = $.S($.StringUtil_encodeId(appid, 'v')) + '_';
}
};

$$.RunOnceQueue = {"": ["_tasks?"],
 "super": "Object",
 add$3: function(key, task, timeout) {
  var t1, tid;
  t1 = this._tasks;
  if (!(t1 == null)) {
    tid = t1.remove$1(key);
    if (!(tid == null))
      $.window().clearTimeout$1(tid);
  } else
    this._tasks = $.makeLiteralMap([]);
  $.indexSet(this._tasks, key, $.window().setTimeout$2(new $.RunOnceQueue_add_anon(task, this, key), timeout));
},
 add$2: function(key,task) {
  return this.add$3(key,task,0)
}
};

$$.RunOnceViewManager = {"": [],
 "super": "Object",
 _task$1: function(arg0) { return this._task.call$1(arg0); },
 isQueueEmpty$1: function(view) {
  var t1;
  if (view == null)
    return $.get$isEmpty(this._views);
  for (t1 = $.iterator(this._views); t1.get$hasNext() === true;)
    if (t1.next$0().isDescendantOf$1(view) === true)
      return false;
  return true;
},
 isQueueEmpty$0: function() {
  return this.isQueueEmpty$1(null)
},
 queue$1: function(view) {
  $.add$1(this._views, view);
  this._runQue.add$3('', new $.RunOnceViewManager_queue_anon(this), 0);
},
 flush$2: function(view, force) {
  if (this._lib7_ready$2(view, force) !== true) {
    if (!(view == null))
      $.add$1(this._views, view);
  } else if (!(view == null))
    this._flushOne$2(view, force);
  else
    this._flushAll$0();
},
 flush$0: function() {
  return this.flush$2(null,false)
},
 handle_$1: function(view) {
  this._task$1(view);
},
 _flushAll$0: function() {
  var t1, t2, t3, t4, v, v0, root1, root2, others;
  for (t1 = this._views, t2 = $.iterator(t1), t3 = this._ignoreDetached, t4 = this._ignoreSubviews; t2.get$hasNext() === true;) {
    v = t2.next$0();
    if (t3 && v.get$inDocument() !== true) {
      t1.remove$1(v);
      continue;
    }
    if (t4)
      for (v0 = v; v0 = v0.get$parent(), !(v0 == null);)
        if ($.contains$1(t1, v0) === true) {
          t1.remove$1(v);
          break;
        }
  }
  root1 = [];
  root2 = [];
  others = [];
  for (t2 = $.iterator(t1); t2.get$hasNext() === true;) {
    t3 = t2.next$0();
    if (!(t3.get$parent() == null))
      t4 = others;
    else
      t4 = t3.get$profile().get$anchorView() == null ? root1 : root2;
    t4.push(t3);
  }
  $.clear(t1);
  for (t1 = $.iterator(root1); t1.get$hasNext() === true;)
    this.handle_$1(t1.next$0());
  for (t1 = $.iterator(root2); t1.get$hasNext() === true;)
    this.handle_$1(t1.next$0());
  for (t1 = $.iterator(others); t1.get$hasNext() === true;)
    this.handle_$1(t1.next$0());
},
 _flushOne$2: function(view, force) {
  var t1, found, v, t2, t3, todos;
  t1 = this._views;
  found = t1.remove$1(view);
  if (!this._ignoreDetached || view.get$inDocument() === true)
    if (this._ignoreSubviews) {
      if (force !== true)
        for (v = view; v = v.get$parent(), !(v == null);)
          if ($.contains$1(t1, v) === true)
            return;
      for (t2 = $.iterator(t1); t2.get$hasNext() === true;) {
        t3 = t2.next$0();
        if (t3.isDescendantOf$1(view) === true)
          t1.remove$1(t3);
      }
      this.handle_$1(view);
    } else {
      todos = [];
      if (found === true)
        todos.push(view);
      for (t2 = $.iterator(t1); t2.get$hasNext() === true;) {
        t3 = t2.next$0();
        if (t3.isDescendantOf$1(view) === true)
          todos.push(t3);
      }
      for (t2 = $.iterator(todos); t2.get$hasNext() === true;) {
        t3 = t2.next$0();
        t1.remove$1(t3);
        this.handle_$1(t3);
      }
    }
},
 _lib7_ready$2: function(view, force) {
  var t1, continueTask;
  t1 = this._readyChecks;
  if ($.get$isEmpty(t1) !== true) {
    continueTask = new $.RunOnceViewManager__ready_anon(force, view, this);
    for (t1 = $.iterator(t1); t1.get$hasNext() === true;)
      if (t1.next$0().call$3(view, continueTask, force) !== true)
        return false;
  }
  return true;
}
};

$$._Animator = {"": ["_lib9_tasks?", "_tmpRemoved!", "_lib9_callback?"],
 "super": "Object",
 _lib9_callback$0: function() { return this._lib9_callback.call$0(); },
 _lib9_callback$2: function(arg0, arg1) { return this._lib9_callback.call$2(arg0, arg1); },
 _afterCallback$0: function() {
  var removed, t1;
  removed = this._tmpRemoved;
  this._tmpRemoved = null;
  for (t1 = $.iterator(removed); t1.get$hasNext() === true;)
    this.remove$1(t1.next$0());
},
 _isRemoved$1: function(index) {
  var t1, task, t2, cnt, j;
  if ($.get$isEmpty(this._tmpRemoved) !== true) {
    t1 = this._lib9_tasks;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    task = t1[index];
    for (t2 = $.iterator(this._tmpRemoved), cnt = 0; t2.get$hasNext() === true;)
      if ($.eqB(t2.next$0(), task))
        ++cnt;
    if (cnt > 0) {
      for (j = 0; j < index; ++j) {
        if (j >= t1.length)
          throw $.ioore(j);
        if ($.eqB(t1[j], task)) {
          --cnt;
          t2 = cnt === 0;
        } else
          t2 = false;
        if (t2)
          return false;
      }
      return true;
    }
  }
  return false;
},
 add$1: function(task) {
  var t1 = this._lib9_tasks;
  t1.push(task);
  if (t1.length === 1)
    $.window().requestAnimationFrame$1(this._lib9_callback);
},
 remove$1: function(task) {
  var t1 = this._tmpRemoved;
  if (!(t1 == null))
    $.add$1(t1, task);
  else
    $.ListUtil_remove(this._lib9_tasks, task);
},
 _Animator$0: function() {
  this._lib9_callback = new $.anon(this);
}
};

$$.MotionState = {"": ["startTime", "_current", "_elapsed", "_paused", "_pauseStart", "data="],
 "super": "Object",
 get$runningTime: function() {
  return $.sub($.sub(this._current, this.startTime), this._paused);
},
 get$isPaused: function() {
  return !(this._pauseStart == null);
},
 _snapshot$1: function(current) {
  this._elapsed = $.sub(current, this._current);
  this._current = current;
},
 _pause$1: function(current) {
  this._pauseStart = current;
},
 _resume$1: function(current) {
  var t1 = this._pauseStart;
  if (!(t1 == null)) {
    this._paused = $.add(this._paused, $.sub(current, t1));
    this._pauseStart = null;
  }
}
};

$$.Motion = {"": ["_start?", "_end?", "_state=", "_stateFlag="],
 "super": "Object",
 _start$1: function(arg0) { return this._start.call$1(arg0); },
 _move$1: function(arg0) { return this._move.call$1(arg0); },
 _end$1: function(arg0) { return this._end.call$1(arg0); },
 _lib9_task$1: function(arg0) { return this._lib9_task.call$1(arg0); },
 get$animator: function() {
  return $.get$_animator();
},
 onStart$1: function(state) {
  if (!(this._start == null))
    this._start$1(state);
},
 onMove$1: function(state) {
  return this._move == null || this._move$1(state) === true;
},
 onEnd$1: function(state) {
  if (!(this._end == null))
    this._end$1(state);
},
 onPause$1: function(state) {
},
 onResume$1: function(state) {
},
 run$0: function() {
  switch (this._stateFlag) {
    case 1:
      return;
    case 2:
      this._stateFlag = 1;
      break;
    case 0:
      $.add$1(this.get$animator(), this._lib9_task);
      break;
  }
},
 get$isPaused: function() {
  return $.eq(this._stateFlag, 2);
},
 Motion$3$end$move$start: function(end, move, start) {
  this._lib9_task = new $.anon0(this);
}
};

$$.EasingMotion = {"": ["action", "easing", "period", "repeat", "duration", "_start", "_move", "_end", "_lib9_task", "_state", "_stateFlag"],
 "super": "Motion",
 action$2: function(arg0, arg1) { return this.action.call$2(arg0, arg1); },
 action$2: function(arg0, arg1) { return this.action.call$2(arg0, arg1); },
 easing$1: function(arg0) { return this.easing.call$1(arg0); },
 doEasing_$1: function(t) {
  return !(this.easing == null) ? this.easing$1(t) : t;
},
 doAction_$2: function(x, state) {
  return this.action$2(x, state);
},
 onMove$1: function(state) {
  var runningTime, result;
  runningTime = state.get$runningTime();
  result = this.doAction_$2(this.doEasing_$1(this._easingInput$1(runningTime)), state);
  return ($.ltB(this.repeat, 0) || $.ltB(runningTime, this.duration)) && !(result === false);
},
 _easingInput$1: function(runningTime) {
  var t1 = this.duration;
  return $.ltB(t1, 0) || $.ltB(runningTime, t1) ? $.mod($.div(runningTime, this.period), 1) : 1;
}
};

$$.ShowEffect = {"": ["element?"],
 "super": "EasingMotion"
};

$$.HideEffect = {"": ["element?"],
 "super": "EasingMotion"
};

$$.FadeInEffect = {"": ["element", "action", "easing", "period", "repeat", "duration", "_start", "_move", "_end", "_lib9_task", "_state", "_stateFlag"],
 "super": "ShowEffect"
};

$$.FadeOutEffect = {"": ["element", "action", "easing", "period", "repeat", "duration", "_start", "_move", "_end", "_lib9_task", "_state", "_stateFlag"],
 "super": "HideEffect"
};

$$.ZoomInEffect = {"": ["element", "action", "easing", "period", "repeat", "duration", "_start", "_move", "_end", "_lib9_task", "_state", "_stateFlag"],
 "super": "ShowEffect"
};

$$.ZoomOutEffect = {"": ["element", "action", "easing", "period", "repeat", "duration", "_start", "_move", "_end", "_lib9_task", "_state", "_stateFlag"],
 "super": "HideEffect"
};

$$.SlideDirection = {"": ["name?"],
 "super": "Object",
 toString$0: function() {
  return this.name;
}
};

$$.SlideInEffect = {"": ["element", "action", "easing", "period", "repeat", "duration", "_start", "_move", "_end", "_lib9_task", "_state", "_stateFlag"],
 "super": "ShowEffect"
};

$$.SlideOutEffect = {"": ["element", "action", "easing", "period", "repeat", "duration", "_start", "_move", "_end", "_lib9_task", "_state", "_stateFlag"],
 "super": "HideEffect"
};

$$.Token = {"": ["type?", "start?", "end"],
 "super": "Object",
 source$1: function(src) {
  return $.substring$2(src, this.start, this.end);
},
 extend$0: function() {
  var t1 = this.end;
  this.end = t1 + 1;
  return t1;
},
 toString$0: function() {
  return $.S(this.type);
}
};

$$.ViewMatchContext = {"": ["parent?", "view?", "viewChildIndex", "_qualified?"],
 "super": "Object",
 moveToNextSibling$0: function() {
  this.view = this.view.get$nextSibling();
  this.viewChildIndex = $.add(this.viewChildIndex, 1);
},
 isQualified$2: function(selectorIndex, position) {
  var t1, posq, t2;
  if (typeof selectorIndex !== 'number')
    return this.isQualified$2$bailout(1, selectorIndex, position);
  if (typeof position !== 'number')
    return this.isQualified$2$bailout(1, selectorIndex, position);
  if (!(selectorIndex < 0)) {
    t1 = $.get$length(this._qualified);
    if (typeof t1 !== 'number')
      return this.isQualified$2$bailout(2, selectorIndex, position, t1);
    t1 = selectorIndex >= t1;
  } else
    t1 = true;
  if (t1)
    return false;
  t1 = this._qualified;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.isQualified$2$bailout(3, t1, position, selectorIndex);
  if (selectorIndex !== (selectorIndex | 0))
    throw $.iae(selectorIndex);
  if (selectorIndex < 0 || selectorIndex >= t1.length)
    throw $.ioore(selectorIndex);
  posq = t1[selectorIndex];
  if (typeof posq !== 'string' && (typeof posq !== 'object' || posq === null || posq.constructor !== Array && !posq.is$JavaScriptIndexingBehavior()))
    return this.isQualified$2$bailout(4, position, posq);
  if (position > -1) {
    t1 = posq.length;
    if (position < t1) {
      if (position !== (position | 0))
        throw $.iae(position);
      if (position < 0 || position >= t1)
        throw $.ioore(position);
      t2 = posq[position] === true;
      t1 = t2;
    } else
      t1 = false;
  } else
    t1 = false;
  return t1;
},
 isQualified$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      position = env1;
      selectorIndex = env0;
      break;
    case 2:
      t1 = env2;
      position = env1;
      selectorIndex = env0;
      break;
    case 3:
      selectorIndex = env2;
      position = env1;
      t1 = env0;
      break;
    case 4:
      posq = env1;
      position = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && !$.ltB(selectorIndex, 0))
        switch (state0) {
          case 0:
            t1 = $.get$length(this._qualified);
          case 2:
            state0 = 0;
            t1 = $.geB(selectorIndex, t1);
        }
      else
        t1 = true;
      if (t1)
        return false;
      t1 = this._qualified;
    case 3:
      state0 = 0;
      posq = $.index(t1, selectorIndex);
    case 4:
      var position, selectorIndex, t1, posq;
      state0 = 0;
      return $.gtB(position, -1) && $.ltB(position, $.get$length(posq)) && $.index(posq, position) === true;
  }
},
 qualify$3: function(selectorIndex, position, qualified) {
  var t1 = this._qualified;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.qualify$3$bailout(1, selectorIndex, position, qualified, t1);
  if (selectorIndex !== (selectorIndex | 0))
    throw $.iae(selectorIndex);
  if (selectorIndex < 0 || selectorIndex >= t1.length)
    throw $.ioore(selectorIndex);
  t1 = t1[selectorIndex];
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.qualify$3$bailout(2, t1, position, qualified);
  if (position !== (position | 0))
    throw $.iae(position);
  if (position < 0 || position >= t1.length)
    throw $.ioore(position);
  t1[position] = qualified;
},
 qualify$3$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env3;
      qualified = env2;
      position = env1;
      selectorIndex = env0;
      break;
    case 2:
      qualified = env2;
      position = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._qualified;
    case 1:
      state0 = 0;
      t1 = $.index(t1, selectorIndex);
    case 2:
      var t1, qualified, position, selectorIndex;
      state0 = 0;
      $.indexSet(t1, position, qualified);
  }
},
 qualify$2: function(selectorIndex,position) {
  return this.qualify$3(selectorIndex,position,true)
},
 isMatched$1: function(selectorIndex) {
  var i, t1, t3, t2;
  if (typeof selectorIndex !== 'number')
    return this.isMatched$1$bailout(1, selectorIndex);
  if (selectorIndex < 0) {
    i = 0;
    while (true) {
      t1 = $.get$length(this._qualified);
      if (typeof t1 !== 'number')
        return this.isMatched$1$bailout(2, i, t1);
      if (!(i < t1))
        break;
      if (this.isMatched$1(i) === true)
        return true;
      ++i;
    }
    return false;
  } else {
    t1 = this._qualified;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.isMatched$1$bailout(3, selectorIndex, t1);
    t3 = t1.length;
    if (selectorIndex < t3) {
      if (selectorIndex !== (selectorIndex | 0))
        throw $.iae(selectorIndex);
      if (selectorIndex < 0 || selectorIndex >= t3)
        throw $.ioore(selectorIndex);
      t2 = $.get$last(t1[selectorIndex]) === true;
      t1 = t2;
    } else
      t1 = false;
    return t1;
  }
},
 isMatched$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      selectorIndex = env0;
      break;
    case 2:
      t1 = env1;
      i = env0;
      break;
    case 3:
      t1 = env1;
      selectorIndex = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    default:
      var selectorIndex, i, t1;
      if (state0 === 2 || state0 === 0 && $.ltB(selectorIndex, 0))
        switch (state0) {
          case 0:
            i = 0;
          case 2:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = $.get$length(this._qualified);
                  case 2:
                    state0 = 0;
                    if (!$.ltB(i, t1))
                      break L0;
                    if (this.isMatched$1(i) === true)
                      return true;
                    ++i;
                }
            return false;
        }
      else
        switch (state0) {
          case 0:
            t1 = this._qualified;
          case 3:
            state0 = 0;
            return $.ltB(selectorIndex, $.get$length(t1)) && $.get$last($.index(t1, selectorIndex)) === true;
        }
  }
},
 isMatched$0: function() {
  return this.isMatched$1(-1)
},
 match$1: function(seq) {
  var t1, t2;
  t1 = this.view;
  t2 = seq.get$type();
  if (t2 == null || $.eqB(t2, t1.get$className())) {
    t1 = this.view;
    t2 = seq.get$id();
    t1 = (t2 == null || $.eqB(t2, t1.get$id())) && $.ViewMatchContext_matchClasses(this.view, seq.get$classes()) && this.matchPseudoClasses$1(seq.get$pseudoClasses()) === true;
  } else
    t1 = false;
  return t1;
},
 matchPseudoClasses$1: function(pseudoClasses) {
  var t1, t2, accept;
  if (pseudoClasses == null || $.get$isEmpty(pseudoClasses) === true)
    return true;
  for (t1 = $.iterator(pseudoClasses); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    accept = $.PseudoClass_getDefinition(t2.get$name());
    if (accept == null)
      throw $.$$throw($._ExceptionImplementation$('Pseudo class definition not found: ' + $.S(t2.get$name())));
    if (accept.call$2(this, t2.get$parameter()) !== true)
      return false;
  }
  return true;
},
 toString$0: function() {
  var sb, t1;
  sb = $.StringBuffer_StringBuffer('');
  for (t1 = $.iterator(this._qualified); t1.get$hasNext() === true;)
    $.add$1(sb, t1.next$0());
  return $.toString($.add$1(sb, ' @' + $.S(this.view)));
},
 ViewMatchContext$1: function(view) {
  this.viewChildIndex = $.ViewMatchContext_computeViewChildIndex(this.view);
},
 ViewMatchContext$root$2: function(view, selectors) {
  this.viewChildIndex = $.ViewMatchContext_computeViewChildIndex(this.view);
}
};

$$.PseudoClass = {"": ["name?", "parameter="],
 "super": "Object",
 toString$0: function() {
  var sb, t1;
  sb = $.StringBuffer_StringBuffer(':' + $.S(this.name));
  t1 = this.parameter;
  if (!(t1 == null))
    $.add$1(sb, '(' + $.S(t1) + ')');
  return $.toString(sb);
}
};

$$.SimpleSelectorSequence = {"": ["type=", "id=", "classes?", "attributes?", "pseudoClasses?", "combinator?"],
 "super": "Object",
 setCombinatorByToken$1: function(token) {
  switch (token.get$type()) {
    case 7:
      this.combinator = 1;
      break;
    case 8:
      this.combinator = 2;
      break;
    case 9:
      this.combinator = 3;
      break;
    default:
  }
},
 printCombinator$0: function() {
  switch (this.combinator) {
    case 1:
      return ' >';
    case 2:
      return ' +';
    case 3:
      return ' ~';
    default:
      return '';
  }
},
 toString$0: function() {
  var sb, t1;
  sb = $.StringBuffer_StringBuffer('');
  t1 = this.type;
  if (!(t1 == null))
    $.add$1(sb, t1);
  t1 = this.id;
  if (!(t1 == null))
    $.add$1(sb, '#' + $.S(t1));
  for (t1 = $.iterator(this.classes); t1.get$hasNext() === true;)
    $.add$1(sb, '.' + $.S(t1.next$0()));
  for (t1 = $.iterator(this.pseudoClasses); t1.get$hasNext() === true;)
    $.add$1(sb, $.S(t1.next$0()));
  return $.get$isEmpty(sb) === true ? '*' : $.toString(sb);
}
};

$$.Selector = {"": ["selectorIndex?", "seqs?"],
 "super": "Object",
 addCombinator$1: function(token) {
  $.get$last(this.seqs).setCombinatorByToken$1(token);
},
 getCombinator$1: function(index) {
  var t1 = this.seqs;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index].get$combinator();
},
 requiresIdSpace$1: function(index) {
  var t1 = this.seqs;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return !(t1[index].get$id() == null);
},
 addSequence$0: function() {
  var seq = $.SimpleSelectorSequence$();
  this.seqs.push(seq);
  return seq;
},
 toString$0: function() {
  var sb, t1, t2;
  sb = $.StringBuffer_StringBuffer('');
  for (t1 = $.iterator(this.seqs); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.add$1(sb, $.S(t2) + $.S(t2.printCombinator$0()) + ' ');
  }
  return $.trim($.toString(sb));
}
};

$$.SelectorParseException = {"": ["source", "token", "index"],
 "super": "Object",
 source$1: function(arg0) { return this.source.call$1(arg0); },
 toString$0: function() {
  var t1, t2, t3;
  t1 = this.token;
  if (t1 == null) {
    t1 = this.index;
    t2 = $.ltB(t1, 0);
    t3 = this.source;
    t1 = t2 ? 'Unexpected end of selector: ' + $.S(t3) : 'Unexpected character at ' + $.S(t1) + ' in selector ' + $.S(t3);
  } else {
    t2 = 'Unexpected token ' + $.S(t1.get$type()) + ' at ' + $.S(this.index) + ' in selector ' + $.S(this.source);
    t1 = t2;
  }
  return t1;
},
 is$Exception: true
};

$$.ViewIterator = {"": ["_root", "_selectors", "_posOffset", "_allIds", "_offsetRoot", "_currCtx", "_ready", "_lib6_next=", "_lib6_index"],
 "super": "Object",
 _ready$2: function(arg0, arg1) { return this._ready.call$2(arg0, arg1); },
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  this._ready = false;
  return this._lib6_next;
},
 get$hasNext: function() {
  this._loadNext$0();
  return !(this._lib6_next == null);
},
 _loadNext$0: function() {
  if (this._ready)
    return;
  this._lib6_next = this._seekNext$0();
  this._ready = true;
},
 _seekNext$0: function() {
  this._currCtx = this._lib6_index < 0 ? this._buildRootCtx$0() : this._buildNextCtx$0();
  while (true) {
    var t1 = this._currCtx;
    if (!(!(t1 == null) && t1.isMatched$0() !== true))
      break;
    this._currCtx = this._buildNextCtx$0();
  }
  if (!(this._currCtx == null)) {
    this._lib6_index = this._lib6_index + 1;
    return this._currCtx.get$view();
  }
  return;
},
 _buildRootCtx$0: function() {
  var rt, selector, i, seq, rt2, t1, ctx;
  rt = this._root;
  if ($.gtB(this._posOffset, 0)) {
    selector = $.index(this._selectors, 0);
    for (i = 0; $.ltB(i, this._posOffset); ++i, rt = rt2) {
      seq = $.index(selector.get$seqs(), i);
      rt2 = rt.getFellow$1(seq.get$id());
      if (rt2 == null)
        return;
      t1 = seq.get$type();
      if (!(t1 == null || $.eqB(t1, rt2.get$className())) || !$.ViewMatchContext_matchClasses(rt2, seq.get$classes()) || $.ViewMatchContext$(rt2).matchPseudoClasses$1(seq.get$pseudoClasses()) !== true)
        return;
      if (i > 0)
        switch (selector.getCombinator$1(i - 1)) {
          case 0:
            if ($.ViewIterator_isDescendant(rt2, rt) !== true)
              return;
            break;
          case 1:
            if (!$.eqB(rt2.get$parent(), rt))
              return;
            break;
          case 3:
            if (!$.ViewIterator_isGeneralSibling(rt2, rt))
              return;
            break;
          case 2:
            if (!$.eqB(rt2.get$previousSibling(), rt))
              return;
            break;
        }
    }
    this._offsetRoot = rt.get$parent();
  }
  t1 = this._selectors;
  ctx = $.ViewMatchContext$root(rt, t1);
  if ($.gtB(this._posOffset, 0))
    for (t1 = $.iterator(t1); t1.get$hasNext() === true;)
      ctx.qualify$2(t1.next$0().get$selectorIndex(), $.sub(this._posOffset, 1));
  else
    this.matchLevel0$1(ctx);
  return ctx;
},
 _buildNextCtx$0: function() {
  var t1, t2, t3;
  if (this._allIds === true)
    return;
  if (!(this._currCtx.get$view().get$firstChild() == null))
    return this._buildFirstChildCtx$1(this._currCtx);
  for (t1 = this._root; t2 = this._currCtx.get$view().get$nextSibling() == null, t3 = this._currCtx, t2;) {
    this._currCtx = t3.get$parent();
    t2 = this._currCtx;
    if (!(t2 == null)) {
      t2 = t2.get$view();
      t3 = this._posOffset;
      if (typeof t3 !== 'number')
        return this._buildNextCtx$0$bailout(1, t3, t1, t2);
      t2 = $.eqB(t2, t3 > 0 ? this._offsetRoot : t1);
    } else
      t2 = true;
    if (t2)
      return;
  }
  return this._buildNextSiblingCtx$1(t3);
},
 _buildNextCtx$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t2 = env2;
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this._allIds === true)
        return;
      if (!(this._currCtx.get$view().get$firstChild() == null))
        return this._buildFirstChildCtx$1(this._currCtx);
      t1 = this._root;
    case 1:
      var t1, t2, t3;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t2 = this._currCtx.get$view().get$nextSibling() == null;
              t3 = this._currCtx;
              if (!t2)
                break L0;
              this._currCtx = t3.get$parent();
              t2 = this._currCtx;
            case 1:
              if (state0 === 1 || state0 === 0 && !(t2 == null))
                switch (state0) {
                  case 0:
                    t2 = t2.get$view();
                    t3 = this._posOffset;
                  case 1:
                    state0 = 0;
                    t2 = $.eqB(t2, $.gtB(t3, 0) ? this._offsetRoot : t1);
                }
              else
                t2 = true;
              if (t2)
                return;
          }
      return this._buildNextSiblingCtx$1(t3);
  }
},
 _buildFirstChildCtx$1: function(parent$) {
  var ctx, t1, t2, i, posStart, j, t3, t4;
  ctx = $.ViewMatchContext$child(parent$.get$view().get$firstChild(), parent$);
  if ($.eqB(this._posOffset, 0))
    this.matchLevel0$1(ctx);
  for (t1 = $.iterator(this._selectors); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    i = t2.get$selectorIndex();
    posStart = $.gtB(this._posOffset, 0) ? $.sub(this._posOffset, 1) : 0;
    for (j = posStart; $.ltB(j, $.sub($.get$length(t2.get$seqs()), 1)); j = $.add(j, 1))
      switch (t2.getCombinator$1(j)) {
        case 0:
          if (parent$.isQualified$2(i, j) === true && $.ViewIterator_checkIdSpace(t2, $.add(j, 1), ctx))
            ctx.qualify$2(i, j);
          if (parent$.isQualified$2(i, j) === true) {
            t3 = $.add(j, 1);
            t4 = ctx.match$1($.index(t2.get$seqs(), t3)) === true;
            t3 = t4;
          } else
            t3 = false;
          if (t3)
            ctx.qualify$2(i, $.add(j, 1));
          break;
        case 1:
          if (parent$.isQualified$2(i, j) === true) {
            t3 = $.add(j, 1);
            t4 = ctx.match$1($.index(t2.get$seqs(), t3)) === true;
            t3 = t4;
          } else
            t3 = false;
          if (t3)
            ctx.qualify$2(i, $.add(j, 1));
          break;
      }
  }
  return ctx;
},
 _buildNextSiblingCtx$1: function(ctx) {
  var t1, t2, i, posEnd, len, j, cb, parent$, parentPass, t3, t4, t5;
  ctx.moveToNextSibling$0();
  for (t1 = $.iterator(this._selectors); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    i = t2.get$selectorIndex();
    posEnd = $.gtB(this._posOffset, 0) ? $.sub(this._posOffset, 1) : 0;
    len = $.get$length(t2.get$seqs());
    ctx.qualify$3(i, $.sub(len, 1), false);
    for (j = $.sub(len, 2); $.geB(j, posEnd); j = $.sub(j, 1)) {
      cb = t2.getCombinator$1(j);
      parent$ = ctx.get$parent();
      switch (cb) {
        case 0:
          parentPass = !(parent$ == null) && parent$.isQualified$2(i, j) === true;
          ctx.qualify$3(i, j, parentPass && $.ViewIterator_checkIdSpace(t2, $.add(j, 1), ctx));
          if (parentPass) {
            t3 = $.add(j, 1);
            t4 = ctx.match$1($.index(t2.get$seqs(), t3)) === true;
            t3 = t4;
          } else
            t3 = false;
          if (t3)
            ctx.qualify$2(i, $.add(j, 1));
          break;
        case 1:
          t3 = $.add(j, 1);
          if (!(parent$ == null))
            if (parent$.isQualified$2(i, j) === true) {
              t4 = $.add(j, 1);
              t5 = ctx.match$1($.index(t2.get$seqs(), t4)) === true;
              t4 = t5;
            } else
              t4 = false;
          else
            t4 = false;
          ctx.qualify$3(i, t3, t4);
          break;
        case 3:
          if (ctx.isQualified$2(i, j) === true) {
            t3 = $.add(j, 1);
            t4 = $.add(j, 1);
            ctx.qualify$3(i, t3, ctx.match$1($.index(t2.get$seqs(), t4)));
          }
          break;
        case 2:
          t3 = $.add(j, 1);
          if (ctx.isQualified$2(i, j) === true) {
            t4 = $.add(j, 1);
            t5 = ctx.match$1($.index(t2.get$seqs(), t4)) === true;
            t4 = t5;
          } else
            t4 = false;
          ctx.qualify$3(i, t3, t4);
          ctx.qualify$3(i, j, false);
          break;
      }
    }
  }
  if ($.eqB(this._posOffset, 0))
    this.matchLevel0$1(ctx);
  return ctx;
},
 matchLevel0$1: function(ctx) {
  var t1, t2;
  for (t1 = $.iterator(this._selectors); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (ctx.match$1($.index(t2.get$seqs(), 0)) === true)
      ctx.qualify$2(t2.get$selectorIndex(), 0);
  }
},
 ViewIterator$2: function(_root, selector) {
  var t1 = this._selectors;
  this._posOffset = $.ViewIterator__getCommonSeqLength(t1);
  this._allIds = $.ViewIterator__isAllIds(t1, this._posOffset);
}
};

$$.ViewIterable = {"": ["_root", "_selector"],
 "super": "Object",
 iterator$0: function() {
  return $.ViewIterator$(this._root, this._selector);
}
};

$$.SwitchViewDemo_main_anon = {"": ["box_0", "v1_5", "this_4", "v2_3"],
 "super": "Closure",
 call$1: function(event$) {
  this.this_4.replace$3(this.v2_3, this.v1_5, this.box_0._eff_2);
}
};

$$.SwitchViewDemo_main_anon0 = {"": ["box_0", "v1_8", "this_7", "v2_6"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2, t3, _eff;
  t1 = this.this_7;
  t2 = this.v1_8;
  t3 = this.v2_6;
  _eff = new $.SwitchViewDemo_main_anon14();
  this.box_0._eff_2 = _eff;
  t1.replace$3(t2, t3, _eff);
}
};

$$.SwitchViewDemo_main_anon14 = {"": [],
 "super": "Closure",
 call$3: function(n1, n2, end) {
  var n1z, t1;
  n1z = n1.get$style().get$zIndex();
  t1 = new $.SwitchViewDemo_main_anon15(n1);
  $.FadeInEffect$(n2, null, new $.SwitchViewDemo_main_anon16(n1, n1z, end), 1, 0, 500, t1).run$0();
}
};

$$.SwitchViewDemo_main_anon15 = {"": ["n1_9"],
 "super": "Closure",
 call$1: function(state) {
  this.n1_9.get$style().set$zIndex('-1');
}
};

$$.SwitchViewDemo_main_anon16 = {"": ["n1_12", "n1z_11", "end_10"],
 "super": "Closure",
 call$1: function(state) {
  var t1;
  this.end_10.call$0();
  t1 = this.n1z_11;
  this.n1_12.get$style().set$zIndex(t1);
}
};

$$.SwitchViewDemo_main_anon1 = {"": ["box_0", "v1_15", "this_14", "v2_13"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2, t3, t4, _eff;
  t1 = this.this_14;
  t2 = this.v1_15;
  t3 = this.v2_13;
  t4 = this.box_0;
  _eff = new $.SwitchViewDemo_main_anon9(t4);
  t4._eff_2 = _eff;
  t1.replace$3(t2, t3, _eff);
}
};

$$.SwitchViewDemo_main_anon9 = {"": ["box_0"],
 "super": "Closure",
 call$3: function(n1, n2, end) {
  var width, t1, t2, t3;
  width = $.DOMAgent_DOMAgent(this.box_0.body_1).get$width();
  t1 = new $.SwitchViewDemo_main_anon10(n2, n1, width);
  t2 = new $.SwitchViewDemo_main_anon11(n2, n1, width);
  t3 = new $.SwitchViewDemo_main_anon12(end, n1);
  $.EasingMotion$(t1, new $.SwitchViewDemo_main_anon13(), t3, 500, 1, t2).run$0();
}
};

$$.SwitchViewDemo_main_anon10 = {"": ["n2_18", "n1_17", "width_16"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, l, t2;
  t1 = this.width_16;
  l = $.toInt($.mul(t1, x));
  t2 = $.CSS_px($.neg(l));
  this.n1_17.get$style().set$left(t2);
  t2 = $.CSS_px($.sub(t1, l));
  this.n2_18.get$style().set$left(t2);
}
};

$$.SwitchViewDemo_main_anon11 = {"": ["n2_21", "n1_20", "width_19"],
 "super": "Closure",
 call$1: function(state) {
  var t1, parent$, t2;
  t1 = this.n1_20;
  parent$ = t1.get$parent();
  if (!(parent$ == null)) {
    state.set$data(parent$.get$style().get$overflow());
    parent$.get$style().set$overflow('hidden');
  }
  t2 = $.CSS_px(this.width_19);
  t1.get$style().set$left(t2);
  t2 = this.n2_21;
  t2.get$style().set$left('0');
  t2.get$style().set$visibility('');
}
};

$$.SwitchViewDemo_main_anon12 = {"": ["end_23", "n1_22"],
 "super": "Closure",
 call$1: function(state) {
  var parent$, t1;
  parent$ = this.n1_22.get$parent();
  if (!(parent$ == null)) {
    t1 = state.get$data() == null ? '' : state.get$data();
    parent$.get$style().set$overflow(t1);
  }
  this.end_23.call$0();
}
};

$$.SwitchViewDemo_main_anon13 = {"": [],
 "super": "Closure",
 call$1: function(t) {
  return $.mul(t, t);
}
};

$$.SwitchViewDemo_main_anon2 = {"": ["box_0", "v1_26", "this_25", "v2_24"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2, t3, t4, _eff;
  t1 = this.this_25;
  t2 = this.v1_26;
  t3 = this.v2_24;
  t4 = this.box_0;
  _eff = new $.SwitchViewDemo_main_anon4(t4, t1);
  t4._eff_2 = _eff;
  t1.replace$3(t2, t3, _eff);
}
};

$$.SwitchViewDemo_main_anon4 = {"": ["box_0", "this_27"],
 "super": "Closure",
 call$3: function(n1, n2, end) {
  var actions, t1, ends, t2, t3, h, height, range;
  actions = $._ListImpl_List(null, 'MotionAction');
  t1 = 'MotionAction';
  $.setRuntimeTypeInfo(actions, {runtimeType: 'List<' + t1 + '>', 'E': t1});
  ends = $._ListImpl_List(null, 'Function');
  t2 = 'Function';
  $.setRuntimeTypeInfo(ends, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  t3 = this.box_0;
  h = $.DOMAgent_DOMAgent(t3.body_1).get$height();
  height = $.gtB(h, 0) ? h : $.get$browser().get$size().get$height();
  range = $.Offset$($.div($.DOMAgent_DOMAgent(t3.body_1).get$width(), 2), $.div(height, 2));
  actions.push(new $.SwitchViewDemo_main_anon5(height, n1));
  this.this_27.addFly$4(n1, range, actions, ends);
  t1 = new $.SwitchViewDemo_main_anon6(actions);
  t2 = new $.SwitchViewDemo_main_anon7(n2, n1);
  $.EasingMotion$(t1, null, new $.SwitchViewDemo_main_anon8(n2, n1, ends, end), 500, 1, t2).run$0();
}
};

$$.SwitchViewDemo_main_anon5 = {"": ["height_29", "vonode_28"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1 = $.CSS_px($.toInt($.mul($.mul(this.height_29, x), x)));
  this.vonode_28.get$style().set$top(t1);
}
};

$$.SwitchViewDemo_main_anon6 = {"": ["actions_30"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1;
  for (t1 = $.iterator(this.actions_30); t1.get$hasNext() === true;)
    t1.next$0().call$2(x, state);
}
};

$$.SwitchViewDemo_main_anon7 = {"": ["n2_32", "n1_31"],
 "super": "Closure",
 call$1: function(state) {
  var t1, parent$;
  t1 = this.n2_32;
  t1.get$style().set$zIndex('-1');
  t1.get$style().set$visibility('');
  parent$ = this.n1_31.get$parent();
  if (!(parent$ == null)) {
    state.set$data(parent$.get$style().get$overflow());
    parent$.get$style().set$overflow('hidden');
  }
}
};

$$.SwitchViewDemo_main_anon8 = {"": ["n2_36", "n1_35", "ends_34", "end_33"],
 "super": "Closure",
 call$1: function(state) {
  var parent$, t1;
  parent$ = this.n1_35.get$parent();
  if (!(parent$ == null)) {
    t1 = state.get$data() == null ? '' : state.get$data();
    parent$.get$style().set$overflow(t1);
  }
  this.n2_36.get$style().set$zIndex('');
  this.end_33.call$0();
  for (t1 = $.iterator(this.ends_34); t1.get$hasNext() === true;)
    t1.next$0().call$0();
}
};

$$.SwitchViewDemo_main_anon3 = {"": ["box_0", "v1_39", "this_38", "v2_37"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2, t3;
  t1 = this.this_38;
  t2 = this.v1_39;
  t3 = this.v2_37;
  this.box_0._eff_2 = null;
  return t1.replace$3(t2, t3, null);
}
};

$$._FilteredElementList__filtered_anon = {"": [],
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._ChildrenElementList_filter_anon = {"": ["output_1", "f_0"],
 "super": "Closure",
 call$1: function(element) {
  if (this.f_0.call$1(element) === true)
    $.add$1(this.output_1, element);
}
};

$$._FilteredElementList_removeRange_anon = {"": [],
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.Maps__emitMap_anon = {"": ["visiting_3", "box_0", "result_2"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true)
    $.add$1(this.result_2, ', ');
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$.DoubleLinkedQueue_length__ = {"": ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._LinkedHashMapImpl_forEach__ = {"": ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.NoSuchMethodError_toString_anon = {"": ["box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1 = this.box_0;
  if ($.gtB(t1.i_2, 0))
    $.add$1(t1.sb_1, ', ');
  $.add$1(t1.sb_1, key);
  $.add$1(t1.sb_1, ': ');
  $.add$1(t1.sb_1, $.NoSuchMethodError_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$.Browser__initBrowserInfo_anon = {"": ["this_1", "ua_0"],
 "super": "Closure",
 call$1: function(regex) {
  var m, t1, t2;
  m = regex.firstMatch$1(this.ua_0);
  if (!(m == null)) {
    t1 = m.group$1(1);
    t2 = this.this_1;
    t2.set$name(t1);
    t2.set$version($.Browser__versionOf(m.group$1(2), '.'));
    return true;
  }
  return false;
}
};

$$._DateImpl_toString_fourDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  var absN, sign;
  absN = $.abs(n);
  sign = $.ltB(n, 0) ? '-' : '';
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + '0' + $.S(absN);
  if ($.geB(absN, 10))
    return sign + '00' + $.S(absN);
  return sign + '000' + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return '0' + $.S(n);
  return '00' + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {"": [],
 "super": "Closure",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return '0' + $.S(n);
}
};

$$._CssClassSet_clear_anon = {"": [],
 "super": "Closure",
 call$1: function(s) {
  return $.clear(s);
}
};

$$._HashSetImpl_filter__ = {"": ["result_1", "f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  if (this.f_0.call$1(key) === true)
    $.add$1(this.result_1, key);
}
};

$$._HashSetImpl_forEach__ = {"": ["f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$._HashSetImpl_removeAll__ = {"": ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  this.this_0.remove$1(value);
}
};

$$._HashSetImpl_addAll__ = {"": ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$._CssClassSet_removeAll_anon = {"": ["collection_0"],
 "super": "Closure",
 call$1: function(s) {
  return s.removeAll$1(this.collection_0);
}
};

$$._CssClassSet_addAll_anon = {"": ["collection_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.addAll(s, this.collection_0);
}
};

$$._CssClassSet_add_anon = {"": ["value_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.add$1(s, this.value_0);
}
};

$$.ConstantMap_forEach_anon = {"": ["this_1", "f_0"],
 "super": "Closure",
 call$1: function(key) {
  return this.f_0.call$2(key, $.index(this.this_1, key));
}
};

$$.invokeClosure_anon = {"": ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"": ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"": ["arg2_5", "closure_4", "arg1_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$._DataAttributeMap_keys_anon = {"": ["this_1", "keys_0"],
 "super": "Closure",
 call$2: function(key, value) {
  if ($.startsWith(key, 'data-') === true)
    $.add$1(this.keys_0, $.substring$1(key, 5));
}
};

$$._DataAttributeMap_forEach_anon = {"": ["this_1", "f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  if ($.startsWith(key, 'data-') === true)
    this.f_0.call$2($.substring$1(key, 5), value);
}
};

$$.View_dataAttributes_anon = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = $.Map_Map('dynamic', 'dynamic');
  this.this_0.set$_dataAttrs(t1);
  return t1;
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_3, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": ["readSlot_8", "findSlot_7", "writeSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_7.call$1(e);
    t1.copy_1 = this.readSlot_8.call$1(slot);
    t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_6.call$2(slot, t1.copy_1);
    e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_7.call$1(e);
    t2 = this.readSlot_8;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_6.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_6;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, elementCopy, length$, copy, slot, i);
          for (t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, i);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$('structured clone of other type'));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      i = env6;
      slot = env5;
      copy = env4;
      length$ = env3;
      elementCopy = env2;
      t3 = env1;
      e = env0;
      break;
    case 3:
      i = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_7.call$1(e);
        t1.copy_1 = this.readSlot_8.call$1(slot);
        t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_6.call$2(slot, t1.copy_1);
        e.forEach$1(new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      var t1, slot, t2, e, length$, copy, t3, i, element, elementCopy, j;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.get$length(e);
            slot = this.findSlot_7.call$1(e);
            t2 = this.readSlot_8;
            copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_6.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t3 = this.writeSlot_6;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$('structured clone of other type'));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.ViewEventListenerMap__get_anon = {"": ["this_1", "type_0"],
 "super": "Closure",
 call$0: function() {
  return $.ViewEventListenerList$(this.this_1.get$_lib5_ptr(), this.type_0);
}
};

$$.PseudoClass_getDefinition_anon = {"": [],
 "super": "Closure",
 call$2: function(ctx, param) {
  return param == null && ctx.get$view().get$previousSibling() == null;
}
};

$$.PseudoClass_getDefinition_anon0 = {"": [],
 "super": "Closure",
 call$2: function(ctx, param) {
  return param == null && ctx.get$view().get$nextSibling() == null;
}
};

$$.PseudoClass_getDefinition_anon1 = {"": [],
 "super": "Closure",
 call$2: function(ctx, param) {
  return param == null && ctx.get$view().get$previousSibling() == null && ctx.get$view().get$nextSibling() == null;
}
};

$$.PseudoClass_getDefinition_anon2 = {"": [],
 "super": "Closure",
 call$2: function(ctx, param) {
  return param == null && $.eqB(ctx.get$view().get$childCount(), 0);
}
};

$$.PseudoClass_getDefinition_anon3 = {"": [],
 "super": "Closure",
 call$2: function(ctx, param) {
  return !(param == null);
}
};

$$.PseudoClass_getDefinition_anon4 = {"": [],
 "super": "Closure",
 call$2: function(ctx, param) {
  return !(param == null);
}
};

$$._EventListenerInfo_add_anon = {"": ["box_0"],
 "super": "Closure",
 call$0: function() {
  this.box_0.first_10 = true;
  return [];
}
};

$$._domChangeEvtDisp_anon = {"": [],
 "super": "Closure",
 call$1: function(target) {
  return new $._domChangeEvtDisp_anon0(target);
}
};

$$._domChangeEvtDisp_anon0 = {"": ["target_0"],
 "super": "Closure",
 call$1: function(event$) {
  var dt, tv, t1, t2;
  dt = event$.get$target();
  tv = !(dt == null) ? $.ViewUtil_getView(dt) : dt;
  t1 = this.target_0;
  if (!(tv == null))
    t2 = tv.get$value();
  else {
    if (typeof dt === 'object' && dt !== null && dt.is$InputElement())
      t2 = $.eqB(dt.type, 'checkbox') || $.eqB(dt.type, 'radio');
    else
      t2 = false;
    t2 = t2 ? dt.get$checked() : dt.get$value();
  }
  t1.sendEvent$1($.ChangeEvent$(t2, 'change', null, 'dynamic'));
}
};

$$._domEvtDisp_anon = {"": ["type_0"],
 "super": "Closure",
 call$1: function(target) {
  return new $._domEvtDisp_anon0(target, this.type_0);
}
};

$$._domEvtDisp_anon0 = {"": ["target_2", "type_1"],
 "super": "Closure",
 call$1: function(event$) {
  var tv, t1, t2;
  tv = event$.get$target();
  tv = typeof tv === 'object' && tv !== null && tv.is$Node() ? $.ViewUtil_getView(tv) : null;
  t1 = this.target_2;
  t2 = this.type_1;
  t1.sendEvent$1($.DOMEvent$(event$, t2, !(tv == null) ? tv : t1));
}
};

$$.SwitchViewDemo_replace_anon = {"": ["vn_2", "vo_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.vo_1;
  t1.remove$0();
  t1.get$style().set$visibility('');
  this.vn_2.get$style().set$visibility('');
  this.this_0.set$moving(false);
}
};

$$.RunOnceQueue_add_anon = {"": ["task_2", "this_1", "key_0"],
 "super": "Closure",
 call$0: function() {
  this.this_1.get$_tasks().remove$1(this.key_0);
  this.task_2.call$0();
}
};

$$.RunOnceViewManager_queue_anon = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  this.this_0.flush$0();
}
};

$$.LayoutManager_handle__anon = {"": ["parent_0"],
 "super": "Closure",
 call$0: function() {
  return this.parent_0.get$innerWidth();
}
};

$$.LayoutManager_handle__anon0 = {"": ["parent_1"],
 "super": "Closure",
 call$0: function() {
  return this.parent_1.get$innerHeight();
}
};

$$.rootLayout_anon = {"": ["root_2", "anchor_1", "size_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.anchor_1;
  if (!(t1 == null)) {
    t2 = this.root_2.get$parent();
    t1 = (t1 == null ? t2 == null : t1 === t2) ? t1.get$innerWidth() : t1.get$realWidth();
  } else
    t1 = this.size_0.get$width();
  return t1;
}
};

$$.rootLayout_anon0 = {"": ["root_5", "anchor_4", "size_3"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.anchor_4;
  if (!(t1 == null)) {
    t2 = this.root_5.get$parent();
    t1 = (t1 == null ? t2 == null : t1 === t2) ? t1.get$innerHeight() : t1.get$realHeight();
  } else
    t1 = this.size_3.get$height();
  return t1;
}
};

$$._anchorYLocators_anon = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  view.set$top($.sub(offset, view.get$realHeight()));
}
};

$$._anchorYLocators_anon0 = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  view.set$top(offset);
}
};

$$._anchorYLocators_anon1 = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerHeight() : anchor.get$realHeight();
  view.set$top($.add(offset, $.tdiv($.sub(t1, view.get$realHeight()), 2)));
}
};

$$._anchorYLocators_anon2 = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerHeight() : anchor.get$realHeight();
  view.set$top($.sub($.add(offset, t1), view.get$realHeight()));
}
};

$$._anchorYLocators_anon3 = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerHeight() : anchor.get$realHeight();
  view.set$top($.add(offset, t1));
}
};

$$._anchorXLocators_anon = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  view.set$left($.sub(offset, view.get$realWidth()));
}
};

$$._anchorXLocators_anon0 = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  view.set$left(offset);
}
};

$$._anchorXLocators_anon1 = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerWidth() : anchor.get$realWidth();
  view.set$left($.add(offset, $.tdiv($.sub(t1, view.get$realWidth()), 2)));
}
};

$$._anchorXLocators_anon2 = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerWidth() : anchor.get$realWidth();
  view.set$left($.sub($.add(offset, t1), view.get$realWidth()));
}
};

$$._anchorXLocators_anon3 = {"": [],
 "super": "Closure",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerWidth() : anchor.get$realWidth();
  view.set$left($.add(offset, t1));
}
};

$$.Element_getComputedStyle_anon = {"": ["pseudoElement_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  return $.window().$dom_getComputedStyle$2(this.this_0, this.pseudoElement_1);
}
};

$$._FutureImpl_transform_anon = {"": ["completer_1", "transformation_0"],
 "super": "Closure",
 call$1: function(v, exception) {
  var transformed, t1, e, stackTrace;
  transformed = null;
  try {
    transformed = this.transformation_0.call$1(v);
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    stackTrace = $.getTraceFromException(exception);
    this.completer_1.completeException$2(e, stackTrace);
    return;
  }

  this.completer_1.complete$1(transformed);
}
};

$$._FutureImpl__forwardException_anon = {"": ["completer_1", "future_0"],
 "super": "Closure",
 call$1: function(e) {
  this.completer_1.completeException$2(e, this.future_0.get$stackTrace());
  return true;
}
};

$$.MutationObserver_observe_anon = {"": ["parsedOptions_0"],
 "super": "Closure",
 call$2: function(k, v) {
  if ($.CTC25.containsKey$1(k) === true)
    this.parsedOptions_0[k] = true === v;
  else if ($.eqB(k, 'attributeFilter'))
    this.parsedOptions_0[k] = v;
  else
    throw $.$$throw($.ArgumentError$('Illegal MutationObserver.observe option \'' + $.S(k) + '\''));
}
};

$$.MutationObserver_observe_override = {"": ["parsedOptions_1"],
 "super": "Closure",
 call$2: function(key, value) {
  if (!(value == null))
    this.parsedOptions_1[key] = value;
}
};

$$._emptyStyleFuture_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  return $.Element_Element$tag('div').get$style();
}
};

$$._VLayout_doLayout_anon = {"": ["view_0"],
 "super": "Closure",
 call$0: function() {
  return this.view_0.get$innerWidth();
}
};

$$._VLayout_doLayout_anon0 = {"": ["view_1"],
 "super": "Closure",
 call$0: function() {
  return this.view_1.get$innerHeight();
}
};

$$._VLayout_doLayout_anon1 = {"": ["view_3", "si_2"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.view_3.get$innerWidth();
  t2 = this.si_2;
  return $.sub($.sub(t1, t2.get$left()), t2.get$right());
}
};

$$.MeasureContext_measureHeight_anon = {"": ["view_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.view_0;
  return !(t1.get$parent() == null) ? t1.get$parent().get$innerHeight() : $.get$browser().get$size().get$height();
}
};

$$.MeasureContext__measureByContent_anon = {"": ["view_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.view_0;
  return !(t1.get$parent() == null) ? t1.get$parent().get$innerWidth() : $.get$browser().get$size().get$width();
}
};

$$.MeasureContext__measureByContent_anon0 = {"": ["view_1"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.view_1;
  return !(t1.get$parent() == null) ? t1.get$parent().get$innerHeight() : $.get$browser().get$size().get$height();
}
};

$$._HLayout_doLayout_anon = {"": ["view_0"],
 "super": "Closure",
 call$0: function() {
  return this.view_0.get$innerWidth();
}
};

$$._HLayout_doLayout_anon0 = {"": ["view_1"],
 "super": "Closure",
 call$0: function() {
  return this.view_1.get$innerHeight();
}
};

$$._HLayout_doLayout_anon1 = {"": ["view_3", "si_2"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.view_3.get$innerHeight();
  t2 = this.si_2;
  return $.sub($.sub(t1, t2.get$top()), t2.get$bottom());
}
};

$$.MeasureContext_measureWidth_anon = {"": ["view_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = this.view_0;
  return !(t1.get$parent() == null) ? t1.get$parent().get$innerWidth() : $.get$browser().get$size().get$width();
}
};

$$.TileLayout_doLayout__anon = {"": ["view_0"],
 "super": "Closure",
 call$0: function() {
  return this.view_0.get$innerWidth();
}
};

$$.TileLayout_doLayout__anon0 = {"": ["view_1"],
 "super": "Closure",
 call$0: function() {
  return this.view_1.get$innerHeight();
}
};

$$.FreeLayout_doLayout__anon = {"": ["view_0"],
 "super": "Closure",
 call$0: function() {
  return this.view_0.get$innerWidth();
}
};

$$.FreeLayout_doLayout__anon0 = {"": ["view_1"],
 "super": "Closure",
 call$0: function() {
  return this.view_1.get$innerHeight();
}
};

$$.AnchorRelation__layoutAnchored_anon = {"": ["anchor_1", "view_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.anchor_1;
  t2 = this.view_0.get$parent();
  return (t1 == null ? t2 == null : t1 === t2) ? t1.get$innerWidth() : t1.get$realWidth();
}
};

$$.AnchorRelation__layoutAnchored_anon0 = {"": ["anchor_3", "view_2"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.anchor_3;
  t2 = this.view_2.get$parent();
  return (t1 == null ? t2 == null : t1 === t2) ? t1.get$innerHeight() : t1.get$realHeight();
}
};

$$.MeasureContext_dataAttributes_anon = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  var t1 = $.Map_Map('dynamic', 'dynamic');
  this.this_0.set$_lib8_dataAttrs(t1);
  return t1;
}
};

$$.RunOnceViewManager__ready_anon = {"": ["force_2", "view_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  this.this_0.flush$2(this.view_1, this.force_2);
}
};

$$.anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(now) {
  var t1, inow, t2, j;
  t1 = this.this_0;
  if ($.get$isEmpty(t1.get$_lib9_tasks()) !== true) {
    inow = $.Date_Date$now().get$millisecondsSinceEpoch();
    t2 = $._ListImpl_List(null, 'dynamic');
    $.setRuntimeTypeInfo(t2, {runtimeType: 'List<dynamic>'});
    t1.set$_tmpRemoved(t2);
    try {
      for (j = 0; $.ltB(j, $.get$length(t1.get$_lib9_tasks())); j = $.add(j, 1))
        if (t1._isRemoved$1(j) !== true && $.index(t1.get$_lib9_tasks(), j).call$1(inow) !== true) {
          $.removeRange(t1.get$_lib9_tasks(), j, 1);
          j = $.sub(j, 1);
        }
    } finally {
      t1._afterCallback$0();
    }
    if ($.get$isEmpty(t1.get$_lib9_tasks()) !== true)
      $.window().requestAnimationFrame$1(t1.get$_lib9_callback());
  }
}
};

$$.anon0 = {"": ["this_0"],
 "super": "Closure",
 call$1: function(time) {
  var t1, cont;
  t1 = this.this_0;
  if ($.eqB(t1.get$_stateFlag(), 0)) {
    t1.set$_state($.MotionState$_(time, 0, null));
    t1.onStart$1(t1.get$_state());
    t1.set$_stateFlag(1);
  }
  t1.get$_state()._snapshot$1(time);
  switch (t1.get$_stateFlag()) {
    case 1:
      if (t1.get$_state().get$isPaused() === true) {
        t1.get$_state()._resume$1(time);
        t1.onResume$1(t1.get$_state());
      }
      cont = t1.onMove$1(t1.get$_state());
      if (cont == null)
        cont = true;
      if (cont !== true) {
        t1.onEnd$1(t1.get$_state());
        t1.set$_state(null);
        t1.set$_stateFlag(0);
      }
      return cont;
    case 2:
      if (t1.get$_state().get$isPaused() !== true) {
        t1.get$_state()._pause$1(time);
        t1.onPause$1(t1.get$_state());
      }
      return true;
  }
}
};

$$.SwitchViewDemo_addRandFly_anon = {"": ["velX_4", "initY_3", "initX_2", "velY_1", "element_0"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, t2;
  t1 = $.CSS_px($.add(this.initX_2, $.toInt($.mul(this.velX_4, x))));
  t2 = this.element_0;
  t2.get$style().set$left(t1);
  t1 = $.CSS_px($.add(this.initY_3, $.toInt($.mul(this.velY_1, x))));
  t2.get$style().set$top(t1);
}
};

$$.SwitchViewDemo_addRandFly_anon0 = {"": ["initY_7", "initX_6", "element_5"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = $.CSS_px(this.initX_6);
  t2 = this.element_5;
  t2.get$style().set$left(t1);
  t1 = $.CSS_px(this.initY_7);
  t2.get$style().set$top(t1);
}
};

$$._convertNativeToDart_AcceptStructuredClone_findSlot = {"": ["copies_1", "values_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_0;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
},
 call$1$bailout: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.add$1(t1, value);
  $.add$1(this.copies_1, null);
  return length$;
}
};

$$._convertNativeToDart_AcceptStructuredClone_readSlot = {"": ["copies_2"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_2, i);
}
};

$$._convertNativeToDart_AcceptStructuredClone_writeSlot = {"": ["copies_3"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_3, i, x);
}
};

$$._convertNativeToDart_AcceptStructuredClone_walk = {"": ["readSlot_7", "findSlot_6", "mustCopy_5", "writeSlot_4"],
 "super": "Closure",
 call$1: function(e) {
  var slot, copy, t1, t2, t3, length$, i;
  if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
    return this.call$1$bailout(1, e);
  if (e instanceof Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (e instanceof RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (Object.getPrototypeOf(e) === Object.prototype) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    copy = $.makeLiteralMap([]);
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(2, e, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = this.call$1(e[t2]);
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= copy.length)
        throw $.ioore(t2);
      copy[t2] = t3;
    }
    return copy;
  }
  if (e instanceof Array) {
    slot = this.findSlot_6.call$1(e);
    copy = this.readSlot_7.call$1(slot);
    if (!(copy == null))
      return copy;
    length$ = e.length;
    if (this.mustCopy_5 === true)
      copy = new Array(length$);
    else
      copy = e;
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, length$, copy, slot);
    this.writeSlot_4.call$2(slot, copy);
    for (i = 0; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  return e;
},
 call$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env2;
      copy = env1;
      e = env0;
      break;
    case 3:
      slot = env3;
      copy = env2;
      length$ = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (e instanceof Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (e instanceof RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
    case 2:
      if (state0 === 2 || state0 === 0 && Object.getPrototypeOf(e) === Object.prototype)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            copy = $.makeLiteralMap([]);
          case 2:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (t1 = $.iterator(Object.keys(e)); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              $.indexSet(copy, t2, this.call$1(e[t2]));
            }
            return copy;
        }
    case 3:
      var e, slot, copy, t1, t2, length$, i;
      if (state0 === 3 || state0 === 0 && e instanceof Array)
        switch (state0) {
          case 0:
            slot = this.findSlot_6.call$1(e);
            copy = this.readSlot_7.call$1(slot);
            if (!(copy == null))
              return copy;
            length$ = $.get$length(e);
            copy = this.mustCopy_5 === true ? new Array(length$) : e;
          case 3:
            state0 = 0;
            this.writeSlot_4.call$2(slot, copy);
            for (i = 0; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      return e;
  }
}
};

$$.ShowEffect__showEffectStart_anon = {"": ["action_2", "element_1", "start_0"],
 "super": "Closure",
 call$1: function(state) {
  var t1 = this.start_0;
  if (!(t1 == null))
    t1.call$1(state);
  this.action_2.call$2(0, state);
  this.element_1.get$style().set$visibility('');
}
};

$$.FadeInEffect_createAction_anon = {"": ["min_2", "element_1", "diff_0"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1 = $.S($.add(this.min_2, $.mul(this.diff_0, x)));
  this.element_1.get$style().set$opacity(t1);
}
};

$$.Storage_values_anon = {"": ["values_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.values_0, v);
}
};

$$._HashMapImpl_values__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$._LinkedHashMapImpl_values__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$.ConstantMap_values_anon = {"": ["result_1", "this_0"],
 "super": "Closure",
 call$1: function(key) {
  return $.add$1(this.result_1, $.index(this.this_0, key));
}
};

$$._DataAttributeMap_values_anon = {"": ["values_1", "this_0"],
 "super": "Closure",
 call$2: function(key, value) {
  if ($.startsWith(key, 'data-') === true)
    $.add$1(this.values_1, value);
}
};

$$._ViewImpl__onTouchStart_anon = {"": [],
 "super": "Closure",
 call$1: function(event$) {
  $.get$broadcaster().sendEvent$1($.ActivateEvent$(event$.get$target(), 'activate'));
}
};

$$._BroadcastListeners_add_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  return [];
}
};

$$._ViewImpl__onResize_anon = {"": ["box_0"],
 "super": "Closure",
 call$1: function(event$) {
  var cur, t1;
  cur = $.WindowAgent_WindowAgent($.window()).get$innerSize();
  t1 = this.box_0;
  if (!$.eqB(t1.old_1.get$width(), cur.get$width()) || $.ltB(t1.old_1.get$height(), cur.get$height())) {
    t1.old_1 = cur;
    $.get$browser().updateSize$0();
    $._ViewImpl__updRootSize();
  }
}
};

$$._ViewImpl__onResize_anon0 = {"": [],
 "super": "Closure",
 call$1: function(event$) {
  $.get$browser().updateSize$0();
  $._ViewImpl__updRootSize();
}
};

$$.PanelDemo_main_anon = {"": ["box_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.box_0;
  if (t1.removeReady_2 === true) {
    t1.removeReady_2 = false;
    t2 = t1.removeMotion_3;
    if (t2 == null)
      t1.dialog_1.remove$0();
    else
      t2.run$0();
  }
}
};

$$.PanelDemo_main_anon0 = {"": ["_remove_4"],
 "super": "Closure",
 call$1: function(event$) {
  return this._remove_4.call$0();
}
};

$$.PanelDemo_main_anon1 = {"": ["_remove_5"],
 "super": "Closure",
 call$1: function(event$) {
  return this._remove_5.call$0();
}
};

$$.PanelDemo_main_anon2 = {"": ["body_7", "box_0", "this_6"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, mask, t2;
  t1 = this.box_0;
  t1.dialog_1.get$style().set$visibility('hidden');
  t1.dialog_1.addToDocument$2$mode$ref('dialog', this.body_7);
  mask = t1.dialog_1.get$maskNode();
  t2 = this.this_6;
  t2.showWithMask$3($.FadeInEffect$(t1.dialog_1.get$node(), null, null, 1, 0, 500, null), mask, new $.PanelDemo_main_anon10(t1)).run$0();
  t1.removeMotion_3 = t2.hideWithMask$3($.FadeOutEffect$(t1.dialog_1.get$node(), null, null, 1, 0, 500, null), mask, new $.PanelDemo_main_anon11(t1));
}
};

$$.PanelDemo_main_anon10 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  this.box_0.removeReady_2 = true;
}
};

$$.PanelDemo_main_anon11 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  var t1 = this.box_0;
  t1.dialog_1.remove$0();
  t1.dialog_1.get$style().set$visibility('');
}
};

$$.PanelDemo_main_anon3 = {"": ["body_9", "box_0", "this_8"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, mask, t2;
  t1 = this.box_0;
  t1.dialog_1.get$style().set$visibility('hidden');
  t1.dialog_1.addToDocument$2$mode$ref('dialog', this.body_9);
  mask = t1.dialog_1.get$maskNode();
  t2 = this.this_8;
  t2.showWithMask$3($.ZoomInEffect$(t1.dialog_1.get$node(), null, null, true, 500, null), mask, new $.PanelDemo_main_anon8(t1)).run$0();
  t1.removeMotion_3 = t2.hideWithMask$3($.ZoomOutEffect$(t1.dialog_1.get$node(), null, null, true, 500, null), mask, new $.PanelDemo_main_anon9(t1));
}
};

$$.PanelDemo_main_anon8 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  this.box_0.removeReady_2 = true;
}
};

$$.PanelDemo_main_anon9 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  var t1 = this.box_0;
  t1.dialog_1.remove$0();
  t1.dialog_1.get$style().set$visibility('');
}
};

$$.PanelDemo_main_anon4 = {"": ["body_11", "box_0", "this_10"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, mask, t2;
  t1 = this.box_0;
  t1.dialog_1.get$style().set$visibility('hidden');
  t1.dialog_1.addToDocument$2$mode$ref('dialog', this.body_11);
  t1.dialog_1.requestLayout$1(true);
  mask = t1.dialog_1.get$maskNode();
  t2 = this.this_10;
  t2.showWithMask$3($.SlideInEffect$(t1.dialog_1.get$node(), $.CTC36, null, null, true, 500, null, null), mask, new $.PanelDemo_main_anon6(t1)).run$0();
  t1.removeMotion_3 = t2.hideWithMask$3($.SlideOutEffect$(t1.dialog_1.get$node(), $.CTC36, null, null, true, 500, null), mask, new $.PanelDemo_main_anon7(t1));
}
};

$$.PanelDemo_main_anon6 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  this.box_0.removeReady_2 = true;
}
};

$$.PanelDemo_main_anon7 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  var t1 = this.box_0;
  t1.dialog_1.remove$0();
  t1.dialog_1.get$style().set$visibility('');
}
};

$$.PanelDemo_main_anon5 = {"": ["body_12", "box_0"],
 "super": "Closure",
 call$1: function(event$) {
  var t1 = this.box_0;
  t1.dialog_1.addToDocument$2$mode$ref('dialog', this.body_12);
  t1.removeReady_2 = true;
  t1.removeMotion_3 = null;
}
};

$$.PanelDemo_hideWithMask_anon = {"": [],
 "super": "Closure",
 call$1: function(t) {
  return $.mul(t, t);
}
};

$$.HideEffect__hideEffectEnd_anon = {"": ["action_2", "element_1", "end_0"],
 "super": "Closure",
 call$1: function(state) {
  var t1;
  this.element_1.get$style().set$visibility('hidden');
  this.action_2.call$2(0, state);
  t1 = this.end_0;
  if (!(t1 == null))
    t1.call$1(state);
}
};

$$.FadeOutEffect_createAction_anon = {"": ["max_2", "diff_1", "element_0"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1 = $.S($.sub(this.max_2, $.mul(this.diff_1, x)));
  this.element_0.get$style().set$opacity(t1);
}
};

$$.EasingMotion__jointEnd_anon = {"": ["end_1", "motions_0"],
 "super": "Closure",
 call$1: function(state) {
  var t1, t2;
  for (t1 = $.iterator(this.motions_0); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(t2.get$_end() == null))
      t2._end$1(state);
  }
  t1 = this.end_1;
  if (!(t1 == null))
    t1.call$1(state);
}
};

$$.EasingMotion__jointStart_anon = {"": ["start_1", "motions_0"],
 "super": "Closure",
 call$1: function(state) {
  var t1, t2;
  t1 = this.start_1;
  if (!(t1 == null))
    t1.call$1(state);
  for (t1 = $.iterator(this.motions_0); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(t2.get$_start() == null))
      t2._start$1(state);
  }
}
};

$$.EasingMotion__jointAction_anon = {"": ["motions_0"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1;
  for (t1 = $.iterator(this.motions_0); t1.get$hasNext() === true;)
    if (t1.next$0().action$2(x, state) === false)
      return false;
}
};

$$.SlideOutEffect_createAction_anon = {"": ["element_3", "fade_2", "initLeft_1", "size_0"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, w, t2, t3;
  t1 = this.size_0;
  w = $.toInt($.mul(x, t1));
  t2 = $.CSS_px($.add(this.initLeft_1, w));
  t3 = this.element_3;
  t3.get$style().set$left(t2);
  t2 = $.CSS_px($.sub(t1, w));
  t3.get$style().set$width(t2);
  if (this.fade_2 === true) {
    if (typeof x !== 'number')
      throw $.iae(x);
    t1 = $.S(1 - x);
    t3.get$style().set$opacity(t1);
  }
}
};

$$.SlideOutEffect_createAction_anon0 = {"": ["element_6", "size_5", "fade_4"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, t2, t3, t4;
  if (typeof x !== 'number')
    throw $.iae(x);
  t1 = 1 - x;
  t2 = this.size_5;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t3 = $.CSS_px($.toInt(t1 * t2));
  t4 = this.element_6;
  t4.get$style().set$width(t3);
  if (this.fade_4 === true) {
    t2 = $.S(t1);
    t4.get$style().set$opacity(t2);
  }
}
};

$$.SlideOutEffect_createAction_anon1 = {"": ["element_10", "initTop_9", "fade_8", "size_7"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, h, t2, t3;
  t1 = this.size_7;
  h = $.toInt($.mul(x, t1));
  t2 = $.CSS_px($.add(this.initTop_9, h));
  t3 = this.element_10;
  t3.get$style().set$top(t2);
  t2 = $.CSS_px($.sub(t1, h));
  t3.get$style().set$height(t2);
  if (this.fade_8 === true) {
    if (typeof x !== 'number')
      throw $.iae(x);
    t1 = $.S(1 - x);
    t3.get$style().set$opacity(t1);
  }
}
};

$$.SlideOutEffect_createAction_anon2 = {"": ["element_13", "size_12", "fade_11"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, t2, t3, t4;
  if (typeof x !== 'number')
    throw $.iae(x);
  t1 = 1 - x;
  t2 = this.size_12;
  if (typeof t2 !== 'number')
    throw $.iae(t2);
  t3 = $.CSS_px($.toInt(t1 * t2));
  t4 = this.element_13;
  t4.get$style().set$height(t3);
  if (this.fade_11 === true) {
    t2 = $.S(t1);
    t4.get$style().set$opacity(t2);
  }
}
};

$$.PanelDemo_showWithMask_anon = {"": [],
 "super": "Closure",
 call$1: function(t) {
  return $.mul(t, t);
}
};

$$.SlideInEffect_createAction_anon = {"": ["destSize_3", "element_2", "initLeft_1", "fade_0"],
 "super": "Closure",
 call$2: function(x, state) {
  var w, t1, t2;
  w = $.toInt($.mul(x, this.destSize_3));
  t1 = $.CSS_px($.sub(this.initLeft_1, w));
  t2 = this.element_2;
  t2.get$style().set$left(t1);
  t1 = $.CSS_px(w);
  t2.get$style().set$width(t1);
  if (this.fade_0 === true) {
    t1 = $.S(x);
    t2.get$style().set$opacity(t1);
  }
}
};

$$.SlideInEffect_createAction_anon0 = {"": ["element_6", "destSize_5", "fade_4"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, t2;
  t1 = $.CSS_px($.toInt($.mul(x, this.destSize_5)));
  t2 = this.element_6;
  t2.get$style().set$width(t1);
  if (this.fade_4 === true) {
    t1 = $.S(x);
    t2.get$style().set$opacity(t1);
  }
}
};

$$.SlideInEffect_createAction_anon1 = {"": ["element_10", "destSize_9", "fade_8", "initTop_7"],
 "super": "Closure",
 call$2: function(x, state) {
  var h, t1, t2;
  h = $.toInt($.mul(x, this.destSize_9));
  t1 = $.CSS_px($.sub(this.initTop_7, h));
  t2 = this.element_10;
  t2.get$style().set$top(t1);
  t1 = $.CSS_px(h);
  t2.get$style().set$height(t1);
  if (this.fade_8 === true) {
    t1 = $.S(x);
    t2.get$style().set$opacity(t1);
  }
}
};

$$.SlideInEffect_createAction_anon2 = {"": ["element_13", "destSize_12", "fade_11"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, t2;
  t1 = $.CSS_px($.toInt($.mul(x, this.destSize_12)));
  t2 = this.element_13;
  t2.get$style().set$height(t1);
  if (this.fade_11 === true) {
    t1 = $.S(x);
    t2.get$style().set$opacity(t1);
  }
}
};

$$._SlideEffectUtil_heightOf_anon = {"": [],
 "super": "Closure",
 call$1: function(dq) {
  return dq.get$height();
}
};

$$._SlideEffectUtil_topOf_anon = {"": [],
 "super": "Closure",
 call$1: function(dq) {
  return dq.get$offsetTop();
}
};

$$._SlideEffectUtil_widthOf_anon = {"": [],
 "super": "Closure",
 call$1: function(dq) {
  return dq.get$width();
}
};

$$._SlideEffectUtil_leftOf_anon = {"": [],
 "super": "Closure",
 call$1: function(dq) {
  return dq.get$offsetLeft();
}
};

$$.ZoomOutEffect_createAction_anon = {"": ["element_1", "fade_0"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, t2, t3;
  if (typeof x !== 'number')
    throw $.iae(x);
  t1 = 1 - x;
  t2 = 'scale(' + $.S(t1) + ')';
  t3 = this.element_1;
  t3.get$style().set$transform(t2);
  if (this.fade_0 === true) {
    t2 = $.S(t1);
    t3.get$style().set$opacity(t2);
  }
}
};

$$.ZoomInEffect_createAction_anon = {"": ["fade_1", "element_0"],
 "super": "Closure",
 call$2: function(x, state) {
  var t1, t2;
  t1 = 'scale(' + $.S(x) + ')';
  t2 = this.element_0;
  t2.get$style().set$transform(t1);
  if (this.fade_1 === true) {
    t1 = $.S(x);
    t2.get$style().set$opacity(t1);
  }
}
};

$$.ViewDemo_main_anon = {"": ["box_0", "v1_4"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.mv1_1 === true)
    return;
  t1.mv1_1 = true;
  t2 = this.v1_4;
  $.FadeOutEffect$(t2.get$node(), null, new $.ViewDemo_main_anon12(t1, t2), 1, 0, 500, null).run$0();
}
};

$$.ViewDemo_main_anon12 = {"": ["box_0", "v1_5"],
 "super": "Closure",
 call$1: function(state) {
  this.v1_5.remove$0();
  this.box_0.mv1_1 = false;
}
};

$$.ViewDemo_main_anon0 = {"": ["box_0", "container_7", "v1_6"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.mv1_1 === true)
    return;
  t1.mv1_1 = true;
  t2 = this.v1_6;
  t2.get$style().set$visibility('hidden');
  this.container_7.addChild$1(t2);
  $.FadeInEffect$(t2.get$node(), null, new $.ViewDemo_main_anon11(t1), 1, 0, 500, null).run$0();
}
};

$$.ViewDemo_main_anon11 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  this.box_0.mv1_1 = false;
}
};

$$.ViewDemo_main_anon1 = {"": ["v2_8", "box_0"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.mv2_2 === true)
    return;
  t1.mv2_2 = true;
  t2 = this.v2_8;
  $.ZoomOutEffect$(t2.get$node(), null, new $.ViewDemo_main_anon10(t2, t1), true, 500, null).run$0();
}
};

$$.ViewDemo_main_anon10 = {"": ["v2_9", "box_0"],
 "super": "Closure",
 call$1: function(state) {
  this.v2_9.remove$0();
  this.box_0.mv2_2 = false;
}
};

$$.ViewDemo_main_anon2 = {"": ["v2_11", "box_0", "container_10"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.mv2_2 === true)
    return;
  t1.mv2_2 = true;
  t2 = this.v2_11;
  t2.get$style().set$visibility('hidden');
  this.container_10.addChild$1(t2);
  $.ZoomInEffect$(t2.get$node(), null, new $.ViewDemo_main_anon9(t1), true, 500, null).run$0();
}
};

$$.ViewDemo_main_anon9 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  this.box_0.mv2_2 = false;
}
};

$$.ViewDemo_main_anon3 = {"": ["this_13", "v3_12", "box_0"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.mv3_3 === true)
    return;
  t1.mv3_3 = true;
  t2 = this.v3_12;
  $.SlideOutEffect$(t2.get$node(), this.this_13.get$_dir(), null, new $.ViewDemo_main_anon8(t2, t1), true, 500, null).run$0();
}
};

$$.ViewDemo_main_anon8 = {"": ["v3_14", "box_0"],
 "super": "Closure",
 call$1: function(state) {
  this.v3_14.remove$0();
  this.box_0.mv3_3 = false;
}
};

$$.ViewDemo_main_anon4 = {"": ["this_17", "v3_16", "box_0", "container_15"],
 "super": "Closure",
 call$1: function(event$) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.mv3_3 === true)
    return;
  t1.mv3_3 = true;
  t2 = this.v3_16;
  t2.get$style().set$visibility('hidden');
  this.container_15.addChild$1(t2);
  $.SlideInEffect$(t2.get$node(), this.this_17.get$_dir(), null, new $.ViewDemo_main_anon7(t1), true, 500, null, null).run$0();
}
};

$$.ViewDemo_main_anon7 = {"": ["box_0"],
 "super": "Closure",
 call$1: function(state) {
  this.box_0.mv3_3 = false;
}
};

$$.ViewDemo_main_anon5 = {"": ["v4_18"],
 "super": "Closure",
 call$1: function(event$) {
  return this.v4_18.remove$0();
}
};

$$.ViewDemo_main_anon6 = {"": ["v4_20", "container_19"],
 "super": "Closure",
 call$1: function(event$) {
  this.container_19.addChild$1(this.v4_20);
}
};

$$.ViewDemo_radio_anon = {"": ["dir_1", "this_0"],
 "super": "Closure",
 call$1: function(event$) {
  return this.this_0.select$1(this.dir_1);
}
};

$$.startRootIsolate_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  $._TimerFactory__factory = $._timerFactory;
  return;
}
};

$$._BaseSendPort_call_anon = {"": ["completer_1", "port_0"],
 "super": "Closure",
 call$2: function(value, ignoreReplyTo) {
  var t1, t2;
  this.port_0.close$0();
  t1 = typeof value === 'object' && value !== null && !!value.is$Exception;
  t2 = this.completer_1;
  if (t1)
    t2.completeException$1(value);
  else
    t2.complete$1(value);
}
};

$$._WorkerSendPort_send_anon = {"": ["replyTo_2", "message_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, workerMessage, t3;
  t1 = this.this_0;
  t2 = this.replyTo_2;
  t1._checkReplyTo$1(t2);
  workerMessage = $._serializeMessage($.makeLiteralMap(['command', 'message', 'port', t1, 'msg', this.message_1, 'replyTo', t2]));
  t2 = $._globalState().get$isWorker() === true;
  t3 = $._globalState;
  if (t2)
    t3().get$mainManager().postMessage$1(workerMessage);
  else
    $.index(t3().get$managers(), t1.get$_workerId()).postMessage$1(workerMessage);
}
};

$$._waitForPendingPorts_anon = {"": ["callback_0"],
 "super": "Closure",
 call$1: function(_) {
  return this.callback_0.call$0();
}
};

$$.Futures_wait_anon = {"": ["pos_5", "result_4", "completer_3", "values_2", "box_0"],
 "super": "Closure",
 call$1: function(value) {
  var t1, t2, remaining;
  t1 = this.values_2;
  $.indexSet(t1, this.pos_5, value);
  t2 = this.box_0;
  remaining = $.sub(t2.remaining_1, 1);
  t2.remaining_1 = remaining;
  if ($.eqB(remaining, 0) && this.result_4.get$isComplete() !== true)
    this.completer_3.complete$1(t1);
}
};

$$.Futures_wait_anon0 = {"": ["future_8", "result_7", "completer_6"],
 "super": "Closure",
 call$1: function(exception) {
  if (this.result_7.get$isComplete() !== true)
    this.completer_6.completeException$2(exception, this.future_8.get$stackTrace());
  return true;
}
};

$$._PendingSendPortFinder_visitMap_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._PendingSendPortFinder_visitList_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(e) {
  return this.this_0._dispatch$1(e);
}
};

$$._NativeJsSendPort_send_anon = {"": ["this_5", "replyTo_4", "message_3"],
 "super": "Closure",
 call$0: function() {
  var t1, t2, t3, isolate, shouldSerialize, msg;
  t1 = {};
  t2 = this.this_5;
  t3 = this.replyTo_4;
  t2._checkReplyTo$1(t3);
  isolate = $.index($._globalState().get$isolates(), t2.get$_isolateId());
  if (isolate == null)
    return;
  if (t2.get$_receivePort().get$_lib10_callback() == null)
    return;
  shouldSerialize = !($._globalState().get$currentContext() == null) && !$.eqB($._globalState().get$currentContext().get$id(), t2.get$_isolateId());
  msg = this.message_3;
  t1.msg_1 = msg;
  t1.reply_2 = t3;
  if (shouldSerialize) {
    t1.msg_1 = $._serializeMessage(t1.msg_1);
    t1.reply_2 = $._serializeMessage(t1.reply_2);
  }
  $._globalState().get$topEventLoop().enqueue$3(isolate, new $._NativeJsSendPort_send_anon0(t2, t1, shouldSerialize), 'receive ' + $.S(msg));
}
};

$$._NativeJsSendPort_send_anon0 = {"": ["this_7", "box_0", "shouldSerialize_6"],
 "super": "Closure",
 call$0: function() {
  var t1, t2;
  t1 = this.this_7;
  if (!(t1.get$_receivePort().get$_lib10_callback() == null)) {
    if (this.shouldSerialize_6 === true) {
      t2 = this.box_0;
      t2.msg_1 = $._deserializeMessage(t2.msg_1);
      t2.reply_2 = $._deserializeMessage(t2.reply_2);
    }
    t1 = t1.get$_receivePort();
    t2 = this.box_0;
    t1._lib10_callback$2(t2.msg_1, t2.reply_2);
  }
}
};

$$.Storage_keys_anon = {"": ["keys_0"],
 "super": "Closure",
 call$2: function(k, v) {
  return $.add$1(this.keys_0, k);
}
};

$$._HashMapImpl_keys__ = {"": ["box_0", "list_2"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_10;
  t2.i_10 = $.add(t3, 1);
  $.indexSet(t1, t3, key);
}
};

$$._LinkedHashMapImpl_keys__ = {"": ["list_2", "box_0"],
 "super": "Closure",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_10;
  t2.index_10 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$key());
}
};

$$._Copier_visitMap_anon = {"": ["box_0", "this_2"],
 "super": "Closure",
 call$2: function(key, val) {
  var t1, t2;
  t1 = this.box_0.copy_10;
  t2 = this.this_2;
  $.indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
}
};

$$._EventLoop__runHelper_next = {"": ["this_0"],
 "super": "Closure",
 call$0: function() {
  if (this.this_0.runIteration$0() !== true)
    return;
  $._window().setTimeout$2(this, 0);
}
};

$$.anon1 = {"": ["callback_1", "this_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_1.call$1(this.this_0);
}
};

$$.anon2 = {"": ["this_1", "callback_0"],
 "super": "Closure",
 call$0: function() {
  return this.callback_0.call$1(this.this_1);
}
};

$$.BoundClosure = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure0 = {'':
['self', 'target'],
'super': 'Closure',
call$3: function(p0, p1, p2) { return this.self[this.target](p0, p1, p2); },
 call$1: function(when) {
  return this.call$3(when,$,$)
},
 call$2: function(when,grainOffset) {
  return this.call$3(when,grainOffset,$)
}
};
$$.BoundClosure1 = {'':
['self', 'target'],
'super': 'Closure',
call$6: function(p0, p1, p2, p3, p4, p5) { return this.self[this.target](p0, p1, p2, p3, p4, p5); }
};
$$.BoundClosure2 = {'':
['self', 'target'],
'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure3 = {'':
['self', 'target'],
'super': 'Closure',
call$2: function(p0, p1) { return this.self[this.target](p0, p1); }
};
$.MediaStreamEvents$ = function(_ptr) {
  var t1 = new $.MediaStreamEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'MediaStreamEvents'});
  return t1;
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_DateImpl'});
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_DateImpl'});
  t1._DateImpl$now$0();
  return t1;
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.ViewIterable$ = function(_root, _selector) {
  var t1 = new $.ViewIterable(_root, _selector);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewIterable'});
  return t1;
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.WorkerContextEvents$ = function(_ptr) {
  var t1 = new $.WorkerContextEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'WorkerContextEvents'});
  return t1;
};

$.ViewIterator$ = function(_root, selector) {
  var t1 = new $.ViewIterator(_root, $.Selectors_parse(selector), null, null, null, null, false, null, -1);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewIterator'});
  t1.ViewIterator$2(_root, selector);
  return t1;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.Events$ = function(_ptr) {
  var t1 = new $.Events(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Events'});
  return t1;
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC0));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.substringUnchecked = function(receiver, startIndex, endIndex) {
  return receiver.substring(startIndex, endIndex);
};

$.ViewIterator__isAllIds = function(list, offset) {
  var t1;
  if (typeof offset !== 'number')
    return $.ViewIterator__isAllIds$bailout(1, list, offset);
  for (t1 = $.iterator(list); t1.get$hasNext() === true;)
    if ($.gtB($.get$length(t1.next$0().get$seqs()), offset))
      return false;
  return true;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.ViewIterator__getCommonSeqLength = function(list) {
  var t1, strs, max, t2, t3, id, i, i0, t4;
  for (t1 = $.iterator(list), strs = null, max = 0; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (strs == null) {
      strs = $._ListImpl_List(null, 'String');
      t3 = 'String';
      $.setRuntimeTypeInfo(strs, {runtimeType: 'List<' + t3 + '>', 'E': t3});
      for (t3 = $.iterator(t2.get$seqs()); t3.get$hasNext() === true;) {
        t2 = t3.next$0();
        id = t2.get$id();
        if (!(id == null) && $.get$isEmpty(id) !== true) {
          strs.push($.toString(t2));
          strs.push(t2.printCombinator$0());
        } else
          break;
      }
      max = strs.length;
    } else {
      for (t3 = $.iterator(t2.get$seqs()), i = 0; t3.get$hasNext() === true;) {
        t2 = t3.next$0();
        id = t2.get$id();
        if (i < max)
          if (!(id == null))
            if ($.get$isEmpty(id) !== true) {
              i0 = i + 1;
              if ($.eqB($.index(strs, i), $.toString(t2))) {
                i = i0 + 1;
                t4 = !$.eqB($.index(strs, i0), t2.printCombinator$0());
                t2 = t4;
              } else {
                i = i0;
                t2 = true;
              }
            } else
              t2 = true;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          break;
      }
      i0 = i - 1;
      if (i < max)
        max = i0;
    }
  }
  return $.tdiv(max + 1, 2);
};

$.ViewIterator_isGeneralSibling = function(c1, c2) {
  for (; !(c1 == null);) {
    if ($.eqB(c1, c2))
      return true;
    c1 = c1.get$previousSibling();
  }
  return false;
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      return $.NullPointerException$(null, $.CTC0);
    else if ($.eqB(type, 'undefined_method'))
      return $.NoSuchMethodError$('', name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.endsWith(message, 'is null') === true || $.endsWith(message, 'is undefined') === true || $.endsWith(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC0);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], $.makeLiteralMap([]), null);
      }
    return $._ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowError$();
  return ex;
};

$.Selector$ = function(selectorIndex) {
  var t1, t2;
  t1 = $._ListImpl_List(null, 'SimpleSelectorSequence');
  t2 = 'SimpleSelectorSequence';
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  t1 = new $.Selector(selectorIndex, t1);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Selector'});
  return t1;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap('dynamic', 'dynamic');
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if ($.eqB(numberOfArguments, 1))
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if ($.eqB(numberOfArguments, 2))
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(arg2, closure, arg1));
  else
    throw $.$$throw($._ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.LocalWindowEvents$ = function(_ptr) {
  var t1 = new $.LocalWindowEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'LocalWindowEvents'});
  return t1;
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  if (!(target == null))
    target.builtin$typeInfo = typeInfo;
};

$.getRuntimeTypeInfo = function(target) {
  var res;
  if (target == null)
    return;
  res = target.builtin$typeInfo;
  return res == null ? {} : res;
};

$._ViewImpl_unlink = function(view, child) {
  var p, n, t1;
  if (typeof child === 'object' && child !== null && !!child.is$IdSpace)
    $._ViewImpl_removeFromIdSpace(child, true);
  else
    $._ViewImpl_removeFromIdSpaceDown(child, child.get$spaceOwner());
  p = child.get$_prevSibling();
  n = child.get$_nextSibling();
  if (!(p == null))
    p.set$_nextSibling(n);
  else
    view._childInfo.set$firstChild(n);
  if (!(n == null))
    n.set$_prevSibling(p);
  else
    view._childInfo.set$lastChild(p);
  child.set$_lib1_parent(null);
  child.set$_prevSibling(null);
  child.set$_nextSibling(null);
  t1 = view._childInfo;
  t1.set$nChild($.sub(t1.get$nChild(), 1));
};

$._ViewImpl_spaceOwner = function(view) {
  var p, p0;
  p = view;
  while (true) {
    if (typeof p === 'object' && p !== null && !!p.is$IdSpace)
      return p;
    p0 = p.get$parent();
    if (!!(p0 == null))
      break;
    p = p0;
  }
  if (p.get$_virtIS() == null)
    p.set$_virtIS($._VirtualIdSpace$(p));
  return p.get$_virtIS();
};

$._ViewImpl_checkIdSpaces = function(view, newId) {
  var space, parent$, t1;
  space = view.get$spaceOwner();
  if (!(space.getFellow$1(newId) == null))
    throw $.$$throw($.UIException$('Not unique in the ID space of ' + $.S(space) + ': ' + $.S(newId)));
  if (!!view.is$IdSpace) {
    parent$ = view.get$parent();
    t1 = !(parent$ == null);
  } else {
    parent$ = null;
    t1 = false;
  }
  if (t1) {
    space = parent$.get$spaceOwner();
    if (!(space.getFellow$1(newId) == null))
      throw $.$$throw($.UIException$('Not unique in the ID space of ' + $.S(space) + ': ' + $.S(newId)));
  }
};

$._ViewImpl_addToIdSpace = function(view, skipFirst) {
  var id, parent$, t1;
  id = view.get$id();
  if ($.eqB($.get$length(id), 0))
    return;
  if (skipFirst !== true)
    view.get$spaceOwner().bindFellow_$2(id, view);
  if (typeof view === 'object' && view !== null && !!view.is$IdSpace) {
    parent$ = view.get$parent();
    t1 = !(parent$ == null);
  } else {
    parent$ = null;
    t1 = false;
  }
  if (t1)
    parent$.get$spaceOwner().bindFellow_$2(id, view);
};

$._ViewImpl_removeFromIdSpace = function(view, skipFirst) {
  var id, parent$, t1;
  id = view.get$id();
  if ($.eqB($.get$length(id), 0))
    return;
  if (skipFirst !== true)
    view.get$spaceOwner().bindFellow_$2(id, null);
  if (typeof view === 'object' && view !== null && !!view.is$IdSpace) {
    parent$ = view.get$parent();
    t1 = !(parent$ == null);
  } else {
    parent$ = null;
    t1 = false;
  }
  if (t1)
    parent$.get$spaceOwner().bindFellow_$2(id, null);
};

$._ViewImpl_removeFromIdSpaceDown = function(view, space) {
  var id, t1;
  id = view.get$id();
  t1 = $.get$length(id);
  if (typeof t1 !== 'number')
    return $._ViewImpl_removeFromIdSpaceDown$bailout(1, view, space, id, t1);
  if (t1 > 0)
    space.bindFellow_$2(id, null);
  if (!(typeof view === 'object' && view !== null && !!view.is$IdSpace))
    for (view = view.get$firstChild(); !(view == null); view = view.get$nextSibling())
      $._ViewImpl_removeFromIdSpaceDown(view, space);
};

$.ViewIterator_checkIdSpace = function(selector, index, ctx) {
  var t1, t2;
  if (selector.requiresIdSpace$1(index) === true) {
    t1 = ctx.get$view();
    t2 = !(typeof t1 === 'object' && t1 !== null && !!t1.is$IdSpace);
    t1 = t2;
  } else
    t1 = true;
  return t1;
};

$.ViewMatchContext_matchClasses = function(view, classes) {
  var t1, t2;
  if (classes == null || $.get$isEmpty(classes) === true)
    return true;
  for (t1 = $.iterator(classes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.contains$1(view.get$classes(), t2) !== true)
      return false;
  }
  return true;
};

$.ViewMatchContext$child = function(view, parent$) {
  var t1 = new $.ViewMatchContext(parent$, view, 0, $.ViewMatchContext__initBoolListFromParent(parent$));
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewMatchContext'});
  return t1;
};

$.ViewMatchContext__initBoolList = function(selectors) {
  var list, t1, t2, sublist, t3, i;
  list = $._ListImpl_List(null, 'List<bool>');
  t1 = 'List<bool>';
  $.setRuntimeTypeInfo(list, {runtimeType: 'List<' + t1 + '>', 'E': t1});
  for (t1 = $.iterator(selectors); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    sublist = $._ListImpl_List(null, 'bool');
    t3 = 'bool';
    $.setRuntimeTypeInfo(sublist, {runtimeType: 'List<' + t3 + '>', 'E': t3});
    list.push(sublist);
    for (i = 0; $.ltB(i, $.get$length(t2.get$seqs())); ++i)
      sublist.push(false);
  }
  return list;
};

$.ViewMatchContext__initBoolListFromParent = function(parent$) {
  var plist, list, t1, t2, sublist, t3, i;
  plist = parent$.get$_qualified();
  list = $._ListImpl_List(null, 'List<bool>');
  t1 = 'List<bool>';
  $.setRuntimeTypeInfo(list, {runtimeType: 'List<' + t1 + '>', 'E': t1});
  for (t1 = $.iterator(plist); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    sublist = $._ListImpl_List(null, 'bool');
    t3 = 'bool';
    $.setRuntimeTypeInfo(sublist, {runtimeType: 'List<' + t3 + '>', 'E': t3});
    list.push(sublist);
    for (i = 0; $.ltB(i, $.get$length(t2)); ++i)
      sublist.push(false);
  }
  return list;
};

$.ViewMatchContext$root = function(view, selectors) {
  var t1 = new $.ViewMatchContext(null, view, 0, $.ViewMatchContext__initBoolList(selectors));
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewMatchContext'});
  t1.ViewMatchContext$root$2(view, selectors);
  return t1;
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$('Cyclic initialization for static ' + $.S(staticName)));
};

$._ViewImpl__onTouchStart = function() {
  if ($._ViewImpl__$onTouchStart == null)
    $._ViewImpl__$onTouchStart = new $._ViewImpl__onTouchStart_anon();
  return $._ViewImpl__$onTouchStart;
};

$.getOrCreateCachedRuntimeType = function(key) {
  var result = $.get$runtimeTypeCache()[key];
  if (result == null) {
    result = $.TypeImpl$(key);
    $.get$runtimeTypeCache()[key] = result;
  }
  return result;
};

$.getRuntimeTypeString = function(object) {
  return object.builtin$typeInfo.runtimeType;
};

$.ViewMatchContext$ = function(view) {
  var t1, t2;
  t1 = $._ListImpl_List(null, 'List<bool>');
  t2 = 'List<bool>';
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<' + t2 + '>', 'E': t2});
  t1 = new $.ViewMatchContext(null, view, 0, t1);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewMatchContext'});
  t1.ViewMatchContext$1(view);
  return t1;
};

$._ViewImpl__updRootSize = function() {
  var t1, t2, dlgInfo;
  for (t1 = $.iterator($.get$rootViews()); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    dlgInfo = $.index($.get$dialogInfos(), t2);
    if (!(dlgInfo == null))
      dlgInfo.updateSize$0();
    t2.requestLayout$0();
  }
};

$._ViewImpl_addToIdSpaceDown = function(view, space) {
  var id, t1, vs, t2;
  id = view.get$id();
  t1 = $.get$length(id);
  if (typeof t1 !== 'number')
    return $._ViewImpl_addToIdSpaceDown$bailout(1, view, space, id, t1);
  if (t1 > 0)
    space.bindFellow_$2(id, view);
  if (!(typeof view === 'object' && view !== null && !!view.is$IdSpace)) {
    vs = view.get$_virtIS();
    if (!(vs == null)) {
      view.set$_virtIS(null);
      for (t1 = $.iterator(vs.get$fellows()); t1.get$hasNext() === true;) {
        t2 = t1.next$0();
        space.bindFellow_$2(t2.get$id(), t2);
      }
    } else
      for (view = view.get$firstChild(); !(view == null); view = view.get$nextSibling())
        $._ViewImpl_addToIdSpaceDown(view, space);
  }
};

$.ViewMatchContext_computeViewChildIndex = function(view) {
  var index;
  for (index = -1; !(view == null);) {
    view = view.get$previousSibling();
    ++index;
  }
  return index;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return 'Null';
  constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.ViewIterator_isDescendant = function(c1, c2) {
  if ($.eqB(c1, c2))
    return true;
  for (; c1 = c1.get$parent(), !(c1 == null);) {
    if ($.eqB(c1, c2))
      return true;
    if (typeof c1 === 'object' && c1 !== null && !!c1.is$IdSpace)
      return $.eq(c1, c2);
  }
  return false;
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result === null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpAttachGlobalNative = function(regExp) {
  regExp._re = $.regExpMakeNative(regExp, true);
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true)
    $.add$1(sb, 'm');
  if (ignoreCase === true)
    $.add$1(sb, 'i');
  if (global === true)
    $.add$1(sb, 'g');
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.regExpMatchStart = function(m) {
  return m.index;
};

$.SimpleSelectorSequence$ = function() {
  var t1, t2, t3, t4, t5;
  t1 = $.Set_Set('String');
  t2 = $._ListImpl_List(null, 'Attribute');
  t3 = 'Attribute';
  $.setRuntimeTypeInfo(t2, {runtimeType: 'List<' + t3 + '>', 'E': t3});
  t4 = $._ListImpl_List(null, 'PseudoClass');
  t5 = 'PseudoClass';
  $.setRuntimeTypeInfo(t4, {runtimeType: 'List<' + t5 + '>', 'E': t5});
  t4 = new $.SimpleSelectorSequence(null, null, t1, t2, t4, 0);
  $.setRuntimeTypeInfo(t4, {runtimeType: 'SimpleSelectorSequence'});
  return t4;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $._ListImpl_List(null, 'Match');
  t1 = 'Match';
  $.setRuntimeTypeInfo(result, {runtimeType: 'List<' + t1 + '>', 'E': t1});
  length$ = $.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === 'string')
    return !$.eqB($.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.substring$1(receiver, startIndex))).get$hasNext();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, i;
  if (from === '')
    if (receiver === '')
      return to;
    else {
      result = $.StringBuffer_StringBuffer('');
      length$ = receiver.length;
      $.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        $.add$1(result, receiver[i]);
        $.add$1(result, to);
      }
      return $.toString(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.CTC2, true), "\\$&"), false, false), true), to);
};

$._ViewImpl_createDialog = function(node, view, maskClass) {
  var size, parent$, mask, t1;
  size = $.eqB(node, $.document().get$body()) ? $.get$browser().get$innerSize() : $.DOMAgent_DOMAgent(node).get$innerSize();
  parent$ = $.DivElement_DivElement();
  parent$.get$style().set$position('relative');
  $.add$1(node.get$nodes(), parent$);
  mask = $.Element_Element$html('<div class="v- ' + $.S(maskClass) + '" style="width:' + $.S(size.get$width()) + 'px;height:' + $.S(size.get$height()) + 'px"></div>');
  if (!$.eqB(node, $.document().get$body()))
    mask.get$style().set$position('absolute');
  t1 = view.get$style().get$visibility();
  mask.get$style().set$visibility(t1);
  if (view.get$visible() !== true)
    $.DOMAgent_DOMAgent(mask).hide$0();
  $.add$1(parent$.get$nodes(), mask);
  return $.DialogInfo$(parent$, mask);
};

$.stringSplitUnchecked = function(receiver, pattern) {
  return receiver.split(pattern);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.add$1 = function(receiver, value) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'add');
    receiver.push(value);
    return;
  }
  return receiver.add$1(value);
};

$.removeLast = function(receiver) {
  if ($.isJsArray(receiver)) {
    $.checkGrowable(receiver, 'removeLast');
    if ($.eqB($.get$length(receiver), 0))
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  }
  return receiver.removeLast$0();
};

$.filter = function(receiver, predicate) {
  if (!$.isJsArray(receiver))
    return receiver.filter$1(predicate);
  else
    return $.Collections_filter(receiver, [], predicate);
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.toString = function(value) {
  if (typeof value == "object" && value !== null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver, 'dynamic');
  return receiver.iterator$0();
};

$.charCodeAt = function(receiver, index) {
  if (typeof receiver === 'string') {
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  } else
    return receiver.charCodeAt$1(index);
};

$.get$isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.get$isEmpty();
};

$.addAll = function(receiver, collection) {
  var iterator;
  if (!$.isJsArray(receiver))
    return receiver.addAll$1(collection);
  iterator = $.iterator(collection);
  for (; iterator.get$hasNext() === true;)
    $.add$1(receiver, iterator.next$0());
};

$.addLast = function(receiver, value) {
  if (!$.isJsArray(receiver))
    return receiver.addLast$1(value);
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
};

$.clear = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.clear$0();
  $.set$length(receiver, 0);
};

$.forEach = function(receiver, f) {
  if (!$.isJsArray(receiver))
    return receiver.forEach$1(f);
  else
    return $.Collections_forEach(receiver, f);
};

$._ChildNodeListLazy$ = function(_this) {
  var t1 = new $._ChildNodeListLazy(_this);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_ChildNodeListLazy'});
  return t1;
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods['Object'];
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.getRange = function(receiver, start, length$) {
  var t1, end;
  if (!$.isJsArray(receiver))
    return receiver.getRange$2(start, length$);
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.get$last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.get$last();
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.removeRange = function(receiver, start, length$) {
  var receiverLength, t1, t2;
  if (!$.isJsArray(receiver))
    return receiver.removeRange$2(start, length$);
  $.checkGrowable(receiver, 'removeRange');
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.RangeError$value(t1));
  t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.set$length(receiver, t2);
};

$.get$isNaN = function(receiver) {
  return isNaN(receiver);
};

$.abs = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.abs$0();
  return Math.abs(receiver);
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.get$isInfinite = function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.toInt = function(receiver) {
  var truncated;
  if (!(typeof receiver === 'number'))
    return receiver.toInt$0();
  if ($.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$('NaN'));
  if ($.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$('Infinity'));
  truncated = $.truncate(receiver);
  return truncated == -0.0 ? 0 : truncated;
};

$.allMatches = function(receiver, str) {
  if (!(typeof receiver === 'string'))
    return receiver.allMatches$1(str);
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
};

$.contains$1 = function(receiver, other) {
  var i;
  if (typeof receiver !== 'string' && (typeof receiver !== 'object' || receiver === null || receiver.constructor !== Array && !receiver.is$JavaScriptIndexingBehavior()))
    return $.contains$1$bailout(1, receiver, other);
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; i < receiver.length; ++i)
      if ($.eqB(other, receiver[i]))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.endsWith = function(receiver, other) {
  var receiverLength, otherLength;
  if (!(typeof receiver === 'string'))
    return receiver.endsWith$1(other);
  $.checkString(other);
  receiverLength = receiver.length;
  otherLength = other.length;
  if (otherLength > receiverLength)
    return false;
  return other === $.substring$1(receiver, receiverLength - otherLength);
};

$.split = function(receiver, pattern) {
  if (!(typeof receiver === 'string'))
    return receiver.split$1(pattern);
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
};

$.substring$1 = function(receiver, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.substring$1(startIndex);
  return $.substring$2(receiver, startIndex, null);
};

$.substring$2 = function(receiver, startIndex, endIndex) {
  var length$;
  if (!(typeof receiver === 'string'))
    return receiver.substring$2(startIndex, endIndex);
  $.checkNum(startIndex);
  length$ = receiver.length;
  if (endIndex == null)
    endIndex = length$;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, length$))
    throw $.$$throw($.RangeError$value(endIndex));
  return $.substringUnchecked(receiver, startIndex, endIndex);
};

$.trim = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.trim$0();
  return receiver.trim();
};

$.get$hashCode = function(receiver) {
  var length$, hash, i, hash0, hash1;
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 0x1FFFFFFF;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.get$hashCode();
  length$ = receiver.length;
  for (hash = 0, i = 0; i < length$; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + 524287 & hash0 << 10;
    hash1 = (hash1 ^ $.shr(hash1, 6)) >>> 0;
  }
  hash0 = 536870911 & hash + 67108863 & hash << 3;
  hash0 = (hash0 ^ $.shr(hash0, 11)) >>> 0;
  return 536870911 & hash0 + 16383 & hash0 << 15;
};

$.toLowerCase = function(receiver) {
  if (!(typeof receiver === 'string'))
    return receiver.toLowerCase$0();
  return receiver.toLowerCase();
};

$.replaceAll = function(receiver, from, to) {
  if (!(typeof receiver === 'string'))
    return receiver.replaceAll$2(from, to);
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
};

$.get$runtimeType = function(receiver) {
  if (typeof receiver === 'number' && Math.floor(receiver) === receiver)
    return $.getOrCreateCachedRuntimeType('int');
  else if (typeof receiver === 'string')
    return $.getOrCreateCachedRuntimeType('String');
  else if (typeof receiver === 'number')
    return $.getOrCreateCachedRuntimeType('double');
  else if (typeof receiver === 'boolean')
    return $.getOrCreateCachedRuntimeType('bool');
  else if ($.isJsArray(receiver))
    return $.getOrCreateCachedRuntimeType('List');
  else
    return receiver.get$runtimeType();
};

$.PseudoClass$ = function(name$) {
  var t1 = new $.PseudoClass(name$, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'PseudoClass'});
  return t1;
};

$.PseudoClass_getDefinition = function(name$) {
  switch (name$) {
    case 'first-child':
      return new $.PseudoClass_getDefinition_anon();
    case 'last-child':
      return new $.PseudoClass_getDefinition_anon0();
    case 'only-child':
      return new $.PseudoClass_getDefinition_anon1();
    case 'empty':
      return new $.PseudoClass_getDefinition_anon2();
    case 'nth-child':
      return new $.PseudoClass_getDefinition_anon3();
    case 'last-nth-child':
      return new $.PseudoClass_getDefinition_anon4();
    default:
      return;
  }
};

$.startsWith = function(receiver, other) {
  var length$;
  if (!(typeof receiver === 'string'))
    return receiver.startsWith$1(other);
  $.checkString(other);
  length$ = other.length;
  if (length$ > receiver.length)
    return false;
  return other == receiver.substring(0, length$);
};

$._ViewImpl_init = function() {
  var t1, t2;
  if ($._ViewImpl__inited !== true) {
    $._ViewImpl__inited = true;
    $.add$1($.window().get$on().get$resize(), $._ViewImpl__onResize());
    t1 = $.get$browser().get$touch() === true;
    t2 = $.document;
    t1 = t1 ? t2().get$on().get$touchStart() : t2().get$on().get$mouseDown();
    $.add$1(t1, $._ViewImpl__onTouchStart());
  }
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf('Chrome') !== -1 || userAgent.indexOf('DumpRenderTree') !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf('Firefox') !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf('MSIE') !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf('Opera') !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf('AppleWebKit') !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document')
    return 'HTMLDocument';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.Queue_Queue = function(E) {
  return $.DoubleLinkedQueue$(E);
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.round = function(receiver) {
  if (!(typeof receiver === 'number'))
    return receiver.round$0();
  if (receiver < 0)
    return -Math.round(-receiver);
  else
    return Math.round(receiver);
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split('|');
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.neg = function(a) {
  if (typeof a === "number")
    return -a;
  return a.negate$0();
};

$.WorkerEvents$ = function(_ptr) {
  var t1 = new $.WorkerEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'WorkerEvents'});
  return t1;
};

$.AbstractWorkerEvents$ = function(_ptr) {
  var t1 = new $.AbstractWorkerEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'AbstractWorkerEvents'});
  return t1;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.get$isNegative = function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC41)[name$];
  if (!(dartMethod == null))
    methods['Object'] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._MainManagerStub$ = function() {
  var t1 = new $._MainManagerStub();
  $.setRuntimeTypeInfo(t1, {runtimeType: '_MainManagerStub'});
  return t1;
};

$._ViewImpl_link = function(view, child, beforeChild) {
  var ci, p, t1;
  ci = view._initChildInfo$0();
  if (beforeChild == null) {
    p = ci.get$lastChild();
    if (!(p == null)) {
      p.set$_nextSibling(child);
      child.set$_prevSibling(p);
      ci.set$lastChild(child);
    } else {
      ci.set$lastChild(child);
      ci.set$firstChild(child);
    }
  } else {
    p = beforeChild.get$_prevSibling();
    if (!(p == null)) {
      child.set$_prevSibling(p);
      p.set$_nextSibling(child);
    } else
      ci.set$firstChild(child);
    beforeChild.set$_prevSibling(child);
    child.set$_nextSibling(beforeChild);
  }
  child.set$_lib1_parent(view);
  t1 = view._childInfo;
  t1.set$nChild($.add(t1.get$nChild(), 1));
  if (typeof child === 'object' && child !== null && !!child.is$IdSpace)
    $._ViewImpl_addToIdSpace(child, true);
  else
    $._ViewImpl_addToIdSpaceDown(child, child.get$spaceOwner());
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  var t1 = new $._IsolateEvent(isolate, fn, message);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_IsolateEvent'});
  return t1;
};

$.UnimplementedError$ = function(message) {
  var t1 = new $.UnimplementedError(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'UnimplementedError'});
  return t1;
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$._Timer$repeating = function(milliSeconds, callback) {
  var t1 = new $._Timer(false, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_Timer'});
  t1._Timer$repeating$2(milliSeconds, callback);
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_IsolateContext'});
  t1._IsolateContext$0();
  return t1;
};

$._ViewImpl__onResize = function() {
  var t1 = {};
  if ($.get$browser().get$android() === true) {
    t1.old_1 = $.WindowAgent_WindowAgent($.window()).get$innerSize();
    return new $._ViewImpl__onResize_anon(t1);
  } else
    return new $._ViewImpl__onResize_anon0();
};

$._EventLoop$ = function() {
  var t1 = new $._EventLoop($.Queue_Queue('_IsolateEvent'));
  $.setRuntimeTypeInfo(t1, {runtimeType: '_EventLoop'});
  return t1;
};

$.main = function() {
  $.ViewDemo$().main$0();
  $.PanelDemo$().main$0();
  $.SwitchViewDemo$().main$0();
};

$.shl = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (b > 31)
      return 0;
    return (a << b) >>> 0;
  }
  return a.operator$shl$1(b);
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.Selectors_parse = function(source) {
  var tokens, selectors, t1, state, curr, currSeq, t2;
  tokens = $.Selectors_tokenize(source);
  selectors = $._ListImpl_List(null, 'Selector');
  t1 = 'Selector';
  $.setRuntimeTypeInfo(selectors, {runtimeType: 'List<' + t1 + '>', 'E': t1});
  for (t1 = $.iterator(tokens), state = 1, curr = null, currSeq = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.eqB(t2.get$type(), 5)) {
      switch (state) {
        case 9:
        case 14:
        case 8:
        case 3:
        case 9:
          break;
        default:
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
      }
      state = 17;
      curr = null;
      currSeq = null;
      continue;
    }
    if (currSeq == null && $.Selectors__requireSequence(state, t2.get$type())) {
      if (curr == null) {
        curr = $.Selector$(selectors.length);
        selectors.push(curr);
      }
      currSeq = curr.addSequence$0();
    }
    switch (state) {
      case 17:
        if ($.eqB(t2.get$type(), 3)) {
          state = 1;
          continue;
        }
        break;
      case 3:
        switch (t2.get$type()) {
          case 7:
          case 9:
          case 8:
            if (curr == null)
              throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
            curr.addCombinator$1(t2);
            state = 2;
            continue;
        }
        break;
      case 8:
        if ($.eqB(t2.get$type(), 21)) {
          state = 15;
          continue;
        }
        break;
      case 15:
        if (!$.eqB(t2.get$type(), 1))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        t2 = t2.source$1(source);
        $.get$last(currSeq.get$pseudoClasses()).set$parameter(t2);
        state = 16;
        continue;
      case 16:
        if (!$.eqB(t2.get$type(), 22))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        state = 9;
        continue;
    }
    switch (state) {
      case 17:
      case 3:
      case 1:
        switch (t2.get$type()) {
          case 1:
            currSeq.set$type(t2.source$1(source));
            state = 9;
            continue;
          case 2:
            state = 14;
            currSeq = null;
            continue;
        }
        break;
      case 8:
      case 9:
        if ($.eqB(t2.get$type(), 3)) {
          state = 3;
          currSeq = null;
          continue;
        }
        break;
      case 5:
      case 6:
      case 7:
        if (!$.eqB(t2.get$type(), 1))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        break;
    }
    switch (state) {
      case 2:
        if (!$.eqB(t2.get$type(), 3))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        state = 1;
        break;
      case 17:
      case 3:
      case 8:
      case 1:
      case 9:
        switch (t2.get$type()) {
          case 10:
            state = 5;
            break;
          case 11:
            state = 6;
            break;
          case 12:
            state = 7;
            break;
          default:
            throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        }
        break;
      case 14:
        if (!$.eqB(t2.get$type(), 3))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        state = 3;
        break;
      case 5:
        if (!(currSeq.get$id() == null))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        currSeq.set$id(t2.source$1(source));
        state = 9;
        break;
      case 6:
        $.add$1(currSeq.get$classes(), t2.source$1(source));
        state = 9;
        break;
      case 7:
        $.add$1(currSeq.get$pseudoClasses(), $.PseudoClass$(t2.source$1(source)));
        state = 8;
        break;
      default:
        throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
    }
  }
  switch (state) {
    case 5:
    case 6:
    case 7:
    case 17:
    case 2:
    case 1:
    case 15:
    case 16:
      throw $.$$throw($.SelectorParseException$unexpectedEnding(source));
  }
  return selectors;
};

$.Selectors__requireSequence = function(state, type) {
  if (!$.eqB(type, 1) && !$.eqB(type, 2))
    return false;
  switch (state) {
    case 17:
    case 3:
    case 1:
    case 5:
    case 6:
    case 7:
    case 10:
      return true;
    default:
      return false;
  }
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_Manager'});
  t1._Manager$0();
  return t1;
};

$.xor = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a ^ b) >>> 0;
  return a.operator$xor$1(b);
};

$.Selectors_tokenize = function(source) {
  var tokens, t1, len, i, pclz, curr, i0, c, clz;
  tokens = $._ListImpl_List(null, 'Token');
  t1 = 'Token';
  $.setRuntimeTypeInfo(tokens, {runtimeType: 'List<' + t1 + '>', 'E': t1});
  len = $.get$length(source);
  if (typeof len !== 'number')
    return $.Selectors_tokenize$bailout(1, source, tokens, len);
  for (i = 0, pclz = 2, curr = null; i < len; pclz = clz, i = i0) {
    i0 = i + 1;
    c = $.substring$2(source, i, i0);
    clz = $.Selectors__getTokenClass($.charCodeAt(source, i));
    if (!(curr == null) && clz === pclz && clz !== 2)
      curr.extend$0();
    else {
      curr = $.Token$fromChar(c, i);
      tokens.push(curr);
    }
  }
  return tokens;
};

$.Selectors__getTokenClass = function(c) {
  var t1;
  if ($.Selectors__isWhitespace(c))
    t1 = 1;
  else
    t1 = $.Selectors__isLiteral(c) ? 0 : 2;
  return t1;
};

$.Selectors__isWhitespace = function(c) {
  return $.eqB(c, 32) || $.eqB(c, 9) || $.eqB(c, 10) || $.eqB(c, 13);
};

$.Selectors__isLiteral = function(c) {
  var t1;
  if (!($.gtB(c, 96) && $.ltB(c, 123)))
    if (!($.gtB(c, 64) && $.ltB(c, 91)))
      t1 = $.gtB(c, 47) && $.ltB(c, 58) || $.eqB(c, 95) || $.eqB(c, 45);
    else
      t1 = true;
  else
    t1 = true;
  return t1;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  $.setRuntimeTypeInfo(t1, {runtimeType: '_JsSerializer'});
  t1._JsSerializer$0();
  return t1;
};

$._Timer$ = function(milliSeconds, callback) {
  var t1 = new $._Timer(true, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_Timer'});
  t1._Timer$2(milliSeconds, callback);
  return t1;
};

$.Token$fromChar = function(c, index) {
  var t1 = index + 1;
  t1 = new $.Token($.Token_getTypeFromChar(c), index, t1);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Token'});
  return t1;
};

$.Token_getTypeFromChar = function(c) {
  var code = $.charCodeAt(c, 0);
  if ($.Token_isLiteral(code))
    return 1;
  if ($.Token_isWhitespace(code))
    return 3;
  switch (c) {
    case '*':
      return 2;
    case ',':
      return 5;
    case '>':
      return 7;
    case '+':
      return 8;
    case '~':
      return 9;
    case '#':
      return 10;
    case '.':
      return 11;
    case ':':
      return 12;
    case '=':
      return 13;
    case '\'':
      return 17;
    case '"':
      return 18;
    case '[':
      return 19;
    case ']':
      return 20;
    case '(':
      return 21;
    case ')':
      return 22;
    default:
      return -1;
  }
};

$.LocalWindow__isDartLocation = function(thing, exception) {
  var t1;
  try {
    t1 = thing;
    t1 = typeof t1 === 'object' && t1 !== null && t1.is$Location();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  var t1 = new $._NativeJsSendPort(_receivePort, isolateId);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_NativeJsSendPort'});
  return t1;
};

$._emptyStyleFuture = function() {
  return $._createMeasurementFuture(new $._emptyStyleFuture_anon(), $.Completer_Completer('CSSStyleDeclaration'));
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  var t1 = new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_WorkerSendPort'});
  return t1;
};

$.Token_isLiteral = function(c) {
  var t1;
  if (!($.gtB(c, 96) && $.ltB(c, 123)))
    if (!($.gtB(c, 64) && $.ltB(c, 91)))
      t1 = $.gtB(c, 47) && $.ltB(c, 58) || $.eqB(c, 95) || $.eqB(c, 45);
    else
      t1 = true;
  else
    t1 = true;
  return t1;
};

$.Token_isWhitespace = function(c) {
  return $.eqB(c, 32) || $.eqB(c, 9) || $.eqB(c, 10) || $.eqB(c, 13);
};

$.SelectorParseException$unexpectedEnding = function(source) {
  var t1 = new $.SelectorParseException(source, null, -1);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SelectorParseException'});
  return t1;
};

$.SelectorParseException$unexpectedToken = function(source, token) {
  var t1 = new $.SelectorParseException(source, token, token.get$start());
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SelectorParseException'});
  return t1;
};

$._MessageTraverserVisitedMap$ = function() {
  var t1 = new $._MessageTraverserVisitedMap();
  $.setRuntimeTypeInfo(t1, {runtimeType: '_MessageTraverserVisitedMap'});
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  $.setRuntimeTypeInfo(t1, {runtimeType: '_JsCopier'});
  t1._JsCopier$0();
  return t1;
};

$._JsVisitedMap$ = function() {
  var t1 = new $._JsVisitedMap(null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_JsVisitedMap'});
  return t1;
};

$.Completer_Completer = function(T) {
  return $._CompleterImpl$(T);
};

$._ReceivePortImpl$ = function() {
  var t1 = $._ReceivePortImpl__nextFreeId;
  $._ReceivePortImpl__nextFreeId = $.add(t1, 1);
  t1 = new $._ReceivePortImpl(t1, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_ReceivePortImpl'});
  t1._ReceivePortImpl$0();
  return t1;
};

$.ChangeEvent$ = function(value, type, target, T) {
  var t1 = new $.ChangeEvent(value, type, $.Date_Date$now().get$millisecondsSinceEpoch(), false, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ChangeEvent<' + T + '>', 'T': T});
  t1.ViewEvent$2(type, target);
  return t1;
};

$.DOMEvent$ = function(cause, type, target) {
  var t1, t2, t3;
  t1 = !(type == null) ? type : cause.get$type();
  t2 = typeof cause === 'object' && cause !== null && cause.is$UIEvent() ? cause : null;
  t3 = typeof cause === 'object' && cause !== null && cause.is$MouseEvent() || typeof cause === 'object' && cause !== null && cause.is$KeyboardEvent() ? cause : null;
  t3 = new $.DOMEvent(t2, t3, cause, t1, 0, false, null, null);
  $.setRuntimeTypeInfo(t3, {runtimeType: 'DOMEvent'});
  t3.ViewEvent$_super$2(t1, target);
  return t3;
};

$._PendingSendPortFinder$ = function() {
  var t1 = $._MessageTraverserVisitedMap$();
  t1 = new $._PendingSendPortFinder([], t1);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_PendingSendPortFinder'});
  t1._PendingSendPortFinder$0();
  return t1;
};

$.Futures_wait = function(futures) {
  var t1, completer, result, values, i, future;
  t1 = {};
  if (typeof futures !== 'string' && (typeof futures !== 'object' || futures === null || futures.constructor !== Array && !futures.is$JavaScriptIndexingBehavior()))
    return $.Futures_wait$bailout(1, futures, t1);
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC0, 'List');
  completer = $.Completer_Completer('List');
  result = completer.get$future();
  t1.remaining_1 = futures.length;
  values = $._ListImpl_List(futures.length, 'dynamic');
  $.setRuntimeTypeInfo(values, {runtimeType: 'List<dynamic>'});
  for (i = 0; i < futures.length; ++i) {
    future = futures[i];
    future.then$1(new $.Futures_wait_anon(i, result, completer, values, t1));
    future.handleException$1(new $.Futures_wait_anon0(future, result, completer));
  }
  return result;
};

$.ViewEventListenerList$ = function(_ptr, _type) {
  var t1 = new $.ViewEventListenerList(_ptr, _type);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewEventListenerList'});
  return t1;
};

$._CompleterImpl$ = function(T) {
  var t1 = new $._CompleterImpl($._FutureImpl$('dynamic'));
  $.setRuntimeTypeInfo(t1, {runtimeType: '_CompleterImpl<' + T + '>', 'T': T});
  return t1;
};

$._CssClassSet$ = function(_element) {
  var t1 = new $._CssClassSet(_element);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_CssClassSet'});
  return t1;
};

$.WebSocketEvents$ = function(_ptr) {
  var t1 = new $.WebSocketEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'WebSocketEvents'});
  return t1;
};

$.BodyElementEvents$ = function(_ptr) {
  var t1 = new $.BodyElementEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'BodyElementEvents'});
  return t1;
};

$._FutureImpl$ = function(T) {
  var t1 = new $._FutureImpl(false, null, null, null, false, [], [], []);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_FutureImpl<' + T + '>', 'T': T});
  return t1;
};

$.BatteryManagerEvents$ = function(_ptr) {
  var t1 = new $.BatteryManagerEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'BatteryManagerEvents'});
  return t1;
};

$.FutureAlreadyCompleteException$ = function() {
  var t1 = new $.FutureAlreadyCompleteException();
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FutureAlreadyCompleteException'});
  return t1;
};

$.Strings_join = function(strings, separator) {
  return $._StringImpl_join(strings, separator);
};

$.FutureUnhandledException$ = function(source, stackTrace) {
  var t1 = new $.FutureUnhandledException(source, stackTrace);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FutureUnhandledException'});
  return t1;
};

$._FutureImpl__FutureImpl$immediate = function(value, T) {
  var res = $._FutureImpl$('dynamic');
  res._setValue$1(value);
  return res;
};

$._FrozenCssClassSet$ = function() {
  var t1 = new $._FrozenCssClassSet(null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_FrozenCssClassSet'});
  return t1;
};

$._AttributeClassSet$ = function(element) {
  var t1 = new $._AttributeClassSet(element);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_AttributeClassSet'});
  return t1;
};

$.FutureNotCompleteException$ = function() {
  var t1 = new $.FutureNotCompleteException();
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FutureNotCompleteException'});
  return t1;
};

$.TextTrackListEvents$ = function(_ptr) {
  var t1 = new $.TextTrackListEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'TextTrackListEvents'});
  return t1;
};

$.AudioContextEvents$ = function(_ptr) {
  var t1 = new $.AudioContextEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'AudioContextEvents'});
  return t1;
};

$._CSSStyleImpl$ = function(_view) {
  var t1 = new $._CSSStyleImpl(_view);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_CSSStyleImpl'});
  return t1;
};

$._JsDeserializer$ = function() {
  var t1 = new $._JsDeserializer(null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_JsDeserializer'});
  return t1;
};

$.InputElementEvents$ = function(_ptr) {
  var t1 = new $.InputElementEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'InputElementEvents'});
  return t1;
};

$._maybeScheduleMeasurementFrame = function() {
  if ($._measurementScheduler == null)
    $._measurementScheduler = $._MeasurementScheduler__MeasurementScheduler$best($._completeMeasurementFutures);
  $._measurementScheduler.maybeSchedule$0();
};

$._createMeasurementFuture = function(computeValue, completer) {
  if ($._pendingRequests == null) {
    $._pendingRequests = [];
    $._maybeScheduleMeasurementFrame();
  }
  $.add$1($._pendingRequests, $._MeasurementRequest$(computeValue, completer, 'dynamic'));
  return completer.get$future();
};

$._completeMeasurementFutures = function(exception) {
  var t1, request, t2, e, completedRequests, readyMeasurementFrameCallbacks, t3, t4;
  t1 = $._pendingRequests;
  if (!(t1 == null))
    for (t1 = $.iterator(t1); t1.get$hasNext() === true;) {
      request = t1.next$0();
      try {
        t2 = request.computeValue$0();
        request.set$value(t2);
      } catch (exception) {
        t2 = $.unwrapException(exception);
        e = t2;
        t2 = e;
        request.set$value(t2);
        request.set$exception(true);
      }

    }
  completedRequests = $._pendingRequests;
  readyMeasurementFrameCallbacks = $._pendingMeasurementFrameCallbacks;
  $._pendingRequests = null;
  $._pendingMeasurementFrameCallbacks = null;
  if (!(completedRequests == null))
    for (t1 = $.iterator(completedRequests); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      t3 = t2.get$exception() === true;
      t4 = t2.get$completer();
      if (t3)
        t4.completeException$1(t2.get$value());
      else
        t4.complete$1(t2.get$value());
    }
  if (!(readyMeasurementFrameCallbacks == null))
    for (t1 = $.iterator(readyMeasurementFrameCallbacks); t1.get$hasNext() === true;)
      t1.next$0().call$0();
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$.DoubleLinkedQueue$ = function(E) {
  var t1 = new $.DoubleLinkedQueue(null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'DoubleLinkedQueue<' + E + '>', 'E': E});
  t1.DoubleLinkedQueue$0();
  return t1;
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t2, t1, t3).call$1(value);
  t4.call$0();
  return copy;
};

$._convertNativeToDart_SerializedScriptValue = function(object) {
  return $._convertNativeToDart_AcceptStructuredClone(object, true);
};

$._convertNativeToDart_AcceptStructuredClone = function(object, mustCopy) {
  var values, copies, t1;
  values = [];
  copies = [];
  t1 = new $._convertNativeToDart_AcceptStructuredClone_findSlot(copies, values);
  return new $._convertNativeToDart_AcceptStructuredClone_walk(new $._convertNativeToDart_AcceptStructuredClone_readSlot(copies), t1, mustCopy, new $._convertNativeToDart_AcceptStructuredClone_writeSlot(copies)).call$1(object);
};

$.IDBVersionChangeRequestEvents$ = function(_ptr) {
  var t1 = new $.IDBVersionChangeRequestEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'IDBVersionChangeRequestEvents'});
  return t1;
};

$.IDBRequestEvents$ = function(_ptr) {
  var t1 = new $.IDBRequestEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'IDBRequestEvents'});
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel, E) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_DoubleLinkedQueueIterator<' + E + '>', 'E': E});
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function(E) {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_DoubleLinkedQueueEntrySentinel<' + E + '>', 'E': E});
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$._globalState = function() {
  return $globalState;
};

$._currentIsolate = function() {
  return $._globalState().get$currentContext();
};

$._callInIsolate = function(isolate, function$) {
  isolate.eval$1(function$);
  $._globalState().get$topEventLoop().run$0();
};

$.ViewDemo$ = function() {
  var t1, t2, t3;
  t1 = [$.CTC36, $.CTC39, $.CTC38, $.CTC37];
  t2 = $._ListImpl_List(4, 'View');
  t3 = 'View';
  $.setRuntimeTypeInfo(t2, {runtimeType: 'List<' + t3 + '>', 'E': t3});
  t2 = new $.ViewDemo($.CTC36, t1, t2);
  $.setRuntimeTypeInfo(t2, {runtimeType: 'ViewDemo'});
  return t2;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$.DoubleLinkedQueueEntry$ = function(e, E) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'DoubleLinkedQueueEntry<' + E + '>', 'E': E});
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.Button$ = function(text) {
  var t1 = new $.Button('', null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Button'});
  t1.TextView$1(text);
  return t1;
};

$.TextTrackCueEvents$ = function(_ptr) {
  var t1 = new $.TextTrackCueEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'TextTrackCueEvents'});
  return t1;
};

$._deserializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $.Futures_wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$.TextTrackEvents$ = function(_ptr) {
  var t1 = new $.TextTrackEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'TextTrackEvents'});
  return t1;
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($._globalState().get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $._globalState().set$rootContext(rootContext);
  $globals = rootContext.isolateStatics;
  $static_init();
  $._globalState().set$currentContext(rootContext);
  if (!($._window() == null))
    rootContext.eval$1(new $.startRootIsolate_anon());
  rootContext.eval$1(entry);
  $._globalState().get$topEventLoop().run$0();
};

$.TextView$ = function(text) {
  var t1 = new $.TextView('', null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'TextView'});
  t1.TextView$1(text);
  return t1;
};

$.IDBTransactionEvents$ = function(_ptr) {
  var t1 = new $.IDBTransactionEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'IDBTransactionEvents'});
  return t1;
};

$._window = function() {
  return typeof window != "undefined" ? window : null;
};

$._timerFactory = function(millis, callback, repeating) {
  return repeating === true ? $._Timer$repeating(millis, callback) : $._Timer$(millis, callback);
};

$._serializeMessage = function(message) {
  if ($._globalState().get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$.View$ = function() {
  var t1 = new $.View(null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'View'});
  return t1;
};

$._VirtualIdSpace$ = function(_owner) {
  var t1 = new $._VirtualIdSpace(_owner, $.makeLiteralMap([]));
  $.setRuntimeTypeInfo(t1, {runtimeType: '_VirtualIdSpace'});
  return t1;
};

$.IDBOpenDBRequestEvents$ = function(_ptr) {
  var t1 = new $.IDBOpenDBRequestEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'IDBOpenDBRequestEvents'});
  return t1;
};

$._ChildrenElementList$_wrap = function(element) {
  var t1 = new $._ChildrenElementList(element, element.get$$$dom_children());
  $.setRuntimeTypeInfo(t1, {runtimeType: '_ChildrenElementList'});
  return t1;
};

$.SVGElementInstanceEvents$ = function(_ptr) {
  var t1 = new $.SVGElementInstanceEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SVGElementInstanceEvents'});
  return t1;
};

$.PanelDemo$ = function() {
  var t1 = new $.PanelDemo();
  $.setRuntimeTypeInfo(t1, {runtimeType: 'PanelDemo'});
  return t1;
};

$.EasingMotion$ = function(action, easing, end, period, repeat, start) {
  var t1 = new $.EasingMotion(action, easing, period, repeat, $.mul(repeat, period), start, null, end, null, null, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'EasingMotion'});
  t1.Motion$3$end$move$start(end, null, start);
  return t1;
};

$.EasingMotion$join = function(motions, easing, end, period, repeat, start) {
  var t1, t2, t3;
  t1 = $.EasingMotion__jointAction(motions);
  t2 = $.EasingMotion__jointStart(motions, start);
  t3 = $.EasingMotion__jointEnd(motions, end);
  t1 = new $.EasingMotion(t1, easing, period, repeat, $.mul(repeat, period), t2, null, t3, null, null, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'EasingMotion'});
  t1.Motion$3$end$move$start(t3, null, t2);
  return t1;
};

$.EasingMotion__jointAction = function(motions) {
  return new $.EasingMotion__jointAction_anon(motions);
};

$.DocumentEvents$ = function(_ptr) {
  var t1 = new $.DocumentEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'DocumentEvents'});
  return t1;
};

$.EasingMotion__jointEnd = function(motions, end) {
  return new $.EasingMotion__jointEnd_anon(end, motions);
};

$._domEvtTarget = function(type, node) {
  var t1, inp;
  if ($.contains$1($.CTC16, type) === true && $.contains$1($.get$_inpTags(), $.toLowerCase(node.get$tagName())) !== true)
    for (t1 = $.iterator($.get$_inpTags()); t1.get$hasNext() === true;) {
      inp = node.query$1(t1.next$0());
      if (!(inp == null)) {
        node = inp;
        break;
      }
    }
  return node;
};

$._domEventDispatcher = function(type) {
  var t1, t2;
  if ($._domEvtDisps == null) {
    $._domEvtDisps = $.makeLiteralMap([]);
    for (t1 = $.iterator($.CTC20); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      $.indexSet($._domEvtDisps, t2, $._domEvtDisp(t2));
    }
    for (t1 = $.iterator($.CTC16); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      $.indexSet($._domEvtDisps, t2, $._domEvtDisp(t2));
    }
    $.indexSet($._domEvtDisps, 'change', $._domChangeEvtDisp());
  }
  return $.index($._domEvtDisps, type);
};

$._FilteredElementList$ = function(node) {
  var t1 = new $._FilteredElementList(node, node.get$nodes());
  $.setRuntimeTypeInfo(t1, {runtimeType: '_FilteredElementList'});
  return t1;
};

$._domEvtDisp = function(type) {
  return new $._domEvtDisp_anon(type);
};

$._rootClasses = function() {
  if ($._$rootClasses == null) {
    $._$rootClasses = ['rikulo', 'v-' + $.S($.get$browser().get$name())];
    if ($.get$browser().get$touch() === true)
      $.add$1($._$rootClasses, 'v-touch');
    if ($.get$browser().get$ios() === true)
      $.add$1($._$rootClasses, 'v-ios');
    else if ($.get$browser().get$android() === true)
      $.add$1($._$rootClasses, 'v-android');
  }
  return $._$rootClasses;
};

$._s = function(s) {
  return !(s == null) ? s : '';
};

$._domChangeEvtDisp = function() {
  return new $._domChangeEvtDisp_anon();
};

$.EasingMotion__jointStart = function(motions, start) {
  return new $.EasingMotion__jointStart_anon(start, motions);
};

$.MotionState$_ = function(current, paused, start) {
  var t1 = !(start == null) ? start : current;
  t1 = new $.MotionState(t1, current, 0, paused, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'MotionState'});
  return t1;
};

$.SwitchViewDemo$ = function() {
  var t1 = new $.SwitchViewDemo(false, $.Random_Random(null));
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SwitchViewDemo'});
  return t1;
};

$.Offset$ = function(left, top$) {
  var t1 = new $.Offset(left, top$);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Offset'});
  return t1;
};

$._NodeListWrapper$ = function(list) {
  var t1 = new $._NodeListWrapper(list);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_NodeListWrapper'});
  return t1;
};

$.Random_Random = function(seed) {
  return $.CTC35;
};

$._getAmountInfo = function(view, value) {
  var amt = $.AmountInfo$(value);
  if ($.eqB(amt.type, $.CTC30) && view.get$layout().get$handler().get$isFlex() === true) {
    amt.type = $.CTC28;
    amt.value = 1;
  }
  return amt;
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$.rootLayout = function(mctx, root) {
  var node, dlgInfo, cave, t1, size, anchor, loc, leftByApp, topByApp, t2, t3, ref, ofs, locators, ai;
  node = root.get$node();
  dlgInfo = $.index($.get$dialogInfos(), root);
  cave = !(dlgInfo == null) ? dlgInfo.get$cave().get$parent() : node.get$parent();
  if ($.eqB(cave, $.document().get$body()))
    cave = null;
  t1 = cave == null;
  size = t1 ? $.get$browser().get$innerSize() : $.DOMAgent_DOMAgent(cave).get$innerSize();
  anchor = root.get$profile().get$anchorView();
  mctx.setWidthByProfile$2(root, new $.rootLayout_anon(root, anchor, size));
  mctx.setHeightByProfile$2(root, new $.rootLayout_anon0(root, anchor, size));
  loc = root.get$profile().get$location();
  leftByApp = $.get$isEmpty(loc) === true && !(mctx.getLeftByApp$1(root) == null);
  topByApp = $.get$isEmpty(loc) === true && !(mctx.getTopByApp$1(root) == null);
  t2 = !leftByApp;
  if (!leftByApp || !topByApp) {
    t3 = !(anchor == null);
    if (t3)
      ref = anchor;
    else
      ref = !t1 ? $._AnchorOfNode$(cave) : $.CTC22;
    if (t3)
      ofs = !$.eqB(cave, anchor.get$parent()) ? $.add($.sub(anchor.get$pageOffset(), root.get$pageOffset()), $.Offset$(root.get$left(), root.get$top())) : $.Offset$(anchor.get$left(), anchor.get$top());
    else
      ofs = !t1 && !$.eqB(node.get$offsetParent(), node.get$parent()) ? $.DOMAgent_DOMAgent(cave).get$offset() : $.Offset$(0, 0);
    locators = $._getLocators(loc);
    ai = $.PairInfo$(root.get$profile().get$offset(), 0);
    if (t2)
      $.index($._anchorXLocators(), $.index(locators, 0)).call$3($.add(ofs.get$left(), ai.first), ref, root);
    if (!topByApp)
      $.index($._anchorYLocators(), $.index(locators, 1)).call$3($.add(ofs.get$top(), ai.second), ref, root);
  }
};

$.locateToView = function(view, location$, anchor, x, y) {
  var ai, locators, offset, t1, t2;
  ai = $.PairInfo$(view.get$profile().get$offset(), 0);
  locators = $._getLocators(location$);
  if (!(anchor == null)) {
    if ($.eqB(view.get$style().get$position(), 'fixed'))
      offset = anchor.get$pageOffset();
    else {
      t1 = view.get$parent();
      if (anchor == null ? t1 == null : anchor === t1) {
        t1 = $.Offset$(0, 0);
        offset = t1;
      } else {
        t1 = anchor.get$parent();
        t2 = view.get$parent();
        t1 = (t1 == null ? t2 == null : t1 === t2) ? $.Offset$(anchor.get$left(), anchor.get$top()) : $.add($.sub(anchor.get$pageOffset(), view.get$pageOffset()), $.Offset$(view.get$left(), view.get$top()));
        offset = t1;
      }
    }
    $.index($._anchorXLocators(), $.index(locators, 0)).call$3($.add(offset.get$left(), ai.first), anchor, view);
    $.index($._anchorYLocators(), $.index(locators, 1)).call$3($.add(offset.get$top(), ai.second), anchor, view);
  } else {
    $.index($._anchorXLocators(), $.index(locators, 0)).call$3($.add(x, ai.first), $.CTC33, view);
    $.index($._anchorYLocators(), $.index(locators, 1)).call$3($.add(y, ai.second), $.CTC33, view);
  }
};

$._getLocators = function(loc) {
  var locators, j;
  if ($.get$isEmpty(loc) === true)
    loc = 'top left';
  locators = $.CTC23.operator$index$1(loc);
  if (!(locators == null))
    return locators;
  j = $.indexOf$1(loc, ' ');
  if ($.gtB(j, 0)) {
    locators = $.CTC23.operator$index$1($.S($.substring$1(loc, $.add(j, 1))) + ' ' + $.S($.substring$2(loc, 0, j)));
    if (!(locators == null))
      return locators;
  }
  throw $.$$throw($.UIException$('Unknown loation ' + $.S(loc)));
};

$._anchorXLocators = function() {
  if ($._$anchorXLocators == null)
    $._$anchorXLocators = [new $._anchorXLocators_anon(), new $._anchorXLocators_anon0(), new $._anchorXLocators_anon1(), new $._anchorXLocators_anon2(), new $._anchorXLocators_anon3()];
  return $._$anchorXLocators;
};

$._anchorYLocators = function() {
  if ($._$anchorYLocators == null)
    $._$anchorYLocators = [new $._anchorYLocators_anon(), new $._anchorYLocators_anon0(), new $._anchorYLocators_anon1(), new $._anchorYLocators_anon2(), new $._anchorYLocators_anon3()];
  return $._$anchorYLocators;
};

$.IDBDatabaseEvents$ = function(_ptr) {
  var t1 = new $.IDBDatabaseEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'IDBDatabaseEvents'});
  return t1;
};

$._ChildInfo$ = function() {
  var t1 = new $._ChildInfo(null, null, 0, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_ChildInfo'});
  return t1;
};

$._EventListenerInfo$ = function(_owner) {
  var t1 = new $._EventListenerInfo(_owner, null, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_EventListenerInfo'});
  t1._EventListenerInfo$1(_owner);
  return t1;
};

$.ProfileDeclaration$ = function(owner) {
  var t1 = new $.ProfileDeclaration(owner, null, $.Map_Map('dynamic', 'dynamic'));
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ProfileDeclaration'});
  return t1;
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$.LayoutDeclaration$ = function(owner) {
  var t1 = new $.LayoutDeclaration(owner, null, $.Map_Map('dynamic', 'dynamic'));
  $.setRuntimeTypeInfo(t1, {runtimeType: 'LayoutDeclaration'});
  return t1;
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  var t1 = new $.HttpRequestUploadEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'HttpRequestUploadEvents'});
  return t1;
};

$.StringMatch$ = function(start, str, pattern) {
  var t1 = new $.StringMatch(start, str, pattern);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'StringMatch'});
  return t1;
};

$.SpeechRecognitionEvents$ = function(_ptr) {
  var t1 = new $.SpeechRecognitionEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SpeechRecognitionEvents'});
  return t1;
};

$._AllMatchesIterable$ = function(_re, _str) {
  var t1 = new $._AllMatchesIterable(_re, _str);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_AllMatchesIterable'});
  return t1;
};

$._AllMatchesIterator$ = function(re, _str) {
  var t1 = new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_AllMatchesIterator'});
  return t1;
};

$.MeasureContext$ = function() {
  var t1 = new $.MeasureContext($.Map_Map('dynamic', 'dynamic'), $.Map_Map('dynamic', 'dynamic'), $.Map_Map('dynamic', 'dynamic'), $.Map_Map('dynamic', 'dynamic'), null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'MeasureContext'});
  return t1;
};

$.HttpRequestEvents$ = function(_ptr) {
  var t1 = new $.HttpRequestEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'HttpRequestEvents'});
  return t1;
};

$.MeasureContext__amountOf = function(profile, parentInner) {
  var ai = $.AmountInfo$(profile);
  switch (ai.type) {
    case $.CTC27:
      return ai.value;
    case $.CTC28:
      return parentInner.call$0();
    case $.CTC29:
      return $.toInt($.round($.mul(parentInner.call$0(), ai.value)));
  }
};

$._FrozenElementList$_wrap = function(_nodeList) {
  var t1 = new $._FrozenElementList(_nodeList);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_FrozenElementList'});
  return t1;
};

$._StringImpl_String$fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes)) {
    charCodes = $._ListImpl_List$from(charCodes, 'dynamic');
    $.setRuntimeTypeInfo(charCodes, {runtimeType: 'List<dynamic>'});
  }
  return $.Primitives_stringFromCharCodes(charCodes);
};

$._StringImpl__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $._StringImpl__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$, 'dynamic');
    $.setRuntimeTypeInfo(array, {runtimeType: 'List<dynamic>'});
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$._StringImpl_join = function(strings, separator) {
  $.checkNull(strings);
  $.checkNull(separator);
  return $.stringJoinUnchecked($._StringImpl__toJsStringArray(strings), separator);
};

$.ViewEvents$ = function(ptr) {
  var t1 = new $.ViewEvents(ptr, $.makeLiteralMap([]));
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewEvents'});
  return t1;
};

$._ListImpl_List = function(length$, E) {
  return $.Primitives_newList(length$);
};

$._ListImpl_List$from = function(other, E) {
  var result, t1;
  result = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(result, {runtimeType: 'List<dynamic>'});
  for (t1 = $.iterator(other); t1.get$hasNext() === true;)
    result.push(t1.next$0());
  return result;
};

$.MeasureContext__minMax = function(v, vmin, vmax) {
  var w;
  if ($.get$isEmpty(vmin) !== true) {
    w = $.CSS_intOf(vmin, null);
    if ($.ltB(v, w))
      v = w;
  }
  if ($.get$isEmpty(vmax) !== true) {
    w = $.CSS_intOf(vmax, null);
    if ($.gtB(w, 0) && $.gtB(v, w))
      v = w;
  }
  return v;
};

$.Map_Map = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$._FrozenElementListIterator$ = function(_list) {
  var t1 = new $._FrozenElementListIterator(_list, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_FrozenElementListIterator'});
  return t1;
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.ViewEvent$ = function(type, target) {
  var t1 = new $.ViewEvent(type, $.Date_Date$now().get$millisecondsSinceEpoch(), false, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewEvent'});
  t1.ViewEvent$2(type, target);
  return t1;
};

$.ViewImpl__sbaVal = function(view, type) {
  switch (type) {
    case 0:
      return view.get$left();
    case 1:
      return view.get$top();
    case 2:
      return view.get$width();
    case 3:
      return view.get$height();
  }
};

$.ViewImpl_leftUpdated = function(view) {
  if ($.get$layoutManager().get$inLayout() === true)
    $.indexSet(view.get$dataAttributes(), 'rk.layout.0', $.ViewImpl__sbaVal(view, 0));
  else
    view.get$dataAttributes().remove$1('rk.layout.0');
};

$.ViewImpl_topUpdated = function(view) {
  if ($.get$layoutManager().get$inLayout() === true)
    $.indexSet(view.get$dataAttributes(), 'rk.layout.1', $.ViewImpl__sbaVal(view, 1));
  else
    view.get$dataAttributes().remove$1('rk.layout.1');
};

$.ViewImpl_isLeftByApp = function(view) {
  var v1, v2, t1;
  v1 = $.ViewImpl__sbaVal(view, 0);
  v2 = $.index(view.get$dataAttributes(), 'rk.layout.0');
  if (!$.eqB(v1, v2))
    t1 = !$.eqB(v1, 0) || !(v2 == null);
  else
    t1 = false;
  return t1;
};

$.ViewImpl_heightUpdated = function(view) {
  if ($.get$layoutManager().get$inLayout() === true)
    $.indexSet(view.get$dataAttributes(), 'rk.layout.3', $.ViewImpl__sbaVal(view, 3));
  else
    view.get$dataAttributes().remove$1('rk.layout.3');
};

$.ViewImpl_isTopByApp = function(view) {
  var v1, v2, t1;
  v1 = $.ViewImpl__sbaVal(view, 1);
  v2 = $.index(view.get$dataAttributes(), 'rk.layout.1');
  if (!$.eqB(v1, v2))
    t1 = !$.eqB(v1, 0) || !(v2 == null);
  else
    t1 = false;
  return t1;
};

$.ViewImpl_isHeightByApp = function(view) {
  var val = $.ViewImpl__sbaVal(view, 3);
  return !(val == null) && !$.eqB(val, $.index(view.get$dataAttributes(), 'rk.layout.3'));
};

$.ViewImpl_isWidthByApp = function(view) {
  var val = $.ViewImpl__sbaVal(view, 2);
  return !(val == null) && !$.eqB(val, $.index(view.get$dataAttributes(), 'rk.layout.2'));
};

$.ViewImpl_widthUpdated = function(view) {
  if ($.get$layoutManager().get$inLayout() === true)
    $.indexSet(view.get$dataAttributes(), 'rk.layout.2', $.ViewImpl__sbaVal(view, 2));
  else
    view.get$dataAttributes().remove$1('rk.layout.2');
};

$.LayoutManager$ = function() {
  var t1, t2, t3;
  t1 = $.RunOnceQueue$();
  t2 = $.Set_Set('dynamic');
  t3 = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(t3, {runtimeType: 'List<dynamic>'});
  t3 = new $.LayoutManager($.makeLiteralMap([]), $.Set_Set('dynamic'), [], 0, 0, t1, t2, null, t3, true, true);
  $.setRuntimeTypeInfo(t3, {runtimeType: 'LayoutManager'});
  t3.LayoutManager$0();
  return t3;
};

$.CSS_px = function(val) {
  return !(val == null) ? $.S(val) + 'px' : '';
};

$.CSS_intOf = function(value, reportError, exception) {
  var m, t1, e;
  try {
    if (!(value == null) && $.get$isEmpty(value) !== true) {
      m = $.CTC24.firstMatch$1(value);
      if (!(m == null)) {
        t1 = $.int_parse(m.group$1(0));
        return t1;
      }
    }
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    if (!(reportError == null) && reportError === true)
      throw $.$$throw(e);
  }

  return 0;
};

$.CSS_offset3dOf = function(value) {
  var ary, i, t1, t2, i0, t3;
  if (value == null || $.get$isEmpty(value) === true)
    return $.Offset3d$(0, 0, 0);
  ary = [0, 0, 0];
  i = $.indexOf$1(value, '(');
  if ($.geB(i, 0))
    value = $.substring$1(value, $.add(i, 1));
  for (t1 = $.iterator($.split(value, ',')), i = 0; t1.get$hasNext() === true; i = i0) {
    t2 = t1.next$0();
    i0 = i + 1;
    t2 = $.CSS_intOf(t2, null);
    if (i >= ary.length)
      throw $.ioore(i);
    ary[i] = t2;
    if (i0 === 3)
      break;
  }
  t1 = ary.length;
  if (0 >= t1)
    throw $.ioore(0);
  t2 = ary[0];
  if (1 >= t1)
    throw $.ioore(1);
  t3 = ary[1];
  if (2 >= t1)
    throw $.ioore(2);
  return $.Offset3d$(t2, t3, ary[2]);
};

$.CSS_name = function(propertyName) {
  var t1;
  if ($.CSS__nsnms == null) {
    $.CSS__nsnms = $.Set_Set$from($.CTC34, 'dynamic');
    if (!($.get$browser().get$ios() === true && $.ltB($.get$browser().get$iosVersion(), 5)))
      t1 = $.get$browser().get$android() === true && $.ltB($.get$browser().get$androidVersion(), 2.4) || $.get$browser().get$firefox() === true;
    else
      t1 = true;
    if (t1)
      $.add$1($.CSS__nsnms, 'box-sizing');
  }
  return $.contains$1($.CSS__nsnms, propertyName) === true ? $.S($.get$CSS_prefix()) + propertyName : propertyName;
};

$.SharedWorkerContextEvents$ = function(_ptr) {
  var t1 = new $.SharedWorkerContextEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SharedWorkerContextEvents'});
  return t1;
};

$.ShowEffect__showEffectStart = function(element, action, start) {
  return new $.ShowEffect__showEffectStart_anon(action, element, start);
};

$.FadeInEffect_createAction = function(element, min, max) {
  return new $.FadeInEffect_createAction_anon(min, element, $.sub(max, min));
};

$.FadeInEffect$ = function(element, easing, end, maxOpacity, minOpacity, period, start) {
  var t1, t2;
  t1 = $.FadeInEffect_createAction(element, minOpacity, maxOpacity);
  t2 = $.ShowEffect__showEffectStart(element, t1, start);
  if (typeof period !== 'number')
    throw $.iae(period);
  t1 = new $.FadeInEffect(element, t1, easing, period, 1, 1 * period, t2, null, end, null, null, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FadeInEffect'});
  t1.Motion$3$end$move$start(end, null, t2);
  return t1;
};

$.RunOnceQueue$ = function() {
  var t1 = new $.RunOnceQueue(null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'RunOnceQueue'});
  return t1;
};

$.FrameSetElementEvents$ = function(_ptr) {
  var t1 = new $.FrameSetElementEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FrameSetElementEvents'});
  return t1;
};

$.LinearLayout__getRealLayout = function(view) {
  return !$.eqB(view.get$layout().get$orient(), 'vertical') ? $._HLayout$() : $._VLayout$();
};

$.LinearLayout$ = function() {
  var t1 = new $.LinearLayout();
  $.setRuntimeTypeInfo(t1, {runtimeType: 'LinearLayout'});
  return t1;
};

$.Animator_Animator = function() {
  return $._Animator$();
};

$.DOMAgent_DOMAgent = function(e) {
  return !(e == null) ? $.DOMAgent$_as(e) : $._NullAgent$();
};

$.DOMAgent$_as = function(node) {
  var t1 = new $.DOMAgent(node);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'DOMAgent'});
  return t1;
};

$.Element_Element$html = function(html) {
  return $._ElementFactoryProvider_createElement_html(html);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$.TileLayout$ = function() {
  var t1 = new $.TileLayout();
  $.setRuntimeTypeInfo(t1, {runtimeType: 'TileLayout'});
  return t1;
};

$.FreeLayout$ = function() {
  var t1 = new $.FreeLayout();
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FreeLayout'});
  return t1;
};

$.Size$ = function(width, height) {
  var t1 = new $.Size(width, height);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Size'});
  return t1;
};

$._HashSetImpl$ = function(E) {
  var t1 = new $._HashSetImpl(null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_HashSetImpl<' + E + '>', 'E': E});
  t1._HashSetImpl$0();
  return t1;
};

$._HashSetImpl__HashSetImpl$from = function(other, E) {
  var set, t1;
  set = $._HashSetImpl$(E);
  for (t1 = $.iterator(other); t1.get$hasNext() === true;)
    set.add$1(t1.next$0());
  return set;
};

$._HashSetIterator$ = function(set_, E) {
  var t1 = new $._HashSetIterator(set_._backingMap.get$_keys(), -1);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_HashSetIterator<' + E + '>', 'E': E});
  t1._HashSetIterator$1(set_);
  return t1;
};

$.ScriptProcessorNodeEvents$ = function(_ptr) {
  var t1 = new $.ScriptProcessorNodeEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ScriptProcessorNodeEvents'});
  return t1;
};

$.UnsupportedError$ = function(message) {
  var t1 = new $.UnsupportedError(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'UnsupportedError'});
  return t1;
};

$._DOMWindowCrossFrame$ = function(_window) {
  var t1 = new $._DOMWindowCrossFrame(_window);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_DOMWindowCrossFrame'});
  return t1;
};

$._FixedSizeListIterator$ = function(array, T) {
  var t1 = new $._FixedSizeListIterator($.get$length(array), array, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_FixedSizeListIterator<' + T + '>', 'T': T});
  return t1;
};

$.FileWriterEvents$ = function(_ptr) {
  var t1 = new $.FileWriterEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FileWriterEvents'});
  return t1;
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.StateError$ = function(message) {
  var t1 = new $.StateError(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'StateError'});
  return t1;
};

$._Animator$ = function() {
  var t1 = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'});
  t1 = new $._Animator(t1, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_Animator'});
  t1._Animator$0();
  return t1;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_parseInt = function(string) {
  var match, base, result;
  $.checkString(string);
  match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  base = !($.index(match, 1) == null) ? 16 : 10;
  result = parseInt(string, base);
  if ($.get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.charCodeAt(name$, 0) === 36 ? $.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.iterator(charCodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.Primitives_parseDouble = function(string) {
  var result;
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  result = parseFloat(string);
  if ($.get$isNaN(result) === true && !$.eqB(string, 'NaN'))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.FileReaderEvents$ = function(_ptr) {
  var t1 = new $.FileReaderEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FileReaderEvents'});
  return t1;
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.RangeError$ = function(message) {
  var t1 = new $.RangeError(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'RangeError'});
  return t1;
};

$.RangeError$value = function(value) {
  var t1 = new $.RangeError('value ' + $.S(value));
  $.setRuntimeTypeInfo(t1, {runtimeType: 'RangeError'});
  return t1;
};

$.ArgumentError$ = function(message) {
  var t1 = new $.ArgumentError(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ArgumentError'});
  return t1;
};

$._ExceptionImplementation$ = function(message) {
  var t1 = new $._ExceptionImplementation(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_ExceptionImplementation'});
  return t1;
};

$.NullPointerException$ = function(functionName, arguments$) {
  var t1 = new $.NullPointerException(functionName, arguments$);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'NullPointerException'});
  return t1;
};

$.AnchorRelation$ = function(view) {
  var t1 = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'});
  t1 = new $.AnchorRelation(t1, $.Map_Map('dynamic', 'dynamic'), view);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'AnchorRelation'});
  t1.AnchorRelation$1(view);
  return t1;
};

$.Maps_mapToString = function(m) {
  var result, t1;
  result = $.StringBuffer_StringBuffer('');
  t1 = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'});
  $.Maps__emitMap(m, result, t1);
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.add$1(visiting, m);
  $.add$1(result, '{');
  t1.first_1 = true;
  $.forEach(m, new $.Maps__emitMap_anon(visiting, t1, result));
  $.add$1(result, '}');
  $.removeLast(visiting);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.RTCPeerConnectionEvents$ = function(_ptr) {
  var t1 = new $.RTCPeerConnectionEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'RTCPeerConnectionEvents'});
  return t1;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result, t1;
  result = $.StringBuffer_StringBuffer('');
  t1 = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'});
  $.Collections__emitCollection(c, result, t1);
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var isList, t1, first, t2;
  $.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  $.add$1(result, isList ? '[' : '{');
  for (t1 = $.iterator(c), first = true; t1.get$hasNext() === true; first = false) {
    t2 = t1.next$0();
    if (!first)
      $.add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
  }
  $.add$1(result, isList ? ']' : '}');
  $.removeLast(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$._SubviewList$ = function(owner) {
  var t1 = new $._SubviewList(owner, $._SubviewSeq$(owner));
  $.setRuntimeTypeInfo(t1, {runtimeType: '_SubviewList'});
  return t1;
};

$.LayoutEvent$ = function(context, type, target) {
  var t1 = new $.LayoutEvent(context, type, $.Date_Date$now().get$millisecondsSinceEpoch(), false, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'LayoutEvent'});
  t1.ViewEvent$2(type, target);
  return t1;
};

$._Broadcaster$ = function() {
  var t1 = new $._Broadcaster(null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_Broadcaster'});
  t1._Broadcaster$0();
  return t1;
};

$.ActivateEvent$ = function(source, type) {
  var t1 = new $.ActivateEvent(source, type, $.Date_Date$now().get$millisecondsSinceEpoch(), false, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ActivateEvent'});
  t1.ViewEvent$2(type, null);
  return t1;
};

$.EventSourceEvents$ = function(_ptr) {
  var t1 = new $.EventSourceEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'EventSourceEvents'});
  return t1;
};

$.BroadcastEvents$ = function(ptr) {
  var t1 = new $.BroadcastEvents(ptr, $.makeLiteralMap([]));
  $.setRuntimeTypeInfo(t1, {runtimeType: 'BroadcastEvents'});
  return t1;
};

$._Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
};

$._BroadcastListeners$ = function(_owner) {
  var t1 = new $._BroadcastListeners(_owner, $.Map_Map('dynamic', 'dynamic'));
  $.setRuntimeTypeInfo(t1, {runtimeType: '_BroadcastListeners'});
  return t1;
};

$._Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Style$ = function(content$, media, src) {
  var t1 = new $.Style(null, null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Style'});
  t1.Style$3$content$$media$src(content$, media, src);
  return t1;
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_StringBufferImpl'});
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.DivElement_DivElement = function() {
  return $.document().$dom_createElement$1('div');
};

$.RTCDataChannelEvents$ = function(_ptr) {
  var t1 = new $.RTCDataChannelEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'RTCDataChannelEvents'});
  return t1;
};

$.ListIterator$ = function(list, T) {
  var t1 = new $.ListIterator(0, list);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ListIterator<' + T + '>', 'T': T});
  return t1;
};

$.Panel$ = function() {
  var t1 = new $.Panel(null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Panel'});
  return t1;
};

$.SequenceIterator$ = function(_sequence, E) {
  var t1 = new $.SequenceIterator(_sequence, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SequenceIterator<' + E + '>', 'E': E});
  return t1;
};

$._ElementFactoryProvider_createElement_html = function(html) {
  var match, tag, parentTag, temp, element, t1;
  match = $.CTC12.firstMatch$1(html);
  if (!(match == null)) {
    tag = $.toLowerCase(match.group$1(1));
    parentTag = $.CTC13.containsKey$1(tag) === true ? $.CTC13.operator$index$1(tag) : 'div';
  } else {
    parentTag = 'div';
    tag = null;
  }
  temp = $.Element_Element$tag(parentTag);
  temp.set$innerHTML(html);
  if ($.eqB($.get$length(temp.get$elements()), 1))
    element = $.index(temp.get$elements(), 0);
  else if ($.eqB(parentTag, 'html') && $.eqB($.get$length(temp.get$elements()), 2)) {
    t1 = temp.get$elements();
    element = $.index(t1, $.eqB(tag, 'head') ? 0 : 1);
  } else
    throw $.$$throw($.ArgumentError$('HTML had ' + $.S($.get$length(temp.get$elements())) + ' ' + 'top level elements but 1 expected'));
  element.remove$0();
  return element;
};

$.IllegalArgumentException$ = function(argument) {
  var t1 = new $.IllegalArgumentException(argument);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'IllegalArgumentException'});
  return t1;
};

$.FadeOutEffect$ = function(element, easing, end, maxOpacity, minOpacity, period, start) {
  var t1, t2;
  t1 = $.FadeOutEffect_createAction(element, minOpacity, maxOpacity);
  t2 = $.HideEffect__hideEffectEnd(element, t1, end);
  if (typeof period !== 'number')
    throw $.iae(period);
  t1 = new $.FadeOutEffect(element, t1, easing, period, 1, 1 * period, start, null, t2, null, null, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FadeOutEffect'});
  t1.Motion$3$end$move$start(t2, null, start);
  return t1;
};

$.FadeOutEffect_createAction = function(element, min, max) {
  return new $.FadeOutEffect_createAction_anon(max, $.sub(max, min), element);
};

$.HideEffect__hideEffectEnd = function(element, action, end) {
  return new $.HideEffect__hideEffectEnd_anon(action, element, end);
};

$._SubviewSeq$ = function(_owner) {
  var t1 = new $._SubviewSeq(_owner);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_SubviewSeq'});
  return t1;
};

$._HLayout$ = function() {
  var t1 = new $._HLayout();
  $.setRuntimeTypeInfo(t1, {runtimeType: '_HLayout'});
  return t1;
};

$.ZoomInEffect$ = function(element, easing, end, fade, period, start) {
  var t1, t2;
  t1 = $.ZoomInEffect_createAction(element, fade);
  t2 = $.ShowEffect__showEffectStart(element, t1, start);
  if (typeof period !== 'number')
    throw $.iae(period);
  t1 = new $.ZoomInEffect(element, t1, easing, period, 1, 1 * period, t2, null, end, null, null, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ZoomInEffect'});
  t1.Motion$3$end$move$start(end, null, t2);
  return t1;
};

$.ZoomInEffect_createAction = function(element, fade) {
  return new $.ZoomInEffect_createAction_anon(fade, element);
};

$.MediaElementEvents$ = function(_ptr) {
  var t1 = new $.MediaElementEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'MediaElementEvents'});
  return t1;
};

$._VLayout$ = function() {
  var t1 = new $._VLayout();
  $.setRuntimeTypeInfo(t1, {runtimeType: '_VLayout'});
  return t1;
};

$.ZoomOutEffect_createAction = function(element, fade) {
  return new $.ZoomOutEffect_createAction_anon(element, fade);
};

$.DedicatedWorkerContextEvents$ = function(_ptr) {
  var t1 = new $.DedicatedWorkerContextEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'DedicatedWorkerContextEvents'});
  return t1;
};

$.ZoomOutEffect$ = function(element, easing, end, fade, period, start) {
  var t1, t2;
  t1 = $.ZoomOutEffect_createAction(element, fade);
  t2 = $.HideEffect__hideEffectEnd(element, t1, end);
  if (typeof period !== 'number')
    throw $.iae(period);
  t1 = new $.ZoomOutEffect(element, t1, easing, period, 1, 1 * period, start, null, t2, null, null, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ZoomOutEffect'});
  t1.Motion$3$end$move$start(t2, null, start);
  return t1;
};

$.SideInfo$ = function(profile, defaultValue, defaultInfo) {
  var t1 = new $.SideInfo(null, null, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SideInfo'});
  t1.SideInfo$3(profile, defaultValue, defaultInfo);
  return t1;
};

$.XMLUtil_encode = function(txt, maxlength, multiline, pre) {
  var tl, t1, t2, j, out, k, cc, enc, k0;
  if (typeof txt !== 'string' && (typeof txt !== 'object' || txt === null || txt.constructor !== Array && !txt.is$JavaScriptIndexingBehavior()))
    return $.XMLUtil_encode$bailout(1, txt, maxlength, multiline, pre);
  if (typeof maxlength !== 'number')
    return $.XMLUtil_encode$bailout(1, txt, maxlength, multiline, pre);
  tl = txt.length;
  t1 = pre === true;
  multiline = t1 || multiline === true;
  t2 = !multiline;
  if (t2 && maxlength > 0 && tl > maxlength) {
    j = maxlength;
    while (true) {
      if (j > 0) {
        t1 = j - 1;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= txt.length)
          throw $.ioore(t1);
        t2 = $.StringUtil_isChar(txt[t1], false, false, null, false, true);
        t1 = t2;
      } else
        t1 = false;
      if (!t1)
        break;
      --j;
    }
    return $.XMLUtil_encode($.S($.substring$2(txt, 0, j)) + '...', 0, multiline, pre);
  }
  out = $.StringBuffer_StringBuffer('');
  if (multiline || t1)
    for (k = 0, j = 0; j < tl; ++j) {
      if (j >= txt.length)
        throw $.ioore(j);
      cc = txt[j];
      if (typeof cc !== 'string')
        return $.XMLUtil_encode$bailout(2, txt, k, t1, j, multiline, cc, out, tl);
      enc = $.CTC14.operator$index$1(cc);
      if (!(enc == null)) {
        $.add$1($.add$1($.add$1($.add$1(out, $.substring$2(txt, k, j)), '&'), enc), ';');
        k0 = j + 1;
        k = k0;
      } else if (multiline && cc === '\n') {
        $.add$1($.add$1(out, $.substring$2(txt, k, j)), '<br/>\n');
        k0 = j + 1;
        k = k0;
      } else {
        if (t1)
          t2 = cc === ' ' || cc === '\x09';
        else
          t2 = false;
        if (t2) {
          $.add$1($.add$1(out, $.substring$2(txt, k, j)), '&nbsp;');
          if (cc === '\x09')
            $.add$1(out, '&nbsp;&nbsp;&nbsp;');
          k = j + 1;
        }
      }
    }
  else
    for (j = 0, k = 0; j < tl; ++j) {
      if (j >= txt.length)
        throw $.ioore(j);
      enc = $.CTC14.operator$index$1(txt[j]);
      if (!(enc == null)) {
        $.add$1($.add$1($.add$1($.add$1(out, $.substring$2(txt, k, j)), '&'), enc), ';');
        k0 = j + 1;
        k = k0;
      }
    }
  if (k === 0)
    return txt;
  if (k < tl)
    $.add$1(out, $.substring$1(txt, k));
  return $.toString(out);
};

$.SlideInEffect$ = function(element, direction, easing, end, fade, period, size, start) {
  var t1, t2;
  t1 = $.SlideInEffect_createAction(element, size, fade, direction);
  t2 = $.ShowEffect__showEffectStart(element, t1, start);
  if (typeof period !== 'number')
    throw $.iae(period);
  t1 = new $.SlideInEffect(element, t1, easing, period, 1, 1 * period, t2, null, end, null, null, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SlideInEffect'});
  t1.Motion$3$end$move$start(end, null, t2);
  return t1;
};

$.SlideInEffect_createAction = function(element, size, fade, dir) {
  var destSize;
  switch (dir) {
    case $.CTC37:
      destSize = !(size == null) ? size : $._SlideEffectUtil_widthOf(element);
      return new $.SlideInEffect_createAction_anon(destSize, element, $.add($._SlideEffectUtil_leftOf(element), destSize), fade);
    case $.CTC38:
      destSize = !(size == null) ? size : $._SlideEffectUtil_widthOf(element);
      return new $.SlideInEffect_createAction_anon0(element, destSize, fade);
    case $.CTC39:
      destSize = !(size == null) ? size : $._SlideEffectUtil_heightOf(element);
      return new $.SlideInEffect_createAction_anon1(element, destSize, fade, $.add($._SlideEffectUtil_topOf(element), destSize));
    case $.CTC36:
    default:
      destSize = !(size == null) ? size : $._SlideEffectUtil_heightOf(element);
      return new $.SlideInEffect_createAction_anon2(element, destSize, fade);
  }
};

$.ElementEvents$ = function(_ptr) {
  var t1 = new $.ElementEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ElementEvents'});
  return t1;
};

$.StringUtil_addCharCodes = function(src, diff) {
  var j, dst, t1;
  if (typeof diff !== 'number')
    return $.StringUtil_addCharCodes$bailout(1, src, diff);
  j = src.length;
  dst = $._ListImpl_List(j, 'dynamic');
  $.setRuntimeTypeInfo(dst, {runtimeType: 'List<dynamic>'});
  for (; --j, j >= 0;) {
    t1 = $.add($.charCodeAt(src, j), diff);
    if (j >= dst.length)
      throw $.ioore(j);
    dst[j] = t1;
  }
  return $._StringImpl_String$fromCharCodes(dst);
};

$.StringUtil_encodeId = function(v, prefix) {
  var sb, v2;
  if (typeof v !== 'number')
    return $.StringUtil_encodeId$bailout(1, v, prefix);
  sb = $.StringBuffer_StringBuffer('');
  if (!(prefix == null))
    $.add$1(sb, prefix);
  while (true) {
    v2 = $.mod(v, 37);
    if (v2 <= 9)
      $.add$1(sb, $.StringUtil_addCharCodes('0', v2));
    else
      $.add$1(sb, v2 === 36 ? '_' : $.StringUtil_addCharCodes('a', v2 - 10));
    v = $.tdiv(v, 37);
    if (!(v >= 1))
      break;
  }
  return $.toString(sb);
};

$.StringUtil_isChar = function(cc, digit, lower, match, upper, whitespace) {
  var v, t1;
  v = $.get$isEmpty(cc) === true ? 0 : $.charCodeAt(cc, 0);
  if (!(digit === true && $.geB(v, $.get$_CC_0()) && $.leB(v, $.get$_CC_9())))
    if (!(upper === true && $.geB(v, $.get$_CC_A()) && $.leB(v, $.get$_CC_Z())))
      if (!(lower === true && $.geB(v, $.get$_CC_a()) && $.leB(v, $.get$_CC_z()))) {
        if (whitespace === true)
          t1 = $.eqB(cc, ' ') || $.eqB(cc, '\x09') || $.eqB(cc, '\n') || $.eqB(cc, '\r');
        else
          t1 = false;
        if (!t1)
          t1 = !(match == null) && $.geB($.indexOf$1(match, cc), 0);
        else
          t1 = true;
      } else
        t1 = true;
    else
      t1 = true;
  else
    t1 = true;
  return t1;
};

$.SlideOutEffect$ = function(element, direction, easing, end, fade, period, start) {
  var t1, t2;
  t1 = $.SlideOutEffect_createAction(element, fade, direction);
  t2 = $.HideEffect__hideEffectEnd(element, t1, end);
  if (typeof period !== 'number')
    throw $.iae(period);
  t1 = new $.SlideOutEffect(element, t1, easing, period, 1, 1 * period, start, null, t2, null, null, 0);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'SlideOutEffect'});
  t1.Motion$3$end$move$start(t2, null, start);
  return t1;
};

$.AmountInfo$ = function(profile) {
  var t1 = new $.AmountInfo(null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'AmountInfo'});
  t1.AmountInfo$1(profile);
  return t1;
};

$.SlideOutEffect_createAction = function(element, fade, dir) {
  var size;
  switch (dir) {
    case $.CTC37:
      size = $.DOMAgent_DOMAgent(element).get$width();
      return new $.SlideOutEffect_createAction_anon(element, fade, $.DOMAgent_DOMAgent(element).get$offsetLeft(), size);
    case $.CTC38:
      return new $.SlideOutEffect_createAction_anon0(element, $.DOMAgent_DOMAgent(element).get$width(), fade);
    case $.CTC39:
      size = $.DOMAgent_DOMAgent(element).get$height();
      return new $.SlideOutEffect_createAction_anon1(element, $.DOMAgent_DOMAgent(element).get$offsetTop(), fade, size);
    case $.CTC36:
    default:
      return new $.SlideOutEffect_createAction_anon2(element, $.DOMAgent_DOMAgent(element).get$height(), fade);
  }
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof src !== 'string' && (typeof src !== 'object' || src === null || src.constructor !== Array && !src.is$JavaScriptIndexingBehavior()))
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i !== (i | 0))
        throw $.iae(i);
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.PeerConnection00Events$ = function(_ptr) {
  var t1 = new $.PeerConnection00Events(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'PeerConnection00Events'});
  return t1;
};

$._SlideEffectUtil_leftOf = function(element) {
  return $._SlideEffectUtil__valueOf(element, element.get$style().get$left(), new $._SlideEffectUtil_leftOf_anon());
};

$._SlideEffectUtil_topOf = function(element) {
  return $._SlideEffectUtil__valueOf(element, element.get$style().get$top(), new $._SlideEffectUtil_topOf_anon());
};

$._SlideEffectUtil_widthOf = function(element) {
  return $._SlideEffectUtil__valueOf(element, element.get$style().get$width(), new $._SlideEffectUtil_widthOf_anon());
};

$._SlideEffectUtil_heightOf = function(element) {
  return $._SlideEffectUtil__valueOf(element, element.get$style().get$height(), new $._SlideEffectUtil_heightOf_anon());
};

$._SlideEffectUtil__valueOf = function(elem, stxt, f) {
  return !(stxt == null) && $.endsWith(stxt, 'px') === true ? $.CSS_intOf(stxt, null) : f.call$1($.DOMAgent_DOMAgent(elem));
};

$.TypeImpl$ = function(typeName) {
  var t1 = new $.TypeImpl(typeName);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'TypeImpl'});
  return t1;
};

$.ViewConfig$ = function() {
  var t1 = new $.ViewConfig('v-', 'v_');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'ViewConfig'});
  t1.ViewConfig$0();
  return t1;
};

$.ViewUtil_getView = function(node) {
  var view;
  while (true) {
    view = $.index($.get$ViewUtil__views(), node);
    if (!(view == null))
      return view;
    node = node.get$parent();
    if (!(!(node == null) && !(typeof node === 'object' && node !== null && node.is$Document())))
      break;
  }
};

$.ViewUtil_appId = function() {
  var body, attrs, sval;
  if ($.ViewUtil__appId == null) {
    body = $.document().get$body();
    if (body == null)
      throw $.$$throw($.CTC15);
    attrs = body.get$dataAttributes();
    sval = $.index(attrs, 'data-rkAppCount');
    if (!(sval == null)) {
      $.ViewUtil__appId = $.int_parse(sval);
      $.indexSet(attrs, 'data-rkAppCount', $.add($.ViewUtil__appId, 1));
    } else {
      $.ViewUtil__appId = 0;
      $.indexSet(attrs, 'data-rkAppCount', '1');
    }
  }
  return $.ViewUtil__appId;
};

$._MeasurementRequest$ = function(computeValue, completer, T) {
  var t1 = new $._MeasurementRequest(computeValue, completer, null, false);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_MeasurementRequest<' + T + '>', 'T': T});
  return t1;
};

$._MeasurementScheduler__MeasurementScheduler$best = function(callback) {
  if (!!(window.MutationObserver || window.WebKitMutationObserver))
    return $._MutationObserverScheduler$(callback);
  return $._PostMessageScheduler$(callback);
};

$._MutationObserverScheduler$ = function(callback) {
  var t1 = new $._MutationObserverScheduler(null, null, false, callback);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_MutationObserverScheduler'});
  t1._MutationObserverScheduler$1(callback);
  return t1;
};

$.UIException$ = function(message) {
  var t1 = new $.UIException(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'UIException'});
  return t1;
};

$._PostMessageScheduler$ = function(callback) {
  var t1 = new $._PostMessageScheduler('DART-MEASURE', false, callback);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_PostMessageScheduler'});
  t1._PostMessageScheduler$1(callback);
  return t1;
};

$.FormatException$ = function(message) {
  var t1 = new $.FormatException(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'FormatException'});
  return t1;
};

$._DataAttributeMap$ = function($$dom_attributes) {
  var t1 = new $._DataAttributeMap($$dom_attributes);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_DataAttributeMap'});
  return t1;
};

$._CSSAgent$ = function(_node) {
  var t1 = new $._CSSAgent(_node);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_CSSAgent'});
  return t1;
};

$._MutationObserverFactoryProvider_createMutationObserver = function(callback) {
  callback = $.convertDartClosureToJS(callback, 2);
    var constructor =
        window.MutationObserver || window.WebKitMutationObserver ||
        window.MozMutationObserver;
    return new constructor(callback);
  
};

$._ElementAttributeMap$ = function(_element) {
  var t1 = new $._ElementAttributeMap(_element);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_ElementAttributeMap'});
  return t1;
};

$._CSSStyleDeclarationFactoryProvider_createCSSStyleDeclaration_css = function(css) {
  var style = $.Element_Element$tag('div').get$style();
  style.set$cssText(css);
  return style;
};

$.Set_Set = function(E) {
  return $._HashSetImpl$(E);
};

$.Set_Set$from = function(other, E) {
  return $._HashSetImpl__HashSetImpl$from(other, E);
};

$.Future_Future$immediate = function(value, T) {
  return $._FutureImpl__FutureImpl$immediate(value, T);
};

$.MapUtil_onDemand = function(creator) {
  return $._OnDemandMap$(creator, 'dynamic', 'dynamic');
};

$._OnDemandMap$ = function(_creator, K, V) {
  var t1 = new $._OnDemandMap(_creator, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_OnDemandMap<' + K + ', ' + V + '>', 'K': K, 'V': V});
  return t1;
};

$.CSSStyleDeclaration_CSSStyleDeclaration$css = function(css) {
  return $._CSSStyleDeclarationFactoryProvider_createCSSStyleDeclaration_css(css);
};

$.CSSStyleDeclaration_CSSStyleDeclaration = function() {
  return $.CSSStyleDeclaration_CSSStyleDeclaration$css('');
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  var t1 = new $.MetaInfo(_tag, _tags, _set);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'MetaInfo'});
  return t1;
};

$.DOMApplicationCacheEvents$ = function(_ptr) {
  var t1 = new $.DOMApplicationCacheEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'DOMApplicationCacheEvents'});
  return t1;
};

$._HashMapImpl$ = function(K, V) {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_HashMapImpl<' + K + ', ' + V + '>', 'K': K, 'V': V});
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.HashMap_HashMap = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$.NotificationEvents$ = function(_ptr) {
  var t1 = new $.NotificationEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'NotificationEvents'});
  return t1;
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  var t1 = new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'NoSuchMethodError'});
  return t1;
};

$.NoSuchMethodError_safeToString = function(object) {
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string')
    return '"' + $.S($.replaceAll($.replaceAll($.replaceAll($.replaceAll(object, '\\', '\\\\'), '\n', '\\n'), '\r', '\\r'), '"', '\\"')) + '"';
  return $.Primitives_objectToString(object);
};

$.PairInfo$ = function(profile, defaultValue) {
  var t1 = new $.PairInfo(null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'PairInfo'});
  t1.PairInfo$2(profile, defaultValue);
  return t1;
};

$.LinkedHashMap_LinkedHashMap = function(K, V) {
  return $._LinkedHashMapImpl$(K, V);
};

$.ListUtil_remove = function(list, obj) {
  var j;
  if (!(list == null)) {
    j = $.indexOf$1(list, obj);
    if ($.geB(j, 0)) {
      $.removeRange(list, j, 1);
      return true;
    }
  }
  return false;
};

$.ListUtil_rangeCheck = function(a, start, length$) {
  if (length$ < 0)
    throw $.$$throw($.IllegalArgumentException$('negative length ' + $.S(length$)));
  if ($.ltB(start, 0) || $.geB(start, $.get$length(a)))
    throw $.$$throw($.RangeError$(start));
  if ($.gtB($.add(start, length$), $.get$length(a)))
    throw $.$$throw($.RangeError$($.add(start, length$)));
};

$._LinkedHashMapImpl$ = function(K, V) {
  var t1 = new $._LinkedHashMapImpl(null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_LinkedHashMapImpl<' + K + ', ' + V + '>', 'K': K, 'V': V});
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.DialogInfo$ = function(cave, mask) {
  var t1 = new $.DialogInfo(cave, mask);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'DialogInfo'});
  return t1;
};

$._KeyValuePair$ = function(key, value, K, V) {
  var t1 = new $._KeyValuePair(key, value);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_KeyValuePair<' + K + ', ' + V + '>', 'K': K, 'V': V});
  return t1;
};

$.Browser$ = function() {
  var t1 = new $.Browser(null, null, false, false, false, false, false, false, false, false, false, false, null, null, null, null, null, null);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Browser'});
  t1.Browser$0();
  return t1;
};

$.Browser__versionOf = function(version, separator, exception) {
  var j, j0, t1;
  j = $.indexOf$1(version, separator);
  if ($.geB(j, 0)) {
    j0 = $.indexOf$2(version, separator, $.add(j, 1));
    if ($.geB(j0, 0))
      version = $.substring$2(version, 0, j0);
  }
  try {
    t1 = $.double_parse(version);
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return 1;
  }

};

$.Offset3d$ = function(x, y, z) {
  var t1 = new $.Offset3d(z, x, y);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'Offset3d'});
  return t1;
};

$.StackTrace$ = function(stack) {
  var t1 = new $.StackTrace(stack);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'StackTrace'});
  return t1;
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  var t1 = new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'JSSyntaxRegExp'});
  return t1;
};

$.StackOverflowError$ = function() {
  var t1 = new $.StackOverflowError();
  $.setRuntimeTypeInfo(t1, {runtimeType: 'StackOverflowError'});
  return t1;
};

$.RuntimeError$ = function(message) {
  var t1 = new $.RuntimeError(message);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'RuntimeError'});
  return t1;
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  $.regExpAttachGlobalNative(re);
  return re;
};

$.MutationObserver_MutationObserver = function(callback) {
  return $._MutationObserverFactoryProvider_createMutationObserver(callback);
};

$.WindowAgent_WindowAgent = function(w) {
  return !(w == null) ? $.WindowAgent$_as(w) : $._NullAgent$();
};

$._LocationWrapper$ = function(_ptr) {
  var t1 = new $._LocationWrapper(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_LocationWrapper'});
  return t1;
};

$.WindowAgent$_as = function(v) {
  var t1 = new $.WindowAgent(v);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'WindowAgent'});
  return t1;
};

$._LocationWrapper__get = function(p, m) {
  return p[m];
};

$._NullAgent$ = function() {
  var t1 = new $._NullAgent(null);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_NullAgent'});
  return t1;
};

$._LocationCrossFrame$ = function(_location) {
  var t1 = new $._LocationCrossFrame(_location);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_LocationCrossFrame'});
  return t1;
};

$._LocationCrossFrame__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrame$(location$);
};

$.MessagePortEvents$ = function(_ptr) {
  var t1 = new $.MessagePortEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'MessagePortEvents'});
  return t1;
};

$._AnchorOfNode$ = function(n) {
  var t1 = new $._AnchorOfNode($.DOMAgent_DOMAgent(n));
  $.setRuntimeTypeInfo(t1, {runtimeType: '_AnchorOfNode'});
  return t1;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  var t1 = new $._MatchImplementation(pattern, str, start, end, _groups);
  $.setRuntimeTypeInfo(t1, {runtimeType: '_MatchImplementation'});
  return t1;
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  var t1 = new $.IllegalJSRegExpException(_pattern, _errmsg);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'IllegalJSRegExpException'});
  return t1;
};

$.MediaStreamTrackListEvents$ = function(_ptr) {
  var t1 = new $.MediaStreamTrackListEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'MediaStreamTrackListEvents'});
  return t1;
};

$.MediaStreamTrackEvents$ = function(_ptr) {
  var t1 = new $.MediaStreamTrackEvents(_ptr);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'MediaStreamTrackEvents'});
  return t1;
};

$.EventListenerList$ = function(_ptr, _type) {
  var t1 = new $.EventListenerList(_ptr, _type);
  $.setRuntimeTypeInfo(t1, {runtimeType: 'EventListenerList'});
  return t1;
};

$.contains$1$bailout = function(state0, receiver, other) {
  var i;
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; $.ltB(i, $.get$length(receiver)); ++i)
      if ($.eqB(other, $.index(receiver, i)))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.StringUtil_addCharCodes$bailout = function(state0, src, diff) {
  var j, dst, t1;
  j = src.length;
  dst = $._ListImpl_List(j, 'dynamic');
  $.setRuntimeTypeInfo(dst, {runtimeType: 'List<dynamic>'});
  for (; --j, j >= 0;) {
    t1 = $.add($.charCodeAt(src, j), diff);
    if (j >= dst.length)
      throw $.ioore(j);
    dst[j] = t1;
  }
  return $._StringImpl_String$fromCharCodes(dst);
};

$.StringUtil_encodeId$bailout = function(state0, v, prefix) {
  var sb, v2;
  sb = $.StringBuffer_StringBuffer('');
  if (!(prefix == null))
    $.add$1(sb, prefix);
  L0:
    while (true) {
      v2 = $.mod(v, 37);
      if ($.leB(v2, 9))
        $.add$1(sb, $.StringUtil_addCharCodes('0', v2));
      else
        $.add$1(sb, $.eqB(v2, 36) ? '_' : $.StringUtil_addCharCodes('a', $.sub(v2, 10)));
      v = $.tdiv(v, 37);
      if (!$.geB(v, 1))
        break L0;
    }
  return $.toString(sb);
};

$.Selectors_tokenize$bailout = function(state0, source, tokens, len) {
  var i, pclz, curr, i0, c, clz;
  for (i = 0, pclz = 2, curr = null; $.ltB(i, len); pclz = clz, i = i0) {
    i0 = i + 1;
    c = $.substring$2(source, i, i0);
    clz = $.Selectors__getTokenClass($.charCodeAt(source, i));
    if (!(curr == null) && clz === pclz && clz !== 2)
      curr.extend$0();
    else {
      curr = $.Token$fromChar(c, i);
      tokens.push(curr);
    }
  }
  return tokens;
};

$._StringImpl__toJsStringArray$bailout = function(state0, strings) {
  var length$, i, string, array;
  $.checkNull(strings);
  length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$, 'dynamic');
    $.setRuntimeTypeInfo(array, {runtimeType: 'List<dynamic>'});
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j)
      $.indexSet(dst, j, $.index(src, i));
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j)
      $.indexSet(dst, j, $.index(src, i));
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Futures_wait$bailout = function(state0, futures, t1) {
  var completer, result, values, i, future;
  if ($.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CTC0, 'List');
  completer = $.Completer_Completer('List');
  result = completer.get$future();
  t1.remaining_1 = $.get$length(futures);
  values = $._ListImpl_List($.get$length(futures), 'dynamic');
  $.setRuntimeTypeInfo(values, {runtimeType: 'List<dynamic>'});
  for (i = 0; $.ltB(i, $.get$length(futures)); ++i) {
    future = $.index(futures, i);
    future.then$1(new $.Futures_wait_anon(i, result, completer, values, t1));
    future.handleException$1(new $.Futures_wait_anon0(future, result, completer));
  }
  return result;
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$.ViewIterator__isAllIds$bailout = function(state0, list, offset) {
  var t1;
  for (t1 = $.iterator(list); t1.get$hasNext() === true;)
    if ($.gtB($.get$length(t1.next$0().get$seqs()), offset))
      return false;
  return true;
};

$._ViewImpl_addToIdSpaceDown$bailout = function(state0, view, space, id, t1) {
  var vs, t2;
  if ($.gtB(t1, 0))
    space.bindFellow_$2(id, view);
  if (!(typeof view === 'object' && view !== null && !!view.is$IdSpace)) {
    vs = view.get$_virtIS();
    if (!(vs == null)) {
      view.set$_virtIS(null);
      for (t1 = $.iterator(vs.get$fellows()); t1.get$hasNext() === true;) {
        t2 = t1.next$0();
        space.bindFellow_$2(t2.get$id(), t2);
      }
    } else
      for (view = view.get$firstChild(); !(view == null); view = view.get$nextSibling())
        $._ViewImpl_addToIdSpaceDown(view, space);
  }
};

$._ViewImpl_removeFromIdSpaceDown$bailout = function(state0, view, space, id, t1) {
  if ($.gtB(t1, 0))
    space.bindFellow_$2(id, null);
  if (!(typeof view === 'object' && view !== null && !!view.is$IdSpace))
    for (view = view.get$firstChild(); !(view == null); view = view.get$nextSibling())
      $._ViewImpl_removeFromIdSpaceDown(view, space);
};

$.XMLUtil_encode$bailout = function(state0, env0, env1, env2, env3, env4, env5, env6, env7) {
  switch (state0) {
    case 1:
      pre = env3;
      multiline = env2;
      maxlength = env1;
      txt = env0;
      break;
    case 2:
      tl = env7;
      out = env6;
      cc = env5;
      multiline = env4;
      j = env3;
      t1 = env2;
      k = env1;
      txt = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (txt == null)
        return;
      tl = $.get$length(txt);
      t1 = pre === true;
      multiline = t1 || multiline === true;
      t2 = !multiline;
      if (t2 && $.gtB(maxlength, 0) && $.gtB(tl, maxlength)) {
        j = maxlength;
        while (true) {
          if (!($.gtB(j, 0) && $.StringUtil_isChar($.index(txt, $.sub(j, 1)), false, false, null, false, true)))
            break;
          j = $.sub(j, 1);
        }
        return $.XMLUtil_encode($.S($.substring$2(txt, 0, j)) + '...', 0, multiline, pre);
      }
      out = $.StringBuffer_StringBuffer('');
    case 2:
      var pre, multiline, maxlength, txt, tl, t1, t2, j, out, k, cc, enc, k0;
      if (state0 === 2 || state0 === 0 && (multiline || t1))
        switch (state0) {
          case 0:
            k = 0;
            j = 0;
          case 2:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    if (!$.ltB(j, tl))
                      break L0;
                    cc = $.index(txt, j);
                  case 2:
                    state0 = 0;
                    enc = $.CTC14.operator$index$1(cc);
                    if (!(enc == null)) {
                      $.add$1($.add$1($.add$1($.add$1(out, $.substring$2(txt, k, j)), '&'), enc), ';');
                      k0 = j + 1;
                      k = k0;
                    } else if (multiline && $.eqB(cc, '\n')) {
                      $.add$1($.add$1(out, $.substring$2(txt, k, j)), '<br/>\n');
                      k0 = j + 1;
                      k = k0;
                    } else {
                      if (t1)
                        t2 = $.eqB(cc, ' ') || $.eqB(cc, '\x09');
                      else
                        t2 = false;
                      if (t2) {
                        $.add$1($.add$1(out, $.substring$2(txt, k, j)), '&nbsp;');
                        if ($.eqB(cc, '\x09'))
                          $.add$1(out, '&nbsp;&nbsp;&nbsp;');
                        k = j + 1;
                      }
                    }
                    ++j;
                }
        }
      else
        for (j = 0, k = 0; $.ltB(j, tl); ++j) {
          enc = $.CTC14.operator$index$1($.index(txt, j));
          if (!(enc == null)) {
            $.add$1($.add$1($.add$1($.add$1(out, $.substring$2(txt, k, j)), '&'), enc), ';');
            k0 = j + 1;
            k = k0;
          }
        }
      if (k === 0)
        return txt;
      if ($.ltB(k, tl))
        $.add$1(out, $.substring$1(txt, k));
      return $.toString(out);
  }
};

$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$._completeMeasurementFutures.call$0 = $._completeMeasurementFutures;
$._completeMeasurementFutures.$name = "_completeMeasurementFutures";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$._timerFactory.call$3 = $._timerFactory;
$._timerFactory.$name = "_timerFactory";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC0 = Isolate.makeConstantList([]);
$.CTC11 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CTC0);
$.CTC42 = Isolate.makeConstantList([1, 0]);
$.CTC43 = Isolate.makeConstantList([2, 0]);
$.CTC44 = Isolate.makeConstantList([3, 0]);
$.CTC12 = new Isolate.$isolateProperties.JSSyntaxRegExp('<(\\w+)', false, false);
$.CTC45 = Isolate.makeConstantList([2, 4]);
$.CTC46 = Isolate.makeConstantList([0, 1]);
$.CTC47 = Isolate.makeConstantList([1, 4]);
$.CTC48 = Isolate.makeConstantList([0, 3]);
$.CTC7 = new Isolate.$isolateProperties.JSSyntaxRegExp('(safari)[ /]([\\w.]+)', false, false);
$.CTC2 = new Isolate.$isolateProperties.JSSyntaxRegExp('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
$.CTC49 = Isolate.makeConstantList([4, 2]);
$.CTC50 = Isolate.makeConstantList([3, 4]);
$.CTC51 = Isolate.makeConstantList([4, 1]);
$.CTC52 = Isolate.makeConstantList([3, 2]);
$.CTC53 = Isolate.makeConstantList([4, 3]);
$.CTC54 = Isolate.makeConstantList([2, 1]);
$.CTC24 = new Isolate.$isolateProperties.JSSyntaxRegExp('([-]?[0-9]+)', false, false);
$.CTC55 = Isolate.makeConstantList([3, 3]);
$.CTC18 = Isolate.makeConstantList(['input', 'textarea', 'select', 'button', 'a']);
$.CTC56 = Isolate.makeConstantList([0, 2]);
$.CTC57 = Isolate.makeConstantList([1, 2]);
$.CTC58 = Isolate.makeConstantList(['<', '>', '&', '"']);
$.CTC14 = new Isolate.$isolateProperties.ConstantMap(4, {'<': 'lt', '>': 'gt', '&': 'amp', '"': 'quot'}, Isolate.$isolateProperties.CTC58);
$.CTC36 = new Isolate.$isolateProperties.SlideDirection('North');
$.CTC30 = new Isolate.$isolateProperties.AmountType('none');
$.CTC59 = Isolate.makeConstantList([1, 1]);
$.CTC60 = Isolate.makeConstantList([2, 3]);
$.CTC61 = Isolate.makeConstantList([3, 1]);
$.CTC29 = new Isolate.$isolateProperties.AmountType('ratio');
$.CTC28 = new Isolate.$isolateProperties.AmountType('flex');
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC0);
$.CTC62 = Isolate.makeConstantList([2, 2]);
$.CTC63 = Isolate.makeConstantList([1, 3]);
$.CTC64 = Isolate.makeConstantList(['childList', 'attributes', 'characterData', 'subtree', 'attributeOldValue', 'characterDataOldValue']);
$.CTC65 = Isolate.makeConstantList(['north start', 'north center', 'north end', 'south start', 'south center', 'south end', 'west start', 'west center', 'west end', 'east start', 'east center', 'east end', 'top left', 'top center', 'top right', 'center left', 'center center', 'center right', 'bottom left', 'bottom center', 'bottom right']);
$.CTC15 = new Isolate.$isolateProperties.UIException('document not ready yet');
$.CTC22 = new Isolate.$isolateProperties._AnchorOfRoot();
$.CTC31 = new Isolate.$isolateProperties.AmountType('content');
$.CTC23 = new Isolate.$isolateProperties.ConstantMap(21, {'north start': Isolate.$isolateProperties.CTC42, 'north center': Isolate.$isolateProperties.CTC43, 'north end': Isolate.$isolateProperties.CTC44, 'south start': Isolate.$isolateProperties.CTC47, 'south center': Isolate.$isolateProperties.CTC45, 'south end': Isolate.$isolateProperties.CTC50, 'west start': Isolate.$isolateProperties.CTC46, 'west center': Isolate.$isolateProperties.CTC56, 'west end': Isolate.$isolateProperties.CTC48, 'east start': Isolate.$isolateProperties.CTC51, 'east center': Isolate.$isolateProperties.CTC49, 'east end': Isolate.$isolateProperties.CTC53, 'top left': Isolate.$isolateProperties.CTC59, 'top center': Isolate.$isolateProperties.CTC54, 'top right': Isolate.$isolateProperties.CTC61, 'center left': Isolate.$isolateProperties.CTC57, 'center center': Isolate.$isolateProperties.CTC62, 'center right': Isolate.$isolateProperties.CTC52, 'bottom left': Isolate.$isolateProperties.CTC63, 'bottom center': Isolate.$isolateProperties.CTC60, 'bottom right': Isolate.$isolateProperties.CTC55}, Isolate.$isolateProperties.CTC65);
$.CTC33 = new Isolate.$isolateProperties._AnchorOfPoint();
$.CTC5 = new Isolate.$isolateProperties.JSSyntaxRegExp('(webkit)[ /]([\\w.]+)', false, false);
$.CTC1 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC41 = new Isolate.$isolateProperties.Object();
$.CTC20 = Isolate.makeConstantList(['abort', 'click', 'dblclickdrag', 'dragEnd', 'dragEnter', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'error', 'keyDown', 'keyPress', 'keyUp', 'load', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'mouseWheel', 'reset', 'scroll', 'select', 'submit', 'unload']);
$.CTC17 = new Isolate.$isolateProperties.JSSyntaxRegExp('^#[_a-zA-Z]\\w*$', false, false);
$.CTC21 = new Isolate.$isolateProperties.IllegalArgumentException('null');
$.CTC66 = Isolate.makeConstantList(['body', 'head', 'caption', 'td', 'colgroup', 'col', 'tr', 'tbody', 'tfoot', 'thead', 'track']);
$.CTC32 = new Isolate.$isolateProperties.UIException('\'content\' not allowed in tile layout');
$.CTC39 = new Isolate.$isolateProperties.SlideDirection('South');
$.CTC3 = new Isolate.$isolateProperties.JSSyntaxRegExp('android[ /]([\\w.]+)', false, false);
$.CTC35 = new Isolate.$isolateProperties._Random();
$.CTC9 = new Isolate.$isolateProperties.JSSyntaxRegExp('(opera)(?:.*version)?[ /]([\\w.]+)', false, false);
$.CTC10 = new Isolate.$isolateProperties.JSSyntaxRegExp('(mozilla)(?:.*? rv:([\\w.]+))?', false, false);
$.CTC4 = new Isolate.$isolateProperties.JSSyntaxRegExp('os[ /]([\\w_]+) like mac os', false, false);
$.CTC6 = new Isolate.$isolateProperties.JSSyntaxRegExp('(chrome)[ /]([\\w.]+)', false, false);
$.CTC37 = new Isolate.$isolateProperties.SlideDirection('East');
$.CTC25 = new Isolate.$isolateProperties.ConstantMap(6, {'childList': true, 'attributes': true, 'characterData': true, 'subtree': true, 'attributeOldValue': true, 'characterDataOldValue': true}, Isolate.$isolateProperties.CTC64);
$.CTC8 = new Isolate.$isolateProperties.JSSyntaxRegExp('(msie) ([\\w.]+)', false, false);
$.CTC40 = new Isolate.$isolateProperties.UIException('The anchor can\'t be itself.');
$.CTC13 = new Isolate.$isolateProperties.ConstantMap(11, {'body': 'html', 'head': 'html', 'caption': 'table', 'td': 'tr', 'colgroup': 'table', 'col': 'colgroup', 'tr': 'tbody', 'tbody': 'table', 'tfoot': 'table', 'thead': 'table', 'track': 'audio'}, Isolate.$isolateProperties.CTC66);
$.CTC34 = Isolate.makeConstantList(['animation', 'animation-delay', 'animation-direction', 'animation-duration', 'animation-fill-mode', 'animation-iteration-count', 'animation-name', 'animation-play-state', 'animation-timing-function', 'appearance', 'backface-visibility', 'background-composite', 'border-after', 'border-after-color', 'border-after-style', 'border-after-width', 'border-before', 'border-before-color', 'border-before-style', 'border-before-width', 'border-end', 'border-end-color', 'border-end-style', 'border-end-width', 'border-fit', 'border-horizontal-spacing', 'border-start', 'border-start-color', 'border-start-style', 'border-start-width', 'border-vertical-spacing', 'box-align', 'box-direction', 'box-flex', 'box-flex-group', 'box-lines', 'box-ordinal-group', 'box-orient', 'box-pack', 'box-reflect', 'color-correction', 'column-break-after', 'column-break-before', 'column-break-inside', 'column-count', 'column-gap', 'column-rule', 'column-rule-color', 'column-rule-style', 'column-rule-width', 'column-span', 'column-width', 'columns', 'filter', 'flex-align', 'flex-flow', 'flex-order', 'flex-pack', 'flow-from', 'flow-into', 'font-feature-settings', 'font-size-delta', 'font-smoothing', 'highlight', 'hyphenate-character', 'hyphenate-limit-after', 'hyphenate-limit-before', 'hyphenate-limit-lines', 'hyphens', 'line-box-contain', 'line-break', 'line-clamp', 'locale', 'logical-height', 'logical-width', 'margin-after', 'margin-after-collapse', 'margin-before', 'margin-before-collapse', 'margin-bottom-collapse', 'margin-collapse', 'margin-end', 'margin-start', 'margin-top-collapse', 'marquee', 'marquee-direction', 'marquee-increment', 'marquee-repetition', 'marquee-speed', 'marquee-style', 'mask', 'mask-attachment', 'mask-box-image', 'mask-box-image-outset', 'mask-box-image-repeat', 'mask-box-image-slice', 'mask-box-image-source', 'mask-box-image-width', 'mask-clip', 'mask-composite', 'mask-image', 'mask-origin', 'mask-position', 'mask-position-x', 'mask-position-y', 'mask-repeat', 'mask-repeat-x', 'mask-repeat-y', 'mask-size', 'match-nearest-mail-blockquote-color', 'max-logical-height', 'max-logical-width', 'min-logical-height', 'min-logical-width', 'nbsp-mode', 'padding-after', 'padding-before', 'padding-end', 'padding-start', 'perspective', 'perspective-origin', 'perspective-origin-x', 'perspective-origin-y', 'region-break-after', 'region-break-before', 'region-break-inside', 'region-overflow', 'rtl-ordering', 'tap-highlight-color', 'text-combine', 'text-decorations-in-effect', 'text-emphasis', 'text-emphasis-color', 'text-emphasis-position', 'text-emphasis-style', 'text-fill-color', 'text-orientation', 'text-security', 'text-size-adjust', 'text-stroke', 'text-stroke-color', 'text-stroke-width', 'transform', 'transform-origin', 'transform-origin-x', 'transform-origin-y', 'transform-origin-z', 'transform-style', 'transition', 'transition-delay', 'transition-duration', 'transition-property', 'transition-timing-function', 'user-drag', 'user-modify', 'user-select', 'wrap-shape', 'writing-mode']);
$.CTC16 = Isolate.makeConstantList(['focus', 'blur']);
$.CTC27 = new Isolate.$isolateProperties.AmountType('fixed');
$.CTC19 = new Isolate.$isolateProperties.UIException('listener required');
$.CTC26 = new Isolate.$isolateProperties._ExceptionImplementation('Incorrect number or type of arguments');
$.CTC38 = new Isolate.$isolateProperties.SlideDirection('West');
$.Selectors_STATE_PRE_COMB = 3;
$.Selectors_STATE_POST_SEPR = 17;
$.Selectors_STATE_IN_ID = 5;
$.Selectors_STATE_IN_CLASS = 6;
$.Selectors_STATE_PRE_PSDOCLS_PARAM = 8;
$.Selectors_STATE_IN_PSDOCLS_PARAM = 15;
$.Selectors_STATE_POST_PSDOCLS_PARAM = 16;
$._noBubEvts = Isolate.$isolateProperties.CTC16;
$.Selectors_STATE_PRE_ATTR_NAME = 10;
$.Motion__MOTION_STATE_RUNNING = 1;
$.Selectors_TOKEN_CLASS_WHITESPACE = 1;
$.Selectors_TOKEN_CLASS_OTHER = 2;
$._domEvtDisps = null;
$._$rootClasses = null;
$.Selectors_STATE_IN_PSDOCLS = 7;
$._cachedBrowserPrefix = null;
$.AmountType_FLEX = Isolate.$isolateProperties.CTC28;
$.AmountType_FIXED = Isolate.$isolateProperties.CTC27;
$.AmountType_RATIO = Isolate.$isolateProperties.CTC29;
$.AmountType_CONTENT = Isolate.$isolateProperties.CTC31;
$.Selectors_TOKEN_CLASS_LITERAL = 0;
$.Primitives_hashCodeSeed = 0;
$.AmountType_NONE = Isolate.$isolateProperties.CTC30;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.Token_TYPE_IDENTIFIER = 1;
$.Token_TYPE_WHITESPACE = 3;
$.Token_TYPE_UNIVERSAL = 2;
$.Motion__MOTION_STATE_INIT = 0;
$.Token_TYPE_SELECTOR_SEPARATOR = 5;
$.Token_TYPE_CBN_CHILD = 7;
$.Token_TYPE_CBN_ADJACENT_SIBLING = 8;
$.Token_TYPE_CBN_GENERAL_SIBLING = 9;
$.Token_TYPE_NTN_ID = 10;
$.Token_TYPE_NTN_CLASS = 11;
$.Token_TYPE_NTN_PSDOCLS = 12;
$.Token_TYPE_OP_EQUAL = 13;
$.CSS__nsnms = null;
$.EMPTY_LIST = Isolate.$isolateProperties.CTC0;
$.Token_TYPE_SINGLE_QUOTE = 17;
$.Token_TYPE_DOUBLE_QUOTE = 18;
$.Token_TYPE_OPEN_BRACKET = 19;
$.Token_TYPE_CLOSE_BRACKET = 20;
$.Token_TYPE_OPEN_PAREN = 21;
$.Token_TYPE_CLOSE_PAREN = 22;
$.Token_TYPE_UNKNOWN_CHAR = -1;
$.Motion__MOTION_STATE_PAUSED = 2;
$.ViewUtil__appId = null;
$.ViewUtil__APP_COUNT = 'data-rkAppCount';
$.Browser__rsafari = Isolate.$isolateProperties.CTC7;
$.Browser__rchrome = Isolate.$isolateProperties.CTC6;
$.Browser__rmsie = Isolate.$isolateProperties.CTC8;
$.Browser__rmozilla = Isolate.$isolateProperties.CTC10;
$.Browser__ropera = Isolate.$isolateProperties.CTC9;
$.Browser__rios = Isolate.$isolateProperties.CTC4;
$.Browser__randroid = Isolate.$isolateProperties.CTC3;
$.Browser__rwebkit = Isolate.$isolateProperties.CTC5;
$.CSS__reNum = Isolate.$isolateProperties.CTC24;
$._anchorOfRoot = Isolate.$isolateProperties.CTC22;
$._pendingRequests = null;
$._pendingMeasurementFrameCallbacks = null;
$._measurementScheduler = null;
$._locators = Isolate.$isolateProperties.CTC23;
$._$anchorXLocators = null;
$._$anchorYLocators = null;
$._reNum = Isolate.$isolateProperties.CTC24;
$._ViewImpl__inited = false;
$._ViewImpl__$onTouchStart = null;
$._ReceivePortImpl__nextFreeId = 1;
$._getTypeNameOf = null;
$.SimpleSelectorSequence_COMB_DESCENDANT = 0;
$.SimpleSelectorSequence_COMB_CHILD = 1;
$.SimpleSelectorSequence_COMB_ADJACENT_SIBLING = 2;
$.SimpleSelectorSequence_COMB_GENERAL_SIBLING = 3;
$.View__uuidNext = 0;
$._TimerFactory__factory = null;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC1;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.View__mntCnt = 0;
$.SlideDirection_NORTH = Isolate.$isolateProperties.CTC36;
$.SlideDirection_SOUTH = Isolate.$isolateProperties.CTC39;
$.SlideDirection_WEST = Isolate.$isolateProperties.CTC38;
$.SlideDirection_EAST = Isolate.$isolateProperties.CTC37;
$.Selectors_STATE_PRE_SLCT = 1;
$.XMLUtil__encs = Isolate.$isolateProperties.CTC14;
$.Selectors_STATE_IN_SLCT = 9;
$.Selectors_STATE_POST_SLCT = 14;
$.Selectors_STATE_POST_COMB = 2;
Isolate.$lazy($, 'broadcaster', 'broadcaster', 'get$broadcaster', function() {
  return $._Broadcaster$();
});
Isolate.$lazy($, '_afters', 'View__afters', 'get$View__afters', function() {
  return [];
});
Isolate.$lazy($, 'rootViews', 'rootViews', 'get$rootViews', function() {
  var t1 = $._ListImpl_List(null, 'dynamic');
  $.setRuntimeTypeInfo(t1, {runtimeType: 'List<dynamic>'});
  return t1;
});
Isolate.$lazy($, 'dialogInfos', 'dialogInfos', 'get$dialogInfos', function() {
  return $.Map_Map('dynamic', 'dynamic');
});
Isolate.$lazy($, 'browser', 'browser', 'get$browser', function() {
  return $.Browser$();
});
Isolate.$lazy($, 'viewConfig', 'viewConfig', 'get$viewConfig', function() {
  return $.ViewConfig$();
});
Isolate.$lazy($, '_animator', '_animator', 'get$_animator', function() {
  return $.Animator_Animator();
});
Isolate.$lazy($, 'prefix', 'CSS_prefix', 'get$CSS_prefix', function() {
  if ($.get$browser().get$webkit() === true)
    var t1 = '-webkit-';
  else if ($.get$browser().get$msie() === true)
    t1 = '-ms-';
  else if ($.get$browser().get$firefox() === true)
    t1 = '-moz-';
  else
    t1 = $.get$browser().get$opera() === true ? '-o-' : '';
  return t1;
});
Isolate.$lazy($, 'layoutManager', 'layoutManager', 'get$layoutManager', function() {
  return $.LayoutManager$();
});
Isolate.$lazy($, '_CC_0', '_CC_0', 'get$_CC_0', function() {
  return $.charCodeAt('0', 0);
});
Isolate.$lazy($, '_CC_9', '_CC_9', 'get$_CC_9', function() {
  return $.add($.get$_CC_0(), 9);
});
Isolate.$lazy($, '_CC_A', '_CC_A', 'get$_CC_A', function() {
  return $.charCodeAt('A', 0);
});
Isolate.$lazy($, '_CC_Z', '_CC_Z', 'get$_CC_Z', function() {
  return $.add($.get$_CC_A(), 25);
});
Isolate.$lazy($, '_CC_a', '_CC_a', 'get$_CC_a', function() {
  return $.charCodeAt('a', 0);
});
Isolate.$lazy($, '_CC_z', '_CC_z', 'get$_CC_z', function() {
  return $.add($.get$_CC_a(), 25);
});
Isolate.$lazy($, '_inpTags', '_inpTags', 'get$_inpTags', function() {
  return $.Set_Set$from($.CTC18, 'dynamic');
});
Isolate.$lazy($, 'runtimeTypeCache', 'runtimeTypeCache', 'get$runtimeTypeCache', function() {
  return {};
});
Isolate.$lazy($, '_views', 'ViewUtil__views', 'get$ViewUtil__views', function() {
  return $.Map_Map('dynamic', 'dynamic');
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''] || [];
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method !== '') {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$Location: function() { return false; },
 is$MouseEvent: function() { return false; },
 is$Element: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$UIEvent: function() { return false; },
 is$Collection: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$ImageData: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 is$KeyboardEvent: function() { return false; },
 is$Document: function() { return false; },
 is$List: function() { return false; },
 is$Node: function() { return false; },
 is$Map: function() { return false; },
 is$File: function() { return false; },
 is$InputElement: function() { return false; },
 is$Blob: function() { return false; },
 is$_FileList: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); }
});

$.$defineNativeClass('HTMLElement', {"": []
});

$.$defineNativeClass('AbstractWorker', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.AbstractWorkerEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('AnalyserNode', {"": []
});

$.$defineNativeClass('HTMLAnchorElement', {"": ["href?", "name=", "target=", "type="],
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', {"": ["name?"]
});

$.$defineNativeClass('WebKitAnimationEvent', {"": []
});

$.$defineNativeClass('HTMLAppletElement', {"": ["align?", "height=", "name=", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {"": ["href?", "target="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', {"": [],
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {"": [],
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"": ["name?", "value="]
});

$.$defineNativeClass('AudioBuffer', {"": ["length?"]
});

$.$defineNativeClass('AudioBufferSourceNode', {"": [],
 start$3: function(when, grainOffset, grainDuration) {
  var t1, t2;
  t1 = $ === grainOffset;
  if (t1)
    grainOffset = null;
  t1 = !t1;
  t2 = $ === grainDuration;
  if (t2)
    grainDuration = null;
  t2 = !t2;
  if (!!this.start)
    if (t2)
      this.start(when, grainOffset, grainDuration);
    else if (t1)
      this.start(when, grainOffset);
    else
      this.start(when);
  else if (t2)
    this.noteOn(when, grainOffset, grainDuration);
  else if (t1)
    this.noteOn(when, grainOffset);
  else
    this.noteOn(when);
},
 get$start: function() { return new $.BoundClosure0(this, 'start$3'); }
});

$.$defineNativeClass('AudioContext', {"": [],
 get$on: function() {
  return $.AudioContextEvents$(this);
}
});

$.$defineNativeClass('AudioDestinationNode', {"": []
});

$.$defineNativeClass('HTMLAudioElement', {"": []
});

$.$defineNativeClass('AudioGain', {"": []
});

$.$defineNativeClass('AudioListener', {"": []
});

$.$defineNativeClass('AudioNode', {"": []
});

$.$defineNativeClass('AudioParam', {"": ["name?", "value="]
});

$.$defineNativeClass('AudioProcessingEvent', {"": []
});

$.$defineNativeClass('AudioSourceNode', {"": []
});

$.$defineNativeClass('HTMLBRElement', {"": [],
 clear$0: function() { return this.clear.call$0(); },
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('BarInfo', {"": ["visible?"]
});

$.$defineNativeClass('HTMLBaseElement', {"": ["href?", "target="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {"": ["color!", "size?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('BatteryManager', {"": [],
 get$on: function() {
  return $.BatteryManagerEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BeforeLoadEvent', {"": []
});

$.$defineNativeClass('BiquadFilterNode', {"": ["type="]
});

$.$defineNativeClass('Blob', {"": ["size?", "type?"],
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {"": ["background!"],
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"": ["name=", "type=", "value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('CDATASection', {"": []
});

$.$defineNativeClass('CSSCharsetRule', {"": []
});

$.$defineNativeClass('CSSFontFaceRule', {"": ["style?"]
});

$.$defineNativeClass('CSSImportRule', {"": ["href?"]
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"": ["style?"]
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"": ["name="]
});

$.$defineNativeClass('WebKitCSSMatrix', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSMediaRule', {"": []
});

$.$defineNativeClass('CSSPageRule', {"": ["style?"]
});

$.$defineNativeClass('CSSPrimitiveValue', {"": []
});

$.$defineNativeClass('CSSRule', {"": ["cssText!", "type?"]
});

$.$defineNativeClass('CSSStyleDeclaration', {"": ["cssText!", "length?"],
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 setProperty$2: function(propertyName,value) {
  return this.setProperty$3(propertyName,value,null)
},
 set$background: function(value) {
  this.setProperty$3('background', value, '');
},
 set$border: function(value) {
  this.setProperty$3('border', value, '');
},
 get$borderBottom: function() {
  return this.getPropertyValue$1('border-bottom');
},
 get$borderBottomWidth: function() {
  return this.getPropertyValue$1('border-bottom-width');
},
 set$borderColor: function(value) {
  this.setProperty$3('border-color', value, '');
},
 get$borderLeft: function() {
  return this.getPropertyValue$1('border-left');
},
 get$borderLeftWidth: function() {
  return this.getPropertyValue$1('border-left-width');
},
 set$borderRadius: function(value) {
  this.setProperty$3('border-radius', value, '');
},
 get$borderRight: function() {
  return this.getPropertyValue$1('border-right');
},
 get$borderRightWidth: function() {
  return this.getPropertyValue$1('border-right-width');
},
 get$borderTop: function() {
  return this.getPropertyValue$1('border-top');
},
 get$borderTopWidth: function() {
  return this.getPropertyValue$1('border-top-width');
},
 get$bottom: function() {
  return this.getPropertyValue$1('bottom');
},
 set$boxSizing: function(value) {
  this.setProperty$3('box-sizing', value, '');
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 set$color: function(value) {
  this.setProperty$3('color', value, '');
},
 get$display: function() {
  return this.getPropertyValue$1('display');
},
 set$display: function(value) {
  this.setProperty$3('display', value, '');
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 set$fontSize: function(value) {
  this.setProperty$3('font-size', value, '');
},
 get$height: function() {
  return this.getPropertyValue$1('height');
},
 set$height: function(value) {
  this.setProperty$3('height', value, '');
},
 get$left: function() {
  return this.getPropertyValue$1('left');
},
 set$left: function(value) {
  this.setProperty$3('left', value, '');
},
 set$lineHeight: function(value) {
  this.setProperty$3('line-height', value, '');
},
 get$marginBottom: function() {
  return this.getPropertyValue$1('margin-bottom');
},
 get$marginLeft: function() {
  return this.getPropertyValue$1('margin-left');
},
 get$marginRight: function() {
  return this.getPropertyValue$1('margin-right');
},
 get$marginTop: function() {
  return this.getPropertyValue$1('margin-top');
},
 get$mask: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'mask');
},
 get$maxHeight: function() {
  return this.getPropertyValue$1('max-height');
},
 get$maxWidth: function() {
  return this.getPropertyValue$1('max-width');
},
 get$minHeight: function() {
  return this.getPropertyValue$1('min-height');
},
 get$minWidth: function() {
  return this.getPropertyValue$1('min-width');
},
 set$opacity: function(value) {
  this.setProperty$3('opacity', value, '');
},
 get$overflow: function() {
  return this.getPropertyValue$1('overflow');
},
 set$overflow: function(value) {
  this.setProperty$3('overflow', value, '');
},
 get$paddingBottom: function() {
  return this.getPropertyValue$1('padding-bottom');
},
 get$paddingLeft: function() {
  return this.getPropertyValue$1('padding-left');
},
 get$paddingRight: function() {
  return this.getPropertyValue$1('padding-right');
},
 get$paddingTop: function() {
  return this.getPropertyValue$1('padding-top');
},
 get$position: function() {
  return this.getPropertyValue$1('position');
},
 set$position: function(value) {
  this.setProperty$3('position', value, '');
},
 get$resize: function() {
  return this.getPropertyValue$1('resize');
},
 get$right: function() {
  return this.getPropertyValue$1('right');
},
 get$size: function() {
  return this.getPropertyValue$1('size');
},
 get$top: function() {
  return this.getPropertyValue$1('top');
},
 set$top: function(value) {
  this.setProperty$3('top', value, '');
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'transform');
},
 set$transform: function(value) {
  this.setProperty$3($.S($._browserPrefix()) + 'transform', value, '');
},
 get$visibility: function() {
  return this.getPropertyValue$1('visibility');
},
 set$visibility: function(value) {
  this.setProperty$3('visibility', value, '');
},
 get$whiteSpace: function() {
  return this.getPropertyValue$1('white-space');
},
 set$whiteSpace: function(value) {
  this.setProperty$3('white-space', value, '');
},
 get$width: function() {
  return this.getPropertyValue$1('width');
},
 set$width: function(value) {
  this.setProperty$3('width', value, '');
},
 get$zIndex: function() {
  return this.getPropertyValue$1('z-index');
},
 set$zIndex: function(value) {
  this.setProperty$3('z-index', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', {"": ["style?"]
});

$.$defineNativeClass('CSSStyleSheet', {"": []
});

$.$defineNativeClass('WebKitCSSTransformValue', {"": []
});

$.$defineNativeClass('CSSUnknownRule', {"": []
});

$.$defineNativeClass('CSSValue', {"": ["cssText!"]
});

$.$defineNativeClass('HTMLCanvasElement', {"": ["height=", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('CanvasGradient', {"": []
});

$.$defineNativeClass('CanvasPattern', {"": []
});

$.$defineNativeClass('CanvasRenderingContext', {"": []
});

$.$defineNativeClass('CanvasRenderingContext2D', {"": [],
 transform$6: function(m11, m12, m21, m22, dx, dy) {
  return this.transform(m11,m12,m21,m22,dx,dy);
},
 get$transform: function() { return new $.BoundClosure1(this, 'transform$6'); }
});

$.$defineNativeClass('ChannelMergerNode', {"": []
});

$.$defineNativeClass('ChannelSplitterNode', {"": []
});

$.$defineNativeClass('CharacterData', {"": ["data=", "length?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"": ["bottom?", "height?", "left?", "right?", "top?", "width?"]
});

$.$defineNativeClass('Clipboard', {"": []
});

$.$defineNativeClass('CloseEvent', {"": []
});

$.$defineNativeClass('Comment', {"": []
});

$.$defineNativeClass('CompositionEvent', {"": ["data?"]
});

Console = (typeof console == 'undefined' ? {} : console);
Console.group$1 = function(arg) {
  return this.group(arg);
};
Console.profile$1 = function(title) {
  return this.profile(title);
};
Console.get$profile = function() { return new $.BoundClosure(this, 'profile$1'); };
$.$defineNativeClass('HTMLContentElement', {"": [],
 select$1: function(arg0) { return this.select.call$1(arg0); },
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', {"": []
});

$.$defineNativeClass('Coordinates', {"": []
});

$.$defineNativeClass('Counter', {"": []
});

$.$defineNativeClass('Crypto', {"": []
});

$.$defineNativeClass('CustomEvent', {"": []
});

$.$defineNativeClass('HTMLDListElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', {"": [],
 get$on: function() {
  return $.DOMApplicationCacheEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMError', {"": ["name?"]
});

$.$defineNativeClass('DOMException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', {"": ["name?"]
});

$.$defineNativeClass('DOMFileSystemSync', {"": ["name?"]
});

$.$defineNativeClass('DOMImplementation', {"": []
});

$.$defineNativeClass('MimeType', {"": ["type?"]
});

$.$defineNativeClass('MimeTypeArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'DOMMimeType');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMParser', {"": []
});

$.$defineNativeClass('Plugin', {"": ["length?", "name?"]
});

$.$defineNativeClass('PluginArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'DOMPlugin');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Selection', {"": ["type?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"": ["value="]
});

$.$defineNativeClass('DOMTokenList', {"": ["length?"],
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', {"": ["type?"]
});

$.$defineNativeClass('DataTransferItemList', {"": ["length?"],
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', {"": []
});

$.$defineNativeClass('Database', {"": []
});

$.$defineNativeClass('DatabaseSync', {"": []
});

$.$defineNativeClass('DedicatedWorkerContext', {"": [],
 get$on: function() {
  return $.DedicatedWorkerContextEvents$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('DelayNode', {"": []
});

$.$defineNativeClass('HTMLDetailsElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('DeviceMotionEvent', {"": []
});

$.$defineNativeClass('DeviceOrientationEvent', {"": []
});

$.$defineNativeClass('HTMLDirectoryElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('DirectoryEntry', {"": []
});

$.$defineNativeClass('DirectoryEntrySync', {"": []
});

$.$defineNativeClass('DirectoryReader', {"": []
});

$.$defineNativeClass('DirectoryReaderSync', {"": []
});

$.$defineNativeClass('HTMLDivElement', {"": ["align?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {"": ["body?"],
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.CTC17.hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
},
 is$Document: function() { return true; }
});

$.$defineNativeClass('DocumentFragment', {"": [],
 get$elements: function() {
  if (this._elements == null)
    this._elements = $._FilteredElementList$(this);
  return this._elements;
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 set$innerHTML: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHTML')) {
  {
  var e, nodes;
  $.clear(this.get$nodes());
  e = $.Element_Element$tag('div');
  e.set$innerHTML(value);
  nodes = $._ListImpl_List$from(e.get$nodes(), 'dynamic');
  $.setRuntimeTypeInfo(nodes, {runtimeType: 'List<dynamic>'});
  $.addAll(this.get$nodes(), nodes);
}
  } else {
    return Object.prototype.set$innerHTML.call(this, value);
  }

},
 get$hidden: function() {
  return false;
},
 get$id: function() {
  return '';
},
 get$tagName: function() {
  return '';
},
 get$nextElementSibling: function() {
  return;
},
 get$offsetParent: function() {
  return;
},
 get$parent: function() {
  return;
},
 get$attributes: function() {
  return $.CTC11;
},
 get$classes: function() {
  return $._FrozenCssClassSet$();
},
 get$dataAttributes: function() {
  return $.CTC11;
},
 get$style: function() {
  return $.Element_Element$tag('div').get$style();
},
 get$computedStyle: function() {
  return $._emptyStyleFuture();
},
 click$0: function() {
},
 get$click: function() { return new $.BoundClosure2(this, 'click$0'); },
 set$hidden: function(value) {
  throw $.$$throw($.UnsupportedError$('Hidden can\'t be set for document fragments.'));
},
 set$id: function(value) {
  throw $.$$throw($.UnsupportedError$('ID can\'t be set for document fragments.'));
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {"": ["name?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DynamicsCompressorNode', {"": []
});

$.$defineNativeClass('EXTTextureFilterAnisotropic', {"": []
});

$.$defineNativeClass('Element', {"": ["hidden=", "id=", "innerHTML!", "clientHeight?", "clientWidth?", "nextElementSibling?", "offsetHeight?", "offsetLeft?", "offsetParent?", "offsetTop?", "offsetWidth?", "scrollLeft?", "scrollTop?", "style?", "tagName?"],
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 set$elements: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$elements')) {
  {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
}
  } else {
    return Object.prototype.set$elements.call(this, value);
  }

},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
  {
  return $._CssClassSet$(this);
}
  } else {
    return Object.prototype.get$classes.call(this);
  }

},
 get$dataAttributes: function() {
  return $._DataAttributeMap$(this.get$attributes());
},
 get$computedStyle: function() {
  return this.getComputedStyle$1('');
},
 getComputedStyle$1: function(pseudoElement) {
  return $._createMeasurementFuture(new $.Element_getComputedStyle_anon(pseudoElement, this), $.Completer_Completer('CSSStyleDeclaration'));
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.ElementEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
  return this.children;
},
 click$0: function() {
  return this.click();
},
 get$click: function() { return new $.BoundClosure2(this, 'click$0'); },
 get$$$dom_className: function() {
  return this.className;
},
 set$$$dom_className: function(value) {
  this.className = value;
},
 get$$$dom_firstElementChild: function() {
  return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
  return this.lastElementChild;
},
 $dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 $dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"": ["align?", "height=", "name=", "type=", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('EntityReference', {"": []
});

$.$defineNativeClass('Entry', {"": ["name?"],
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', {"": ["name?"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', {"": ["message?"]
});

$.$defineNativeClass('Event', {"": ["type?"],
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
  return this.target;
}
});

$.$defineNativeClass('EventException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', {"": [],
 get$on: function() {
  return $.EventSourceEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.Events$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', {"": ["elements?", "name=", "type?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('File', {"": ["name?"],
 is$File: function() { return true; }
});

$.$defineNativeClass('FileEntry', {"": []
});

$.$defineNativeClass('FileEntrySync', {"": []
});

$.$defineNativeClass('FileError', {"": []
});

$.$defineNativeClass('FileException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileReader', {"": [],
 get$on: function() {
  return $.FileReaderEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileReaderSync', {"": []
});

$.$defineNativeClass('FileWriter', {"": ["length?", "position?"],
 get$on: function() {
  return $.FileWriterEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', {"": ["length?", "position?"]
});

$.$defineNativeClass('Float32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'num');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'num');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"": ["color!", "size?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('FormData', {"": []
});

$.$defineNativeClass('HTMLFormElement', {"": ["length?", "name=", "target="],
 action$2: function(arg0, arg1) { return this.action.call$2(arg0, arg1); },
 reset$0: function() {
  return this.reset();
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"": ["height?", "location=", "name=", "width?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {"": [],
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('GainNode', {"": []
});

$.$defineNativeClass('Gamepad', {"": ["id?"]
});

$.$defineNativeClass('Geolocation', {"": []
});

$.$defineNativeClass('Geoposition', {"": []
});

$.$defineNativeClass('HTMLHRElement', {"": ["align?", "size?", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Node');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Node');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {"": [],
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('HashChangeEvent', {"": []
});

$.$defineNativeClass('HTMLHeadElement', {"": ["profile?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {"": ["align?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLHtmlElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequest', {"": [],
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"": ["position?"]
});

$.$defineNativeClass('XMLHttpRequestUpload', {"": [],
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBAny', {"": []
});

$.$defineNativeClass('IDBCursor', {"": ["key?"],
 source$1: function(arg0) { return this.source.call$1(arg0); }
});

$.$defineNativeClass('IDBCursorWithValue', {"": ["value?"]
});

$.$defineNativeClass('IDBDatabase', {"": ["name?"],
 get$on: function() {
  return $.IDBDatabaseEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBFactory', {"": []
});

$.$defineNativeClass('IDBIndex', {"": ["name?"]
});

$.$defineNativeClass('IDBKey', {"": []
});

$.$defineNativeClass('IDBKeyRange', {"": []
});

$.$defineNativeClass('IDBObjectStore', {"": ["name?"],
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_PrepareForStructuredClone(value), key);
  return this._add_2$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', {"": [],
 get$on: function() {
  return $.IDBOpenDBRequestEvents$(this);
}
});

$.$defineNativeClass('IDBRequest', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.IDBRequestEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 source$1: function(arg0) { return this.source.call$1(arg0); },
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBTransaction', {"": [],
 get$on: function() {
  return $.IDBTransactionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeRequest', {"": [],
 get$on: function() {
  return $.IDBVersionChangeRequestEvents$(this);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"": ["align?", "height=", "name=", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('IceCandidate', {"": []
});

$.$defineNativeClass('ImageData', {"": ["data?", "height?", "width?"],
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"": ["align?", "border!", "height=", "name=", "width="],
 complete$1: function(arg0) { return this.complete.call$1(arg0); },
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"": ["align?", "checked?", "height=", "name=", "pattern?", "size?", "type=", "value=", "width="],
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$InputElement: function() { return true; },
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Int16Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('JavaScriptCallFrame', {"": ["type?"]
});

$.$defineNativeClass('KeyboardEvent', {"": [],
 is$KeyboardEvent: function() { return true; }
});

$.$defineNativeClass('HTMLKeygenElement', {"": ["name=", "type?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"": ["type=", "value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {"": ["align?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"": ["href?", "target=", "type="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('History', {"": ["length?"]
});

$.$defineNativeClass('Location', {"": ["href?"],
 toString$0: function() {
  return this.toString();
},
 is$Location: function() { return true; }
});

$.$defineNativeClass('LocalMediaStream', {"": []
});

$.$defineNativeClass('DOMWindow', {"": ["innerHeight?", "innerWidth?", "name=", "navigator?", "pageXOffset?", "pageYOffset?"],
 get$location: function() {
  var result = this.get$_location();
  if ($.LocalWindow__isDartLocation(result) === true)
    return result;
  if (null == this._location_wrapper)
    this._location_wrapper = $._LocationWrapper$(result);
  return this._location_wrapper;
},
 set$location: function(value) {
  if (typeof value === 'object' && value !== null && !!value.is$_LocationWrapper)
    this.set$_location(value._ptr);
  else
    this.set$_location(value);
},
 get$_location: function() {
  return this.location;
},
 set$_location: function(value) {
  this.location = value;
},
 requestAnimationFrame$1: function(callback) {
  this._ensureRequestAnimationFrame$0();
  return this._requestAnimationFrame$1(callback);
},
 _requestAnimationFrame$1: function(callback) {
  return this.requestAnimationFrame($.convertDartClosureToJS(callback, 1));
},
 _ensureRequestAnimationFrame$0: function() {
  if (!!(this.requestAnimationFrame && this.cancelAnimationFrame))
    return;
    (function($this) {
   var vendors = ['ms', 'moz', 'webkit', 'o'];
   for (var i = 0; i < vendors.length && !$this.requestAnimationFrame; ++i) {
     $this.requestAnimationFrame = $this[vendors[i] + 'RequestAnimationFrame'];
     $this.cancelAnimationFrame =
         $this[vendors[i]+'CancelAnimationFrame'] ||
         $this[vendors[i]+'CancelRequestAnimationFrame'];
   }
   if ($this.requestAnimationFrame && $this.cancelAnimationFrame) return;
   $this.requestAnimationFrame = function(callback) {
      return window.setTimeout(function() {
        callback(Date.now());
      }, 16 /* 16ms ~= 60fps */);
   };
   $this.cancelAnimationFrame = function(id) { clearTimeout(id); }
  })(this);
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.get$_parent());
},
 get$_parent: function() {
  return this.parent;
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.get$_lib3_top());
},
 get$_lib3_top: function() {
  return this.top;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 close$0: function() {
  return this.close();
},
 $dom_getComputedStyle$2: function(element, pseudoElement) {
  return this.getComputedStyle(element,pseudoElement);
},
 postMessage$3: function(message, targetOrigin, messagePorts) {
  var t1, t2;
  t1 = $ === message;
  if (t1)
    message = null;
  t1 = !t1;
  t2 = $ === messagePorts;
  if (t2)
    messagePorts = null;
  if (t1 && t2) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), targetOrigin);
    return;
  }
  if (t1)
    t1 = typeof messagePorts === 'object' && messagePorts !== null && (messagePorts.constructor === Array || messagePorts.is$List()) || messagePorts == null;
  else
    t1 = false;
  if (t1) {
    this._postMessage_2$3($._convertDartToNative_PrepareForStructuredClone(message), targetOrigin, messagePorts);
    return;
  }
  throw $.$$throw($.CTC26);
},
 postMessage$2: function(message,targetOrigin) {
  return this.postMessage$3(message,targetOrigin,$)
},
 _postMessage_1$2: function(message, targetOrigin) {
  return this.postMessage(message,targetOrigin);
},
 _postMessage_2$3: function(message, targetOrigin, messagePorts) {
  return this.postMessage(message,targetOrigin,messagePorts);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMapElement', {"": ["name="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {"": ["height=", "width="],
 start$0: function() {
  return this.start();
},
 get$start: function() { return new $.BoundClosure2(this, 'start$0'); },
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('MediaController', {"": [],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {"": [],
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('MediaElementAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaError', {"": []
});

$.$defineNativeClass('MediaKeyError', {"": []
});

$.$defineNativeClass('MediaKeyEvent', {"": ["message?"]
});

$.$defineNativeClass('MediaList', {"": ["length?"]
});

$.$defineNativeClass('MediaQueryList', {"": []
});

$.$defineNativeClass('MediaSource', {"": [],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', {"": [],
 get$on: function() {
  return $.MediaStreamEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaStreamEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrack', {"": [],
 get$on: function() {
  return $.MediaStreamTrackEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrackList', {"": ["length?"],
 get$on: function() {
  return $.MediaStreamTrackListEvents$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MemoryInfo', {"": []
});

$.$defineNativeClass('HTMLMenuElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('MessageChannel', {"": []
});

$.$defineNativeClass('MessageEvent', {"": ["ports?"],
 get$data: function() {
  return $._convertNativeToDart_SerializedScriptValue(this.get$_data());
},
 get$_data: function() {
  return this.data;
},
 get$source: function() {
  return $._convertNativeToDart_Window(this.get$_source());
},
 source$1: function(arg0) { return this.get$source().call$1(arg0); },
 get$_source: function() {
  return this.source;
}
});

$.$defineNativeClass('MessagePort', {"": [],
 get$on: function() {
  return $.MessagePortEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
},
 get$start: function() { return new $.BoundClosure2(this, 'start$0'); }
});

$.$defineNativeClass('HTMLMetaElement', {"": ["name="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Metadata', {"": ["size?"]
});

$.$defineNativeClass('HTMLMeterElement', {"": ["value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('MouseEvent', {"": [],
 is$MouseEvent: function() { return true; }
});

$.$defineNativeClass('MutationEvent', {"": []
});

$.$defineNativeClass('MutationObserver', {"": [],
 observe$9$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$options$subtree: function(target, attributeFilter, attributeOldValue, attributes, characterData, characterDataOldValue, childList, options, subtree) {
  var parsedOptions, t1;
  parsedOptions = {};
  if (!(options == null))
    $.forEach(options, new $.MutationObserver_observe_anon(parsedOptions));
  t1 = new $.MutationObserver_observe_override(parsedOptions);
  t1.call$2('childList', childList);
  t1.call$2('attributes', attributes);
  t1.call$2('characterData', characterData);
  t1.call$2('subtree', subtree);
  t1.call$2('attributeOldValue', attributeOldValue);
  t1.call$2('characterDataOldValue', characterDataOldValue);
  if (!(attributeFilter == null))
    t1.call$2('attributeFilter', attributeFilter);
  this._call$2(target, parsedOptions);
},
 observe$2$attributes: function(target,attributes) {
  return this.observe$9$attributeFilter$attributeOldValue$attributes$characterData$characterDataOldValue$childList$options$subtree(target,null,null,attributes,null,null,null,null,null)
},
 _call$2: function(target, options) {
  return this.observe(target,options);
}
});

$.$defineNativeClass('MutationRecord', {"": ["nextSibling?", "previousSibling?", "target?", "type?"]
});

$.$defineNativeClass('NamedNodeMap', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Node');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"": ["userAgent?"]
});

$.$defineNativeClass('NavigatorUserMediaError', {"": []
});

$.$defineNativeClass('Node', {"": [],
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_attributes: function() {
  return this.attributes;
},
 get$$$dom_childNodes: function() {
  return this.childNodes;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
  return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 set$text: function(value) {
  this.textContent = value;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 insertBefore$2: function(newChild, refChild) {
  return this.insertBefore(newChild,refChild);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
},
 is$Node: function() { return true; }
});

$.$defineNativeClass('NodeFilter', {"": []
});

$.$defineNativeClass('NodeIterator', {"": [],
 filter$1: function(arg0) { return this.filter.call$1(arg0); }
});

$.$defineNativeClass('NodeList', {"": ["_parent=", "length?"],
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Node');
},
 add$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._parent.$dom_appendChild$1(t2);
  }
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._parent.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 operator$indexSet$2: function(index, value) {
  this._parent.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 operator$index$1: function(index) {
  return this[index];
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Notation', {"": []
});

$.$defineNativeClass('Notification', {"": [],
 get$on: function() {
  return $.NotificationEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('NotificationCenter', {"": []
});

$.$defineNativeClass('OESElementIndexUint', {"": []
});

$.$defineNativeClass('OESStandardDerivatives', {"": []
});

$.$defineNativeClass('OESTextureFloat', {"": []
});

$.$defineNativeClass('OESVertexArrayObject', {"": []
});

$.$defineNativeClass('HTMLOListElement', {"": ["start?", "type="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"": ["align?", "border!", "data=", "height=", "name=", "type=", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('OfflineAudioCompletionEvent', {"": []
});

$.$defineNativeClass('HTMLOptGroupElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"": ["value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('OscillatorNode', {"": ["type="],
 start$1: function(when) {
  return this.start(when);
},
 get$start: function() { return new $.BoundClosure(this, 'start$1'); }
});

$.$defineNativeClass('HTMLOutputElement', {"": ["name=", "type?", "value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('OverflowEvent', {"": ["orient?"]
});

$.$defineNativeClass('PagePopupController', {"": []
});

$.$defineNativeClass('PageTransitionEvent', {"": []
});

$.$defineNativeClass('PannerNode', {"": []
});

$.$defineNativeClass('HTMLParagraphElement', {"": ["align?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"": ["name=", "type=", "value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', {"": [],
 get$on: function() {
  return $.PeerConnection00Events$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Performance', {"": []
});

$.$defineNativeClass('PerformanceNavigation', {"": ["type?"]
});

$.$defineNativeClass('PerformanceTiming', {"": []
});

$.$defineNativeClass('WebKitPoint', {"": []
});

$.$defineNativeClass('PopStateEvent', {"": [],
 get$_lib3_state: function() {
  return this.state;
}
});

$.$defineNativeClass('PositionError', {"": ["message?"]
});

$.$defineNativeClass('HTMLPreElement', {"": ["width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('ProcessingInstruction', {"": ["data=", "target?"]
});

$.$defineNativeClass('HTMLProgressElement', {"": ["position?", "value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('ProgressEvent', {"": []
});

$.$defineNativeClass('HTMLQuoteElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('RGBColor', {"": []
});

$.$defineNativeClass('RTCDataChannel', {"": [],
 get$on: function() {
  return $.RTCDataChannelEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCDataChannelEvent', {"": []
});

$.$defineNativeClass('RTCIceCandidate', {"": []
});

$.$defineNativeClass('RTCIceCandidateEvent', {"": []
});

$.$defineNativeClass('RTCPeerConnection', {"": [],
 get$on: function() {
  return $.RTCPeerConnectionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', {"": ["type="]
});

$.$defineNativeClass('RTCStatsElement', {"": []
});

$.$defineNativeClass('RTCStatsReport', {"": []
});

$.$defineNativeClass('RTCStatsResponse', {"": []
});

$.$defineNativeClass('RadioNodeList', {"": ["value="]
});

$.$defineNativeClass('Range', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', {"": ["bottom?", "left?", "right?", "top?"]
});

$.$defineNativeClass('SQLError', {"": ["message?"]
});

$.$defineNativeClass('SQLException', {"": ["message?"]
});

$.$defineNativeClass('SQLResultSet', {"": []
});

$.$defineNativeClass('SQLResultSetRowList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Map');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SQLTransaction', {"": []
});

$.$defineNativeClass('SQLTransactionSync', {"": []
});

$.$defineNativeClass('SVGAElement', {"": ["target?", "transform?", "href?"]
});

$.$defineNativeClass('SVGAltGlyphDefElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphElement', {"": ["href?"]
});

$.$defineNativeClass('SVGAltGlyphItemElement', {"": []
});

$.$defineNativeClass('SVGAngle', {"": ["value="]
});

$.$defineNativeClass('SVGAnimateColorElement', {"": []
});

$.$defineNativeClass('SVGAnimateElement', {"": []
});

$.$defineNativeClass('SVGAnimateMotionElement', {"": []
});

$.$defineNativeClass('SVGAnimateTransformElement', {"": []
});

$.$defineNativeClass('SVGAnimatedAngle', {"": []
});

$.$defineNativeClass('SVGAnimatedBoolean', {"": []
});

$.$defineNativeClass('SVGAnimatedEnumeration', {"": []
});

$.$defineNativeClass('SVGAnimatedInteger', {"": []
});

$.$defineNativeClass('SVGAnimatedLength', {"": []
});

$.$defineNativeClass('SVGAnimatedLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SVGAnimatedLength');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumber', {"": []
});

$.$defineNativeClass('SVGAnimatedNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SVGAnimatedNumber');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGAnimatedRect', {"": []
});

$.$defineNativeClass('SVGAnimatedString', {"": []
});

$.$defineNativeClass('SVGAnimatedTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SVGAnimateTransformElement');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', {"": []
});

$.$defineNativeClass('SVGCircleElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGClipPathElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGColor', {"": []
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"": ["offset?", "type?"]
});

$.$defineNativeClass('SVGCursorElement', {"": ["href?"]
});

$.$defineNativeClass('SVGDefsElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGDescElement', {"": []
});

$.$defineNativeClass('SVGDocument', {"": []
});

$.$defineNativeClass('SVGElement', {"": [],
 get$classes: function() {
  if (this.get$_cssClassSet() == null)
    this.set$_cssClassSet($._AttributeClassSet$(this.get$_ptr()));
  return this.get$_cssClassSet();
},
 get$elements: function() {
  return $._FilteredElementList$(this);
},
 set$elements: function(value) {
  var elements = this.get$elements();
  $.clear(elements);
  $.addAll(elements, value);
},
 set$innerHTML: function(svg) {
  var container = $.Element_Element$tag('div');
  container.set$innerHTML('<svg version="1.1">' + $.S(svg) + '</svg>');
  this.set$elements($.index(container.get$elements(), 0).get$elements());
},
 get$id: function() {
  return this.id;
},
 set$id: function(value) {
  this.id = value;
}
});

$.$defineNativeClass('SVGElementInstance', {"": ["firstChild?", "lastChild?", "nextSibling?", "previousSibling?"],
 get$on: function() {
  return $.SVGElementInstanceEvents$(this);
}
});

$.$defineNativeClass('SVGEllipseElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"": ["type?", "values?", "height?", "width?"]
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFECompositeElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEDistantLightElement', {"": []
});

$.$defineNativeClass('SVGFEDropShadowElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEFloodElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEFuncAElement', {"": []
});

$.$defineNativeClass('SVGFEFuncBElement', {"": []
});

$.$defineNativeClass('SVGFEFuncGElement', {"": []
});

$.$defineNativeClass('SVGFEFuncRElement', {"": []
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEImageElement', {"": ["height?", "width?", "href?"]
});

$.$defineNativeClass('SVGFEMergeElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEMergeNodeElement', {"": []
});

$.$defineNativeClass('SVGFEMorphologyElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEOffsetElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFEPointLightElement', {"": []
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFESpotLightElement', {"": []
});

$.$defineNativeClass('SVGFETileElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGFETurbulenceElement', {"": ["type?", "height?", "width?"]
});

$.$defineNativeClass('SVGFilterElement', {"": ["height?", "width?", "href?"]
});

$.$defineNativeClass('SVGFontElement', {"": []
});

$.$defineNativeClass('SVGFontFaceElement', {"": []
});

$.$defineNativeClass('SVGFontFaceFormatElement', {"": []
});

$.$defineNativeClass('SVGFontFaceNameElement', {"": []
});

$.$defineNativeClass('SVGFontFaceSrcElement', {"": []
});

$.$defineNativeClass('SVGFontFaceUriElement', {"": []
});

$.$defineNativeClass('SVGForeignObjectElement', {"": ["height?", "width?", "transform?"]
});

$.$defineNativeClass('SVGGElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGGlyphElement', {"": []
});

$.$defineNativeClass('SVGGlyphRefElement', {"": ["href?"]
});

$.$defineNativeClass('SVGGradientElement', {"": ["href?"]
});

$.$defineNativeClass('SVGHKernElement', {"": []
});

$.$defineNativeClass('SVGImageElement', {"": ["height?", "width?", "transform?", "href?"]
});

$.$defineNativeClass('SVGLength', {"": ["value="]
});

$.$defineNativeClass('SVGLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SVGLength');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGLinearGradientElement', {"": []
});

$.$defineNativeClass('SVGMPathElement', {"": ["href?"]
});

$.$defineNativeClass('SVGMarkerElement', {"": []
});

$.$defineNativeClass('SVGMaskElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGMatrix', {"": []
});

$.$defineNativeClass('SVGMetadataElement', {"": []
});

$.$defineNativeClass('SVGMissingGlyphElement', {"": []
});

$.$defineNativeClass('SVGNumber', {"": ["value="]
});

$.$defineNativeClass('SVGNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SVGNumber');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPaint', {"": []
});

$.$defineNativeClass('SVGPathElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGPathSeg', {"": []
});

$.$defineNativeClass('SVGPathSegArcAbs', {"": []
});

$.$defineNativeClass('SVGPathSegArcRel', {"": []
});

$.$defineNativeClass('SVGPathSegClosePath', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoAbs', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoRel', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', {"": []
});

$.$defineNativeClass('SVGPathSegList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SVGPathSeg');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', {"": []
});

$.$defineNativeClass('SVGPathSegMovetoRel', {"": []
});

$.$defineNativeClass('SVGPatternElement', {"": ["height?", "width?", "href?"]
});

$.$defineNativeClass('SVGPoint', {"": []
});

$.$defineNativeClass('SVGPointList', {"": [],
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGPolylineElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGPreserveAspectRatio', {"": ["align?"]
});

$.$defineNativeClass('SVGRadialGradientElement', {"": []
});

$.$defineNativeClass('SVGRect', {"": ["height=", "width="]
});

$.$defineNativeClass('SVGRectElement', {"": ["height?", "width?", "transform?"]
});

$.$defineNativeClass('SVGRenderingIntent', {"": []
});

$.$defineNativeClass('SVGSVGElement', {"": ["height?", "width?"]
});

$.$defineNativeClass('SVGScriptElement', {"": ["type=", "href?"]
});

$.$defineNativeClass('SVGSetElement', {"": []
});

$.$defineNativeClass('SVGStopElement', {"": ["offset?"]
});

$.$defineNativeClass('SVGStringList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'String');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"": ["type="]
});

$.$defineNativeClass('SVGSwitchElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGSymbolElement', {"": []
});

$.$defineNativeClass('SVGTRefElement', {"": ["href?"]
});

$.$defineNativeClass('SVGTSpanElement', {"": []
});

$.$defineNativeClass('SVGTextContentElement', {"": []
});

$.$defineNativeClass('SVGTextElement', {"": ["transform?"]
});

$.$defineNativeClass('SVGTextPathElement', {"": ["spacing?", "href?"]
});

$.$defineNativeClass('SVGTextPositioningElement', {"": []
});

$.$defineNativeClass('SVGTitleElement', {"": []
});

$.$defineNativeClass('SVGTransform', {"": ["type?"]
});

$.$defineNativeClass('SVGTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SVGTransform');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGUnitTypes', {"": []
});

$.$defineNativeClass('SVGUseElement', {"": ["height?", "width?", "transform?", "href?"]
});

$.$defineNativeClass('SVGVKernElement', {"": []
});

$.$defineNativeClass('SVGViewElement', {"": []
});

$.$defineNativeClass('SVGViewSpec', {"": ["transform?"]
});

$.$defineNativeClass('SVGZoomEvent', {"": []
});

$.$defineNativeClass('Screen', {"": ["height?", "width?"]
});

$.$defineNativeClass('HTMLScriptElement', {"": ["type="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('ScriptProcessorNode', {"": [],
 get$on: function() {
  return $.ScriptProcessorNodeEvents$(this);
}
});

$.$defineNativeClass('ScriptProfile', {"": []
});

$.$defineNativeClass('ScriptProfileNode', {"": ["visible?"],
 children$0: function() {
  return this.children();
},
 get$children: function() { return new $.BoundClosure2(this, 'children$0'); }
});

$.$defineNativeClass('HTMLSelectElement', {"": ["length=", "name=", "size?", "type?", "value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('SessionDescription', {"": []
});

$.$defineNativeClass('HTMLShadowElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {"": ["innerHTML!"]
});

$.$defineNativeClass('SharedWorker', {"": []
});

$.$defineNativeClass('SharedWorkerContext', {"": ["name?"],
 get$on: function() {
  return $.SharedWorkerContextEvents$(this);
}
});

$.$defineNativeClass('SourceBuffer', {"": []
});

$.$defineNativeClass('SourceBufferList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SourceBuffer');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"": ["type="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', {"": []
});

$.$defineNativeClass('SpeechGrammarList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SpeechGrammar');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputEvent', {"": []
});

$.$defineNativeClass('SpeechInputResult', {"": []
});

$.$defineNativeClass('SpeechRecognition', {"": [],
 get$on: function() {
  return $.SpeechRecognitionEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 start$0: function() {
  return this.start();
},
 get$start: function() { return new $.BoundClosure2(this, 'start$0'); }
});

$.$defineNativeClass('SpeechRecognitionAlternative', {"": []
});

$.$defineNativeClass('SpeechRecognitionError', {"": ["message?"]
});

$.$defineNativeClass('SpeechRecognitionEvent', {"": []
});

$.$defineNativeClass('SpeechRecognitionResult', {"": ["length?"]
});

$.$defineNativeClass('Storage', {"": [],
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  return this.$dom_setItem$2(key, value);
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.$dom_getItem$1(key) == null)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$keys: function() {
  var keys = [];
  this.forEach$1(new $.Storage_keys_anon(keys));
  return keys;
},
 get$values: function() {
  var values = [];
  this.forEach$1(new $.Storage_values_anon(values));
  return values;
},
 get$length: function() {
  return this.get$$$dom_length();
},
 get$isEmpty: function() {
  return this.$dom_key$1(0) == null;
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 get$$$dom_length: function() {
  return this.length;
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"": ["key?"]
});

$.$defineNativeClass('StorageInfo', {"": []
});

$.$defineNativeClass('HTMLStyleElement', {"": ["type="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('StyleMedia', {"": ["type?"]
});

$.$defineNativeClass('StyleSheet', {"": ["href?", "type?"]
});

$.$defineNativeClass('HTMLTableCaptionElement', {"": ["align?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {"": ["align?", "height=", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {"": ["align?", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {"": ["align?", "border!", "width="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {"": ["align?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {"": ["align?"],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Text', {"": []
});

$.$defineNativeClass('HTMLTextAreaElement', {"": ["name=", "type?", "value="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('TextEvent', {"": ["data?"]
});

$.$defineNativeClass('TextMetrics', {"": ["width?"]
});

$.$defineNativeClass('TextTrack', {"": [],
 get$on: function() {
  return $.TextTrackEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCue', {"": ["align?", "id=", "position=", "size?", "text!"],
 get$on: function() {
  return $.TextTrackCueEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'TextTrackCue');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrackList', {"": ["length?"],
 get$on: function() {
  return $.TextTrackListEvents$(this);
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'TextTrack');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"": ["length?"],
 start$1: function(index) {
  return this.start(index);
},
 get$start: function() { return new $.BoundClosure(this, 'start$1'); }
});

$.$defineNativeClass('HTMLTitleElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Touch', {"": ["pageX?", "pageY?"],
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
  return this.target;
}
});

$.$defineNativeClass('TouchEvent', {"": []
});

$.$defineNativeClass('TouchList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Touch');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('TrackEvent', {"": []
});

$.$defineNativeClass('WebKitTransitionEvent', {"": []
});

$.$defineNativeClass('TreeWalker', {"": [],
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 firstChild$0: function() {
  return this.firstChild();
},
 get$firstChild: function() { return new $.BoundClosure2(this, 'firstChild$0'); },
 lastChild$0: function() {
  return this.lastChild();
},
 get$lastChild: function() { return new $.BoundClosure2(this, 'lastChild$0'); },
 nextSibling$0: function() {
  return this.nextSibling();
},
 get$nextSibling: function() { return new $.BoundClosure2(this, 'nextSibling$0'); },
 previousSibling$0: function() {
  return this.previousSibling();
},
 get$previousSibling: function() { return new $.BoundClosure2(this, 'previousSibling$0'); }
});

$.$defineNativeClass('UIEvent', {"": ["pageX?", "pageY?"],
 get$view: function() {
  return $._convertNativeToDart_Window(this.get$_view());
},
 get$_view: function() {
  return this.view;
},
 is$UIEvent: function() { return true; }
});

$.$defineNativeClass('HTMLUListElement', {"": ["type="],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Uint16Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', {"": []
});

$.$defineNativeClass('HTMLUnknownElement', {"": [],
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('URL', {"": []
});

$.$defineNativeClass('ValidityState', {"": []
});

$.$defineNativeClass('HTMLVideoElement', {"": ["height=", "width="]
});

$.$defineNativeClass('WaveShaperNode', {"": []
});

$.$defineNativeClass('WaveTable', {"": []
});

$.$defineNativeClass('WebGLActiveInfo', {"": ["name?", "size?", "type?"]
});

$.$defineNativeClass('WebGLBuffer', {"": []
});

$.$defineNativeClass('WebGLCompressedTextureS3TC', {"": []
});

$.$defineNativeClass('WebGLContextAttributes', {"": []
});

$.$defineNativeClass('WebGLContextEvent', {"": []
});

$.$defineNativeClass('WebGLDebugRendererInfo', {"": []
});

$.$defineNativeClass('WebGLDebugShaders', {"": []
});

$.$defineNativeClass('WebGLDepthTexture', {"": []
});

$.$defineNativeClass('WebGLFramebuffer', {"": []
});

$.$defineNativeClass('WebGLLoseContext', {"": []
});

$.$defineNativeClass('WebGLProgram', {"": []
});

$.$defineNativeClass('WebGLRenderbuffer', {"": []
});

$.$defineNativeClass('WebGLRenderingContext', {"": [],
 flush$0: function() {
  return this.flush();
}
});

$.$defineNativeClass('WebGLShader', {"": []
});

$.$defineNativeClass('WebGLShaderPrecisionFormat', {"": []
});

$.$defineNativeClass('WebGLTexture', {"": []
});

$.$defineNativeClass('WebGLUniformLocation', {"": []
});

$.$defineNativeClass('WebGLVertexArrayObjectOES', {"": []
});

$.$defineNativeClass('WebKitCSSFilterValue', {"": []
});

$.$defineNativeClass('WebKitNamedFlow', {"": ["name?"],
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', {"": [],
 get$on: function() {
  return $.WebSocketEvents$(this);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 close$2: function(code, reason) {
  return this.close(code,reason);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WheelEvent', {"": []
});

$.$defineNativeClass('Worker', {"": [],
 get$on: function() {
  return $.WorkerEvents$(this);
},
 postMessage$2: function(message, messagePorts) {
  var t1 = $ === messagePorts;
  if (t1)
    messagePorts = null;
  if (!t1) {
    this._postMessage_1$2($._convertDartToNative_PrepareForStructuredClone(message), messagePorts);
    return;
  }
  this._postMessage_2$1($._convertDartToNative_PrepareForStructuredClone(message));
  return;
},
 postMessage$1: function(message) {
  return this.postMessage$2(message,$)
},
 _postMessage_1$2: function(message, messagePorts) {
  return this.postMessage(message,messagePorts);
},
 _postMessage_2$1: function(message) {
  return this.postMessage(message);
}
});

$.$defineNativeClass('WorkerContext', {"": ["location?", "navigator?"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.WorkerContextEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 close$0: function() {
  return this.close();
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('WorkerLocation', {"": ["href?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"": ["userAgent?"]
});

$.$defineNativeClass('XMLSerializer', {"": []
});

$.$defineNativeClass('XPathEvaluator', {"": []
});

$.$defineNativeClass('XPathException', {"": ["message?", "name?"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XPathExpression', {"": []
});

$.$defineNativeClass('XPathNSResolver', {"": []
});

$.$defineNativeClass('XPathResult', {"": []
});

$.$defineNativeClass('XSLTProcessor', {"": [],
 reset$0: function() {
  return this.reset();
}
});

$.$defineNativeClass('CSSRuleList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'CSSRule');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSValueList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'CSSValue');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('ClientRectList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'ClientRect');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMStringList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'String');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArray', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Entry');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'EntrySync');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('FileList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'File');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('GamepadList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Gamepad');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('MediaStreamList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'MediaStream');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGElementInstanceList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SVGElementInstance');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SpeechInputResult');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionResultList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'SpeechRecognitionResult');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'StyleSheet');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', {"": ["length?"],
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $._FixedSizeListIterator$(this, 'Animation');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 isEmpty$1: function(arg0) { return this.get$isEmpty().call$1(arg0); },
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub($.get$length(this), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$('Cannot removeRange on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Worker', {"": [],
 get$id: function() {
  return this.id;
},
 set$id: function(i) {
  this.id = i;
},
 postMessage$1: function(msg) {
  return this.postMessage(msg);
}
});

$.$defineNativeClass('DOMWindow', {"": [],
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
},
 setInterval$2: function(handler, timeout) {
  return this.setInterval($.convertDartClosureToJS(handler, 0),timeout);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
}
});

// 527 dynamic classes.
// 527 classes
// 41 !leaf
(function(){
  var v0/*class(Uint8Array)*/ = 'Uint8Array|Uint8ClampedArray|Uint8ClampedArray';
  var v1/*class(AudioSourceNode)*/ = 'AudioSourceNode|OscillatorNode|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode|OscillatorNode|MediaStreamAudioSourceNode|MediaElementAudioSourceNode|AudioBufferSourceNode';
  var v2/*class(_CSSValueList)*/ = 'CSSValueList|WebKitCSSFilterValue|WebKitCSSTransformValue|WebKitCSSFilterValue|WebKitCSSTransformValue';
  var v3/*class(SVGColor)*/ = 'SVGColor|SVGPaint|SVGPaint';
  var v4/*class(Text)*/ = 'Text|CDATASection|CDATASection';
  var v5/*class(SVGTextPositioningElement)*/ = 'SVGTextPositioningElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement|SVGTextElement|SVGTSpanElement|SVGTRefElement|SVGAltGlyphElement';
  var v6/*class(SVGTextContentElement)*/ = [v5/*class(SVGTextPositioningElement)*/,v5/*class(SVGTextPositioningElement)*/,'SVGTextContentElement|SVGTextPathElement|SVGTextPathElement'].join('|');
  var v7/*class(SVGGradientElement)*/ = 'SVGGradientElement|SVGRadialGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLinearGradientElement';
  var v8/*class(SVGComponentTransferFunctionElement)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncBElement|SVGFEFuncAElement';
  var v9/*class(SVGAnimationElement)*/ = 'SVGAnimationElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement|SVGSetElement|SVGAnimateTransformElement|SVGAnimateMotionElement|SVGAnimateElement|SVGAnimateColorElement';
  var v10/*class(SVGElement)*/ = [v6/*class(SVGTextContentElement)*/,v7/*class(SVGGradientElement)*/,v8/*class(SVGComponentTransferFunctionElement)*/,v9/*class(SVGAnimationElement)*/,v6/*class(SVGTextContentElement)*/,v7/*class(SVGGradientElement)*/,v8/*class(SVGComponentTransferFunctionElement)*/,v9/*class(SVGAnimationElement)*/,'SVGElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement|SVGViewElement|SVGVKernElement|SVGUseElement|SVGTitleElement|SVGSymbolElement|SVGSwitchElement|SVGStyleElement|SVGStopElement|SVGScriptElement|SVGSVGElement|SVGRectElement|SVGPolylineElement|SVGPolygonElement|SVGPatternElement|SVGPathElement|SVGMissingGlyphElement|SVGMetadataElement|SVGMaskElement|SVGMarkerElement|SVGMPathElement|SVGLineElement|SVGImageElement|SVGHKernElement|SVGGlyphRefElement|SVGGlyphElement|SVGGElement|SVGForeignObjectElement|SVGFontFaceUriElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceFormatElement|SVGFontFaceElement|SVGFontElement|SVGFilterElement|SVGFETurbulenceElement|SVGFETileElement|SVGFESpotLightElement|SVGFESpecularLightingElement|SVGFEPointLightElement|SVGFEOffsetElement|SVGFEMorphologyElement|SVGFEMergeNodeElement|SVGFEMergeElement|SVGFEImageElement|SVGFEGaussianBlurElement|SVGFEFloodElement|SVGFEDropShadowElement|SVGFEDistantLightElement|SVGFEDisplacementMapElement|SVGFEDiffuseLightingElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEComponentTransferElement|SVGFEColorMatrixElement|SVGFEBlendElement|SVGEllipseElement|SVGDescElement|SVGDefsElement|SVGCursorElement|SVGClipPathElement|SVGCircleElement|SVGAltGlyphItemElement|SVGAltGlyphDefElement|SVGAElement'].join('|');
  var v11/*class(MediaElement)*/ = 'HTMLMediaElement|HTMLVideoElement|HTMLAudioElement|HTMLVideoElement|HTMLAudioElement';
  var v12/*class(MouseEvent)*/ = 'MouseEvent|WheelEvent|WheelEvent';
  var v13/*class(UIEvent)*/ = [v12/*class(MouseEvent)*/,v12/*class(MouseEvent)*/,'UIEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent|TouchEvent|TextEvent|SVGZoomEvent|KeyboardEvent|CompositionEvent'].join('|');
  var v14/*class(ProgressEvent)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent|XMLHttpRequestProgressEvent';
  var v15/*class(Element)*/ = [v10/*class(SVGElement)*/,v11/*class(MediaElement)*/,v10/*class(SVGElement)*/,v11/*class(MediaElement)*/,'Element|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement|HTMLUnknownElement|HTMLUListElement|HTMLTrackElement|HTMLTitleElement|HTMLTextAreaElement|HTMLTableSectionElement|HTMLTableRowElement|HTMLTableElement|HTMLTableColElement|HTMLTableCellElement|HTMLTableCaptionElement|HTMLStyleElement|HTMLSpanElement|HTMLSourceElement|HTMLShadowElement|HTMLSelectElement|HTMLScriptElement|HTMLQuoteElement|HTMLProgressElement|HTMLPreElement|HTMLParamElement|HTMLParagraphElement|HTMLOutputElement|HTMLOptionElement|HTMLOptGroupElement|HTMLObjectElement|HTMLOListElement|HTMLModElement|HTMLMeterElement|HTMLMetaElement|HTMLMenuElement|HTMLMarqueeElement|HTMLMapElement|HTMLLinkElement|HTMLLegendElement|HTMLLabelElement|HTMLLIElement|HTMLKeygenElement|HTMLInputElement|HTMLImageElement|HTMLIFrameElement|HTMLHtmlElement|HTMLHeadingElement|HTMLHeadElement|HTMLHRElement|HTMLFrameSetElement|HTMLFrameElement|HTMLFormElement|HTMLFontElement|HTMLFieldSetElement|HTMLEmbedElement|HTMLDivElement|HTMLDirectoryElement|HTMLDetailsElement|HTMLDataListElement|HTMLDListElement|HTMLContentElement|HTMLCanvasElement|HTMLButtonElement|HTMLBodyElement|HTMLBaseFontElement|HTMLBaseElement|HTMLBRElement|HTMLAreaElement|HTMLAppletElement|HTMLAnchorElement|HTMLElement'].join('|');
  var v16/*class(DocumentFragment)*/ = 'DocumentFragment|ShadowRoot|ShadowRoot';
  var v17/*class(Document)*/ = 'HTMLDocument|SVGDocument|SVGDocument';
  var v18/*class(CharacterData)*/ = [v4/*class(Text)*/,v4/*class(Text)*/,'CharacterData|Comment|Comment'].join('|');
  var v19/*class(WorkerContext)*/ = 'WorkerContext|SharedWorkerContext|DedicatedWorkerContext|SharedWorkerContext|DedicatedWorkerContext';
  var v20/*class(Node)*/ = [v15/*class(Element)*/,v16/*class(DocumentFragment)*/,v17/*class(Document)*/,v18/*class(CharacterData)*/,v15/*class(Element)*/,v16/*class(DocumentFragment)*/,v17/*class(Document)*/,v18/*class(CharacterData)*/,'Node|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr|ProcessingInstruction|Notation|EntityReference|DocumentType|Attr'].join('|');
  var v21/*class(MediaStream)*/ = 'MediaStream|LocalMediaStream|LocalMediaStream';
  var v22/*class(IDBRequest)*/ = 'IDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest|IDBVersionChangeRequest|IDBOpenDBRequest';
  var v23/*class(AbstractWorker)*/ = 'AbstractWorker|Worker|SharedWorker|Worker|SharedWorker';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['AbstractWorker', v23/*class(AbstractWorker)*/],
    ['Uint8Array', v0/*class(Uint8Array)*/],
    ['ArrayBufferView', [v0/*class(Uint8Array)*/,v0/*class(Uint8Array)*/,'ArrayBufferView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView|Uint32Array|Uint16Array|Int8Array|Int32Array|Int16Array|Float64Array|Float32Array|DataView'].join('|')],
    ['AudioSourceNode', v1/*class(AudioSourceNode)*/],
    ['AudioNode', [v1/*class(AudioSourceNode)*/,v1/*class(AudioSourceNode)*/,'AudioNode|WaveShaperNode|ScriptProcessorNode|PannerNode|GainNode|DynamicsCompressorNode|DelayNode|ConvolverNode|ChannelSplitterNode|ChannelMergerNode|BiquadFilterNode|AudioDestinationNode|AnalyserNode|WaveShaperNode|ScriptProcessorNode|PannerNode|GainNode|DynamicsCompressorNode|DelayNode|ConvolverNode|ChannelSplitterNode|ChannelMergerNode|BiquadFilterNode|AudioDestinationNode|AnalyserNode'].join('|')],
    ['AudioParam', 'AudioParam|AudioGain|AudioGain'],
    ['Blob', 'Blob|File|File'],
    ['CSSRule', 'CSSRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule|CSSUnknownRule|CSSStyleRule|CSSPageRule|CSSMediaRule|WebKitCSSKeyframesRule|WebKitCSSKeyframeRule|CSSImportRule|CSSFontFaceRule|CSSCharsetRule'],
    ['CSSValueList', v2/*class(_CSSValueList)*/],
    ['SVGColor', v3/*class(SVGColor)*/],
    ['CSSValue', [v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,'CSSValue|CSSPrimitiveValue|CSSPrimitiveValue'].join('|')],
    ['CanvasRenderingContext', 'CanvasRenderingContext|WebGLRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext|CanvasRenderingContext2D'],
    ['Text', v4/*class(Text)*/],
    ['CharacterData', v18/*class(CharacterData)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList|DOMSettableTokenList'],
    ['HTMLDocument', v17/*class(Document)*/],
    ['DocumentFragment', v16/*class(DocumentFragment)*/],
    ['SVGTextPositioningElement', v5/*class(SVGTextPositioningElement)*/],
    ['SVGTextContentElement', v6/*class(SVGTextContentElement)*/],
    ['SVGGradientElement', v7/*class(SVGGradientElement)*/],
    ['SVGComponentTransferFunctionElement', v8/*class(SVGComponentTransferFunctionElement)*/],
    ['SVGAnimationElement', v9/*class(SVGAnimationElement)*/],
    ['SVGElement', v10/*class(SVGElement)*/],
    ['HTMLMediaElement', v11/*class(MediaElement)*/],
    ['Element', v15/*class(Element)*/],
    ['Entry', 'Entry|FileEntry|DirectoryEntry|FileEntry|DirectoryEntry'],
    ['EntrySync', 'EntrySync|FileEntrySync|DirectoryEntrySync|FileEntrySync|DirectoryEntrySync'],
    ['MouseEvent', v12/*class(MouseEvent)*/],
    ['UIEvent', v13/*class(UIEvent)*/],
    ['ProgressEvent', v14/*class(ProgressEvent)*/],
    ['Event', [v13/*class(UIEvent)*/,v14/*class(ProgressEvent)*/,v13/*class(UIEvent)*/,v14/*class(ProgressEvent)*/,'Event|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent|WebGLContextEvent|WebKitTransitionEvent|TrackEvent|StorageEvent|SpeechRecognitionEvent|SpeechRecognitionError|SpeechInputEvent|RTCIceCandidateEvent|RTCDataChannelEvent|PopStateEvent|PageTransitionEvent|OverflowEvent|OfflineAudioCompletionEvent|MutationEvent|MessageEvent|MediaStreamTrackEvent|MediaStreamEvent|MediaKeyEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|HashChangeEvent|ErrorEvent|DeviceOrientationEvent|DeviceMotionEvent|CustomEvent|CloseEvent|BeforeLoadEvent|AudioProcessingEvent|WebKitAnimationEvent'].join('|')],
    ['WorkerContext', v19/*class(WorkerContext)*/],
    ['Node', v20/*class(Node)*/],
    ['MediaStream', v21/*class(MediaStream)*/],
    ['IDBRequest', v22/*class(IDBRequest)*/],
    ['EventTarget', [v19/*class(WorkerContext)*/,v20/*class(Node)*/,v21/*class(MediaStream)*/,v22/*class(IDBRequest)*/,v23/*class(AbstractWorker)*/,v19/*class(WorkerContext)*/,v20/*class(Node)*/,v21/*class(MediaStream)*/,v22/*class(IDBRequest)*/,v23/*class(AbstractWorker)*/,'EventTarget|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext|WebSocket|WebKitNamedFlow|TextTrackList|TextTrackCue|TextTrack|SpeechRecognition|SourceBufferList|SVGElementInstance|RTCPeerConnection|RTCDataChannel|Performance|PeerConnection00|Notification|MessagePort|MediaStreamTrackList|MediaStreamTrack|MediaSource|MediaController|DOMWindow|IDBTransaction|IDBDatabase|XMLHttpRequestUpload|XMLHttpRequest|FileWriter|FileReader|EventSource|DOMApplicationCache|BatteryManager|AudioContext'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue|IDBCursorWithValue'],
    ['NodeList', 'NodeList|RadioNodeList|RadioNodeList'],
    ['SVGPathSeg', 'SVGPathSeg|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs|SVGPathSegMovetoRel|SVGPathSegMovetoAbs|SVGPathSegLinetoVerticalRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoRel|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicAbs|SVGPathSegClosePath|SVGPathSegArcRel|SVGPathSegArcAbs'],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet|CSSStyleSheet']];
$.dynamicSetMetadata(table);
})();

var $globalThis = $;
var $globalState;
var $globals;
var $isWorker = false;
var $supportsWorkers = false;
var $thisScriptUrl;
function $static_init(){};

function $initGlobals(context) {
  context.isolateStatics = new Isolate();
}
function $setGlobals(context) {
  $ = context.isolateStatics;
  $globalThis = $;
}
$.main.call$0 = $.main

//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastChar = field[len - 1];
    var needsGetter = lastChar == '?' || lastChar == '=';
    var needsSetter = lastChar == '!' || lastChar == '=';
    if (needsGetter || needsSetter) field = field.substring(0, len - 1);
    if (needsGetter) {
      var getterString = "return this." + field + ";";
        prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  var getter = new Function("{ return $." + fieldName + ";}");
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=MiscEffectDemo.dart.js.map