// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"":"Object;i,list",
 get$hasNext: function() {
  return $.lt(this.i, this.list.length);
},
 next$0: function() {
  var value, t1;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  value = this.list[this.i];
  t1 = this.i;
  if (typeof t1 !== 'number')
    return this.next$0$bailout0(1, t1, value);
  this.i = t1 + 1;
  return value;
},
 next$0$bailout0: function(state0, t1, value) {
  this.i = $.add(t1, 1);
  return value;
}
};

$$.Closure = {"":"Object;",
 toString$0: function() {
  return "Closure";
}
};

$$.Dynamic_ = {"":"Object;"
};

$$.Null = {"":"Object;"
};

$$.TypeImpl = {"":"Object;typeName",
 toString$0: function() {
  return this.typeName;
},
 get$hashCode: function() {
  var t1 = this.typeName;
  return $.getInterceptor(t1).get$hashCode(t1);
},
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$TypeImpl))
    return false;
  return $.eq(this.typeName, other.typeName);
},
 is$TypeImpl: true
};

$$.ConstantMap = {"":"Object;length?,_jsObject,_lib_keys?",
 containsKey$1: function(key) {
  if ($.eqB(key, "__proto__"))
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  var t1 = this._lib_keys;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.ConstantMap_forEach_anon(f, this));
},
 get$values: function() {
  var result, t1;
  result = [];
  t1 = this._lib_keys;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.ConstantMap_values_anon(this, result));
  return result;
},
 get$isEmpty: function() {
  return $.eq(this.length, 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot modify unmodifiable Map"));
},
 operator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this._throwUnmodifiable$0();
},
 remove$1: function(key) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 is$Map: function() { return true; }
};

$$.MetaInfo = {"":"Object;_tag?,_tags,_set?"
};

$$.JSSyntaxRegExp = {"":"Object;_lib_pattern,_multiLine,_ignoreCase",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.index(m, 0);
  t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._lib_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true
};

$$._MatchImplementation = {"":"Object;pattern?,str,start?,end,_groups",
 group$1: function(index) {
  return $.index(this._groups, index);
},
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"":"Object;_re,_str",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"":"Object;_re,_str,_lib_next=,_done",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  var next = this._lib_next;
  this._lib_next = null;
  return next;
},
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._lib_next == null))
    return true;
  this._lib_next = this._re.firstMatch$1(this._str);
  if (this._lib_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"":"Object;start?,str,pattern?",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$.bool = {"":"Object;",
 is$bool: true
};

$$._DateImpl = {"":"Object;millisecondsSinceEpoch?,isUtc",
 operator$eq$1: function(other) {
  if (!(typeof other === 'object' && other !== null && !!other.is$Date))
    return false;
  return $.eq(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$lt$1: function(other) {
  return $.lt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$le$1: function(other) {
  return $.le(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$gt$1: function(other) {
  return $.gt(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 operator$ge$1: function(other) {
  return $.ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
},
 get$hashCode: function() {
  return this.millisecondsSinceEpoch;
},
 toString$0: function() {
  var t1, t2, t3, y, m, d, h, min, sec, ms;
  t1 = new $._DateImpl_toString_fourDigits();
  t2 = new $._DateImpl_toString_threeDigits();
  t3 = new $._DateImpl_toString_twoDigits();
  y = t1.call$1(this.get$year());
  m = t3.call$1(this.get$month());
  d = t3.call$1(this.get$day());
  h = t3.call$1(this.get$hour());
  min = t3.call$1(this.get$minute());
  sec = t3.call$1(this.get$second());
  ms = t2.call$1(this.get$millisecond());
  if (this.isUtc === true)
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
  else
    return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
},
 add$1: function(duration) {
  var ms, t2;
  ms = this.millisecondsSinceEpoch;
  if (typeof ms !== 'number')
    return this.add$1$bailout1(1, duration, ms);
  t2 = duration.get$inMilliseconds();
  if (typeof t2 !== 'number')
    return this.add$1$bailout1(2, ms, t2);
  return $.Date_Date$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
},
 add$1$bailout1: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      ms = env1;
      duration = env0;
      break;
    case 2:
      t2 = env1;
      ms = env0;
      break;
  }
  switch (state0) {
    case 0:
      ms = this.millisecondsSinceEpoch;
    case 1:
      state0 = 0;
      t2 = duration.get$inMilliseconds();
    case 2:
      var ms, duration, t2;
      state0 = 0;
      return $.Date_Date$fromMillisecondsSinceEpoch($.add(ms, t2), this.isUtc);
  }
},
 get$year: function() {
  return $.Primitives_getYear(this);
},
 get$month: function() {
  return $.Primitives_getMonth(this);
},
 get$day: function() {
  return $.Primitives_getDay(this);
},
 get$hour: function() {
  return $.Primitives_getHours(this);
},
 get$minute: function() {
  return $.Primitives_getMinutes(this);
},
 get$second: function() {
  return $.Primitives_getSeconds(this);
},
 get$millisecond: function() {
  return $.Primitives_getMilliseconds(this);
},
 _DateImpl$now$0: function() {
  $.Primitives_lazyAsJsDate(this);
},
 _DateImpl$fromMillisecondsSinceEpoch$2: function(millisecondsSinceEpoch, isUtc) {
  var t1 = this.millisecondsSinceEpoch;
  if ($.gtB($.getInterceptor$JSNumber(t1).abs$0(t1), 8640000000000000))
    throw $.$$throw($.ArgumentError$(t1));
  t1 = this.isUtc;
  if (t1 == null)
    throw $.$$throw($.ArgumentError$(t1));
},
 is$Date: true
};

$$.NullThrownError = {"":"Object;",
 toString$0: function() {
  return "Throw of null.";
}
};

$$.ArgumentError = {"":"Object;message",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return "Illegal argument(s): " + $.S(t1);
  return "Illegal argument(s)";
}
};

$$.RangeError = {"":"ArgumentError;message",
 toString$0: function() {
  return "RangeError: " + $.S(this.message);
}
};

$$.NoSuchMethodError = {"":"Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer("");
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0)) {
      t3 = t1.sb_1;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor$JSArray(t3);
    t5 = t1.i_2;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.Error_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  t3 = t1.sb_1;
  actualParameters = $.getInterceptor(t3).toString$0(t3);
  t1.sb_1 = $.StringBuffer_StringBuffer("");
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_1;
      $.getInterceptor$JSArray(t3).add$1(t3, ", ");
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor$JSArray(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  t1 = t1.sb_1;
  formalParameters = $.getInterceptor(t1).toString$0(t1);
  t1 = this._memberName;
  return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer("");
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0)) {
            t3 = t1.sb_1;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_1;
          $.getInterceptor$JSArray(t3).add$1(t3, $.Error_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor$JSArray(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_1) + "]";
      else {
        t3 = t1.sb_1;
        actualParameters = $.getInterceptor(t3).toString$0(t3);
        t1.sb_1 = $.StringBuffer_StringBuffer("");
        for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_1;
            $.getInterceptor$JSArray(t3).add$1(t3, ", ");
          }
          t3 = t1.sb_1;
          $.getInterceptor$JSArray(t3).add$1(t3, $.index(t2, i));
        }
        t1 = t1.sb_1;
        formalParameters = $.getInterceptor(t1).toString$0(t1);
        t1 = this._memberName;
        return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t1) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t1) + "(" + $.S(actualParameters) + ")\n" + "Found: " + $.S(t1) + "(" + $.S(formalParameters) + ")";
      }
  }
}
};

$$.UnsupportedError = {"":"Object;message?",
 toString$0: function() {
  return "Unsupported operation: " + $.S(this.get$message());
}
};

$$.UnimplementedError = {"":"Object;message?",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
}
};

$$.StateError = {"":"Object;message",
 toString$0: function() {
  return "Bad state: " + this.message;
}
};

$$.StackOverflowError = {"":"Object;",
 toString$0: function() {
  return "Stack Overflow";
}
};

$$._ExceptionImplementation = {"":"Object;message",
 toString$0: function() {
  var t1 = this.message;
  if (t1 == null)
    return "Exception";
  return "Exception: " + $.S(t1);
}
};

$$.FormatException = {"":"Object;message",
 toString$0: function() {
  return "FormatException: " + $.S(this.message);
}
};

$$.IllegalJSRegExpException = {"":"Object;_pattern,_errmsg",
 toString$0: function() {
  return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
}
};

$$.RuntimeError = {"":"Object;message",
 toString$0: function() {
  return "RuntimeError: " + this.message;
}
};

$$._HashMapImpl = {"":"Object;_keys?,_values,_loadLimit,_numberOfEntries,_numberOfDeleted",
 _probeForAdding$1: function(key) {
  var t1, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  t3 = this._keys;
  t3 = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
  if (t3 !== (t3 | 0))
    return this._probeForAdding$1$bailout(2, key, t3, t1);
  hash = (t1 & t3 - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this._probeForAdding$1$bailout(3, key, t1, insertionIndex, hash, numberOfProbes);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC4)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
    if (hash !== (hash | 0))
      return this._probeForAdding$1$bailout(4, key, insertionIndex, hash, numberOfProbes0);
  }
},
 _probeForAdding$1$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env1;
      key = env0;
      break;
    case 2:
      t1 = env2;
      t3 = env1;
      key = env0;
      break;
    case 3:
      numberOfProbes = env4;
      hash = env3;
      insertionIndex = env2;
      t1 = env1;
      key = env0;
      break;
    case 4:
      numberOfProbes0 = env3;
      hash = env2;
      insertionIndex = env1;
      key = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (key == null)
        throw $.$$throw($.ArgumentError$(null));
      t1 = $.getInterceptor(key).get$hashCode(key);
    case 1:
      state0 = 0;
      t3 = this._keys;
      t3 = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
    case 2:
      state0 = 0;
      hash = $.and(t1, $.sub(t3, 1));
      numberOfProbes = 1;
      insertionIndex = -1;
    default:
      var t1, key, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              t1 = this._keys;
            case 3:
              state0 = 0;
              existingKey = $.index(t1, hash);
              if (existingKey == null) {
                if ($.ltB(insertionIndex, 0))
                  return hash;
                return insertionIndex;
              } else if ($.eqB(existingKey, key))
                return hash;
              else if ($.ltB(insertionIndex, 0) && existingKey === $.CTC4)
                insertionIndex = hash;
              numberOfProbes0 = numberOfProbes + 1;
              t1 = this._keys;
              hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
            case 4:
              state0 = 0;
              numberOfProbes = numberOfProbes0;
          }
  }
},
 _probeForLookup$1: function(key) {
  var t1, t2, hash, numberOfProbes, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.ArgumentError$(null));
  t1 = $.getInterceptor(key).get$hashCode(key);
  t2 = this._keys;
  hash = $.and(t1, $.sub($.getInterceptor$JSStringJSArray(t2).get$length(t2), 1));
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, existingKey, numberOfProbes0, t1;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    existingKey = $.index(this._keys, hash);
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    t1 = this._keys;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, $.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, t1, numberOfFree;
  newNumberOfEntries = $.add(this._numberOfEntries, 1);
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    t1 = this._keys;
    this._grow$1($.mul($.getInterceptor$JSStringJSArray(t1).get$length(t1), 2));
    return;
  }
  t1 = this._keys;
  numberOfFree = $.sub($.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), newNumberOfEntries), this._numberOfDeleted);
  if ($.gtB(this._numberOfDeleted, numberOfFree)) {
    t1 = this._keys;
    this._grow$1($.getInterceptor$JSStringJSArray(t1).get$length(t1));
  }
},
 _grow$1: function(newCapacity) {
  var t1, capacity, oldKeys, oldValues, t4, i, key, value, newIndex;
  t1 = this._keys;
  capacity = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof capacity !== 'number')
    return this._grow$1$bailout(1, newCapacity, capacity);
  this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
  oldKeys = this._keys;
  if (typeof oldKeys !== 'string' && (typeof oldKeys !== 'object' || oldKeys === null || oldKeys.constructor !== Array && !oldKeys.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(2, newCapacity, oldKeys, capacity);
  oldValues = this._values;
  if (typeof oldValues !== 'string' && (typeof oldValues !== 'object' || oldValues === null || oldValues.constructor !== Array && !oldValues.is$JavaScriptIndexingBehavior()))
    return this._grow$1$bailout(3, newCapacity, oldKeys, oldValues, capacity);
  t4 = $.List_List(newCapacity);
  $.setRuntimeTypeInfo(t4, []);
  this._keys = t4;
  t4 = $.List_List(newCapacity, $.getRuntimeTypeInfo(this)[1]);
  $.setRuntimeTypeInfo(t4, [$.getRuntimeTypeInfo(this)[1]]);
  this._values = t4;
  for (i = 0; i < capacity; ++i) {
    if (i >= oldKeys.length)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC4)
      continue;
    if (i >= oldValues.length)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    $.indexSet(this._keys, newIndex, key);
    $.indexSet(this._values, newIndex, value);
  }
  this._numberOfDeleted = 0;
},
 _grow$1$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      capacity = env1;
      newCapacity = env0;
      break;
    case 2:
      capacity = env2;
      oldKeys = env1;
      newCapacity = env0;
      break;
    case 3:
      capacity = env3;
      oldValues = env2;
      oldKeys = env1;
      newCapacity = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._keys;
      capacity = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 1:
      state0 = 0;
      this._loadLimit = $.tdiv($.mul(newCapacity, 3), 4);
      oldKeys = this._keys;
    case 2:
      state0 = 0;
      oldValues = this._values;
    case 3:
      var t1, capacity, newCapacity, oldKeys, oldValues, t4, i, key, value, newIndex;
      state0 = 0;
      t4 = $.List_List(newCapacity);
      $.setRuntimeTypeInfo(t4, []);
      this._keys = t4;
      t4 = $.List_List(newCapacity, $.getRuntimeTypeInfo(this)[1]);
      $.setRuntimeTypeInfo(t4, [$.getRuntimeTypeInfo(this)[1]]);
      this._values = t4;
      for (i = 0; $.ltB(i, capacity); ++i) {
        key = $.index(oldKeys, i);
        if (key == null || key === $.CTC4)
          continue;
        value = $.index(oldValues, i);
        newIndex = this._probeForAdding$1(key);
        $.indexSet(this._keys, newIndex, key);
        $.indexSet(this._values, newIndex, value);
      }
      this._numberOfDeleted = 0;
  }
},
 clear$0: function() {
  var t1, length$, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof length$ !== 'number')
    return this.clear$0$bailout(1, length$);
  for (i = 0; i < length$; ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 clear$0$bailout: function(state0, length$) {
  var i;
  for (i = 0; $.ltB(i, length$); ++i) {
    $.indexSet(this._keys, i, null);
    $.indexSet(this._values, i, null);
  }
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 operator$indexSet$2: function(key, value) {
  var index;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  if ($.index(this._keys, index) == null || $.index(this._keys, index) === $.CTC4)
    this._numberOfEntries = $.add(this._numberOfEntries, 1);
  $.indexSet(this._keys, index, key);
  $.indexSet(this._values, index, value);
},
 operator$index$1: function(key) {
  var index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  return $.index(this._values, index);
},
 putIfAbsent$2: function(key, ifAbsent) {
  var index, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0))
    return $.index(this._values, index);
  value = ifAbsent.call$0();
  this.operator$indexSet$2(key, value);
  return value;
},
 remove$1: function(key) {
  var index, t1, t3, value;
  index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.remove$1$bailout(1, index);
  if (index >= 0) {
    t1 = this._numberOfEntries;
    if (typeof t1 !== 'number')
      return this.remove$1$bailout(2, index, t1);
    this._numberOfEntries = t1 - 1;
    t3 = this._values;
    if (typeof t3 !== 'string' && (typeof t3 !== 'object' || t3 === null || t3.constructor !== Array && !t3.is$JavaScriptIndexingBehavior()))
      return this.remove$1$bailout(3, index, t3);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t3.length)
      throw $.ioore(index);
    value = t3[index];
    if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
      return this.remove$1$bailout(4, value, index, t3);
    if (index >= t3.length)
      throw $.ioore(index);
    t3[index] = null;
    t3 = this._keys;
    if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
      return this.remove$1$bailout(5, value, index, t3);
    if (index >= t3.length)
      throw $.ioore(index);
    t3[index] = $.CTC4;
    t3 = this._numberOfDeleted;
    if (typeof t3 !== 'number')
      return this.remove$1$bailout(6, t3, value);
    this._numberOfDeleted = t3 + 1;
    return value;
  }
  return;
},
 remove$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      index = env0;
      break;
    case 2:
      t1 = env1;
      index = env0;
      break;
    case 3:
      t3 = env1;
      index = env0;
      break;
    case 4:
      t3 = env2;
      index = env1;
      value = env0;
      break;
    case 5:
      t3 = env2;
      index = env1;
      value = env0;
      break;
    case 6:
      value = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      index = this._probeForLookup$1(key);
    case 1:
      state0 = 0;
    default:
      var index, t1, t3, value;
      if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 3 || state0 === 2 || state0 === 0 && $.geB(index, 0))
        switch (state0) {
          case 0:
            t1 = this._numberOfEntries;
          case 2:
            state0 = 0;
            this._numberOfEntries = $.sub(t1, 1);
            t3 = this._values;
          case 3:
            state0 = 0;
            value = $.index(t3, index);
            t3 = this._values;
          case 4:
            state0 = 0;
            $.indexSet(t3, index, null);
            t3 = this._keys;
          case 5:
            state0 = 0;
            $.indexSet(t3, index, $.CTC4);
            t3 = this._numberOfDeleted;
          case 6:
            state0 = 0;
            this._numberOfDeleted = $.add(t3, 1);
            return value;
        }
      return;
  }
},
 get$isEmpty: function() {
  return $.eq(this._numberOfEntries, 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var t1, length$, i, key;
  t1 = this._keys;
  length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  if (typeof length$ !== 'number')
    return this.forEach$1$bailout(1, f, length$);
  for (i = 0; i < length$; ++i) {
    key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC4))
      f.call$2(key, $.index(this._values, i));
  }
},
 forEach$1$bailout: function(state0, f, length$) {
  var i, key;
  for (i = 0; $.ltB(i, length$); ++i) {
    key = $.index(this._keys, i);
    if (!(key == null) && !(key === $.CTC4))
      f.call$2(key, $.index(this._values, i));
  }
},
 get$values: function() {
  var t1, list;
  t1 = {};
  list = $.List_List(this.get$length(), $.getRuntimeTypeInfo(this)[1]);
  $.setRuntimeTypeInfo(list, [$.getRuntimeTypeInfo(this)[1]]);
  t1.i_1 = 0;
  this.forEach$1(new $._HashMapImpl_values_anon(t1, list));
  return list;
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  var t1 = $.List_List(8);
  $.setRuntimeTypeInfo(t1, []);
  this._keys = t1;
  t1 = $.List_List(8, $.getRuntimeTypeInfo(this)[1]);
  $.setRuntimeTypeInfo(t1, [$.getRuntimeTypeInfo(this)[1]]);
  this._values = t1;
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"":"Object;"
};

$$._KeyValuePair = {"":"Object;key?,value="
};

$$._LinkedHashMapImpl = {"":"Object;_list,_map",
 operator$indexSet$2: function(key, value) {
  var t1;
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    t1 = this._list;
    $.getInterceptor$JSArray(t1).addLast$1(t1, $._KeyValuePair$(key, value, $.getRuntimeTypeInfo(this)[0], $.getRuntimeTypeInfo(this)[1]));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 putIfAbsent$2: function(key, ifAbsent) {
  var value = this.operator$index$1(key);
  if (this.operator$index$1(key) == null && this._map.containsKey$1(key) !== true) {
    value = ifAbsent.call$0();
    this.operator$indexSet$2(key, value);
  }
  return value;
},
 get$values: function() {
  var t1, list, t2;
  t1 = {};
  list = $.List_List(this.get$length(), $.getRuntimeTypeInfo(this)[1]);
  $.setRuntimeTypeInfo(list, [$.getRuntimeTypeInfo(this)[1]]);
  t1.index_1 = 0;
  t2 = this._list;
  $.getInterceptor$JSArray(t2).forEach$1(t2, new $._LinkedHashMapImpl_values_anon(t1, list));
  return list;
},
 forEach$1: function(f) {
  var t1 = this._list;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  var t1 = this._map;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._list;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  var t1, t2, t3;
  t1 = $.getRuntimeTypeInfo(this)[0];
  t2 = $.getRuntimeTypeInfo(this);
  this._map = $.HashMap_HashMap(t1, [$.DoubleLinkedQueueEntry, [$._KeyValuePair, t2[0], t2[1]]]);
  t3 = $.getRuntimeTypeInfo(this);
  this._list = $.DoubleLinkedQueue$([$._KeyValuePair, t3[0], t3[1]]);
},
 is$Map: function() { return true; }
};

$$.Object = {"":";",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
},
 get$runtimeType: function() {
  return $.TypeImpl$($.getRuntimeTypeString(this));
}
};

$$.DoubleLinkedQueueEntry = {"":"Object;_previous=,_next=,_element?",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e, $.getRuntimeTypeInfo(this)[0])._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"":"DoubleLinkedQueueEntry;_previous,_next,_element",
 remove$0: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$("Empty queue"));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"":"Object;_sentinel",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel.get$_previous().remove$0();
},
 get$last: function() {
  return this._sentinel.get$_previous().get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1, t2;
  t1 = this._sentinel;
  t2 = t1.get$_next();
  return t2 == null ? t1 == null : t2 === t1;
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1.set$_next(t1);
  t1 = this._sentinel;
  t1.set$_previous(t1);
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 forEach$1: function(f) {
  var entry, t1, nextEntry;
  entry = this._sentinel.get$_next();
  for (; t1 = this._sentinel, !(entry == null ? t1 == null : entry === t1); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 filter$1: function(f) {
  var other, entry, t1, t2, nextEntry;
  other = $.Queue_Queue($.getRuntimeTypeInfo(this)[0]);
  entry = this._sentinel.get$_next();
  for (t1 = $.getInterceptor$JSArray(other); t2 = this._sentinel, !(entry == null ? t2 == null : entry === t2); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      t1.addLast$1(other, entry.get$_element());
  }
  return other;
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel, $.getRuntimeTypeInfo(this)[0]);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$($.getRuntimeTypeInfo(this)[0]);
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"":"Object;_sentinel,_currentEntry",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._currentEntry.get$_next();
  t2 = this._sentinel;
  return !(t1 == null ? t2 == null : t1 === t2);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$.Sequence = {"":"Object;"
};

$$.SequenceCollection = {"":"Object;",
 iterator$0: function() {
  return $.SequenceIterator$(this.get$sequence());
},
 forEach$1: function(f) {
  var i;
  for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(this).get$length(this)); ++i)
    f.call$1(this.operator$index$1(i));
},
 contains$1: function(value) {
  var i, t1;
  i = 0;
  while (true) {
    t1 = this.get$sequence();
    t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof t1 !== 'number')
      return this.contains$1$bailout(1, value, t1, i);
    if (!(i < t1))
      break;
    t1 = this.get$sequence();
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.contains$1$bailout(2, value, t1, i);
    if (i >= t1.length)
      throw $.ioore(i);
    if ($.eqB(t1[i], value))
      return true;
    ++i;
  }
  return false;
},
 contains$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      i = env2;
      t1 = env1;
      value = env0;
      break;
    case 2:
      i = env2;
      t1 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
      i = 0;
    default:
      var i, t1, value;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t1 = this.get$sequence();
              t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
            case 1:
              state0 = 0;
              if (!$.ltB(i, t1))
                break L0;
              t1 = this.get$sequence();
            case 2:
              state0 = 0;
              if ($.eqB($.index(t1, i), value))
                return true;
              ++i;
          }
      return false;
  }
},
 filter$1: function(f) {
  var result, i, element;
  result = [];
  for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(this).get$length(this)); ++i) {
    element = this.operator$index$1(i);
    if (f.call$1(element) === true)
      result.push(element);
  }
  return result;
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 is$Collection: function() { return true; }
};

$$.SequenceList = {"":"SequenceCollection;sequence?",
 get$length: function() {
  var t1 = this.sequence;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return this.sequence.operator$index$1(index);
},
 indexOf$2: function(value, start) {
  var t1, i, t2;
  if (typeof start !== 'number')
    return this.indexOf$2$bailout(1, value, start);
  t1 = this.sequence;
  i = start;
  while (true) {
    t2 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof t2 !== 'number')
      return this.indexOf$2$bailout(2, value, t2, t1, i);
    if (!(i < t2))
      break;
    if ($.eqB(t1.operator$index$1(i), value))
      return i;
    ++i;
  }
  return -1;
},
 indexOf$2$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      start = env1;
      value = env0;
      break;
    case 2:
      i = env3;
      t1 = env2;
      t2 = env1;
      value = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.sequence;
      i = start;
    case 2:
      var start, value, t1, i, t2;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t2 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
            case 2:
              state0 = 0;
              if (!$.ltB(i, t2))
                break L0;
              if ($.eqB(t1.operator$index$1(i), value))
                return i;
              i = $.add(i, 1);
          }
      return -1;
  }
},
 indexOf$1: function(value) {
  return this.indexOf$2(value, 0);
},
 get$last: function() {
  var t1 = this.sequence;
  return t1.operator$index$1($.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1));
},
 getRange$2: function(start, length$) {
  var result, t1, i;
  if (typeof start !== 'number')
    return this.getRange$2$bailout(1, start, length$);
  if (typeof length$ !== 'number')
    return this.getRange$2$bailout(1, start, length$);
  result = [];
  for (t1 = this.sequence, i = 0; i < length$; ++i)
    result.push(t1.operator$index$1(start + i));
  return result;
},
 getRange$2$bailout: function(state0, start, length$) {
  var result, t1, i;
  result = [];
  for (t1 = this.sequence, i = 0; $.ltB(i, length$); ++i)
    result.push(t1.operator$index$1($.add(start, i)));
  return result;
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot modify an unmodifiable list"));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$("Cannot change the length of an unmodifiable list"));
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to an unmodifiable list"));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear an unmodifiable list"));
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 removeAt$1: function(index) {
  throw $.$$throw($.UnsupportedError$("Cannot remove in an unmodifiable list"));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot remove in an unmodifiable list"));
},
 removeRange$2: function(start, length$) {
  throw $.$$throw($.UnsupportedError$("Cannot remove in an unmodifiable list"));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.SequenceIterator = {"":"Object;_sequence,_position",
 get$hasNext: function() {
  var t1, t2;
  t1 = this._position;
  t2 = this._sequence;
  return $.lt(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2));
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() === true) {
    t1 = this._sequence;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.next$0$bailout2(1, t1);
    t3 = this._position;
    if (typeof t3 !== 'number')
      return this.next$0$bailout2(2, t1, t3);
    this._position = t3 + 1;
    if (t3 !== (t3 | 0))
      throw $.iae(t3);
    if (t3 < 0 || t3 >= t1.length)
      throw $.ioore(t3);
    return t1[t3];
  }
  throw $.$$throw($.StateError$("No more elements"));
},
 next$0$bailout2: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var t1, t3;
      if (state0 === 2 || state0 === 1 || state0 === 0 && this.get$hasNext() === true)
        switch (state0) {
          case 0:
            t1 = this._sequence;
          case 1:
            state0 = 0;
            t3 = this._position;
          case 2:
            state0 = 0;
            this._position = $.add(t3, 1);
            return $.index(t1, t3);
        }
      throw $.$$throw($.StateError$("No more elements"));
  }
}
};

$$._HashSetImpl = {"":"Object;_backingMap?",
 clear$0: function() {
  var t1 = this._backingMap;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 add$1: function(value) {
  var t1 = this._backingMap;
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.add$1$bailout0(1, t1, value);
  if (value !== (value | 0))
    throw $.iae(value);
  if (value < 0 || value >= t1.length)
    throw $.ioore(value);
  t1[value] = value;
},
 add$1$bailout0: function(state0, t1, value) {
  $.indexSet(t1, value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, new $._HashSetImpl_addAll_anon(this));
},
 removeAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, new $._HashSetImpl_removeAll_anon(this));
},
 forEach$1: function(f) {
  var t1 = this._backingMap;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._HashSetImpl_forEach_anon(f));
},
 filter$1: function(f) {
  var result, t1;
  result = $.Set_Set($.getRuntimeTypeInfo(this)[0]);
  t1 = this._backingMap;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._HashSetImpl_filter_anon(f, result));
  return result;
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 get$length: function() {
  var t1 = this._backingMap;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 iterator$0: function() {
  return $._HashSetIterator$(this, $.getRuntimeTypeInfo(this)[0]);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$($.getRuntimeTypeInfo(this)[0], $.getRuntimeTypeInfo(this)[0]);
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"":"Object;_entries,_nextValidIndex",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  t3 = $.getInterceptor$JSStringJSArray(t2);
  if ($.geB(t1, t3.get$length(t2)))
    return false;
  if ($.index(t2, this._nextValidIndex) === $.CTC4)
    this._advance$0();
  return $.lt(this._nextValidIndex, t3.get$length(t2));
},
 next$0: function() {
  var t1, t3, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout3(1, t1);
  t3 = this._nextValidIndex;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  res = t1[t3];
  this._advance$0();
  return res;
},
 next$0$bailout3: function(state0, t1) {
  var res = $.index(t1, this._nextValidIndex);
  this._advance$0();
  return res;
},
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._entries;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._advance$0$bailout(1, t1);
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= t1.length)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC4);
},
 _advance$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      length$ = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._entries;
    case 1:
      state0 = 0;
      length$ = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    case 2:
      var t1, length$, t2, entry;
      state0 = 0;
      do {
        t2 = this._nextValidIndex + 1;
        this._nextValidIndex = t2;
        if ($.geB(t2, length$))
          break;
        entry = $.index(t1, this._nextValidIndex);
      } while (entry == null || entry === $.CTC4);
  }
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$._StringBufferImpl = {"":"Object;_buffer,_length",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.getInterceptor(obj).toString$0(obj);
  if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, str, t1);
  t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t3, t1);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      str = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.getInterceptor(obj).toString$0(obj);
      if (str == null || $.getInterceptor$JSStringJSArray(str).get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor$JSArray(t1).add$1(t1, str);
      t1 = this._length;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(str).get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(objects).iterator$0(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  var t1 = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(t1, ['$.String']);
  this._buffer = t1;
  this._length = 0;
  return this;
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 toString$0: function() {
  var t1, result;
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 0))
    return "";
  t1 = this._buffer;
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), "");
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor$JSArray(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"":"Object;",
 iterator$0: function(receiver) {
  return receiver.iterator$0();
},
 add$1: function(receiver, a0) {
  return receiver.add$1(a0);
},
 endsWith$1: function(receiver, a0) {
  return receiver.endsWith$1(a0);
},
 get$length: function(receiver) {
  return receiver.get$length();
},
 charCodeAt$1: function(receiver, a0) {
  return receiver.charCodeAt$1(a0);
},
 replaceAll$2: function(receiver, a0, a1) {
  return receiver.replaceAll$2(a0, a1);
},
 ceil$0: function(receiver) {
  return receiver.ceil$0();
},
 substring$1: function(receiver, a0) {
  return receiver.substring$1(a0);
},
 substring$2: function(receiver, a0, a1) {
  return receiver.substring$2(a0, a1);
},
 contains$1: function(receiver, a0) {
  return receiver.contains$1(a0);
},
 get$last: function(receiver) {
  return receiver.get$last();
},
 set$length: function(receiver, value) {
  return receiver.set$length(value);
},
 contains$2: function(receiver, a0, a1) {
  return receiver.contains$2(a0, a1);
},
 get$isNaN: function(receiver) {
  return receiver.get$isNaN();
},
 toString$0: function(receiver) {
  return receiver.toString$0();
},
 forEach$1: function(receiver, a0) {
  return receiver.forEach$1(a0);
},
 indexOf$2: function(receiver, a0, a1) {
  return receiver.indexOf$2(a0, a1);
},
 toInt$0: function(receiver) {
  return receiver.toInt$0();
},
 get$filter: function(receiver) {
  return receiver.get$filter();
},
 get$isEmpty: function(receiver) {
  return receiver.get$isEmpty();
},
 addLast$1: function(receiver, a0) {
  return receiver.addLast$1(a0);
},
 getRange$2: function(receiver, a0, a1) {
  return receiver.getRange$2(a0, a1);
},
 toLowerCase$0: function(receiver) {
  return receiver.toLowerCase$0();
},
 isEmpty$1: function(receiver, a0) {
  return receiver.isEmpty$1(a0);
},
 floor$0: function(receiver) {
  return receiver.floor$0();
},
 get$hashCode: function(receiver) {
  return receiver.get$hashCode();
},
 filter$1: function(receiver, a0) {
  return receiver.filter$1(a0);
},
 removeRange$2: function(receiver, a0, a1) {
  return receiver.removeRange$2(a0, a1);
},
 clear$0: function(receiver) {
  return receiver.clear$0();
},
 addAll$1: function(receiver, a0) {
  return receiver.addAll$1(a0);
},
 get$isInfinite: function(receiver) {
  return receiver.get$isInfinite();
},
 trim$0: function(receiver) {
  return receiver.trim$0();
},
 split$1: function(receiver, a0) {
  return receiver.split$1(a0);
},
 abs$0: function(receiver) {
  return receiver.abs$0();
},
 get$clear: function(receiver) {
  return receiver.get$clear();
},
 truncate$0: function(receiver) {
  return receiver.truncate$0();
},
 allMatches$1: function(receiver, a0) {
  return receiver.allMatches$1(a0);
},
 removeLast$0: function(receiver) {
  return receiver.removeLast$0();
},
 startsWith$1: function(receiver, a0) {
  return receiver.startsWith$1(a0);
},
 indexOf$1: function(receiver, a0) {
  return receiver.indexOf$1(a0);
},
 get$isNegative: function(receiver) {
  return receiver.get$isNegative();
},
 round$0: function(receiver) {
  return receiver.round$0();
},
 removeAt$1: function(receiver, a0) {
  return receiver.removeAt$1(a0);
}
};

$$.JSFunction = {"":"Object;",
 toString$0: function(receiver) {
  return "Closure";
}
};

$$.JSBool = {"":"Object;",
 toString$0: function(receiver) {
  return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver ? 519018 : 218159;
},
 is$bool: true
};

$$.JSNull = {"":"Object;",
 toString$0: function(receiver) {
  return "null";
},
 get$hashCode: function(receiver) {
  return 0;
}
};

$$.JSArray = {"":"Object;",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, "add");
  receiver.push(value);
},
 removeAt$1: function(receiver, index) {
  if (!(typeof index === 'number' && Math.floor(index) === index))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0 || index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  $.checkGrowable(receiver, "removeAt");
  return receiver.splice(index, 1)[0];
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, "removeLast");
  if (receiver.length === 0)
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 get$filter: function(receiver) { return new $.BoundClosure1(this, receiver, 'filter$1'); },
 addAll$1: function(receiver, collection) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection); t1.get$hasNext() === true;)
    $.CTC0.add$1(receiver, t1.next$0());
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, "addLast");
  receiver.push(value);
},
 clear$0: function(receiver) {
  this.set$length(receiver, 0);
},
 get$clear: function(receiver) { return new $.BoundClosure2(this, receiver, 'clear$0'); },
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if (end > receiver.length)
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 get$last: function(receiver) {
  var t1, t2;
  t1 = receiver.length;
  t2 = t1 - 1;
  if (t2 < 0)
    throw $.ioore(t2);
  return receiver[t2];
},
 removeRange$2: function(receiver, start, length$) {
  var receiverLength, t1, t2;
  $.checkGrowable(receiver, "removeRange");
  if (length$ === 0)
    return;
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  receiverLength = receiver.length;
  if (start < 0 || start >= receiverLength)
    throw $.$$throw($.RangeError$value(start));
  t1 = start + length$;
  if (t1 > receiverLength)
    throw $.$$throw($.RangeError$value(t1));
  t2 = receiverLength - length$;
  $.Arrays_copy(receiver, t1, receiver, start, t2 - start);
  $.CTC0.set$length(receiver, t2);
},
 indexOf$2: function(receiver, element, start) {
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  return $.Arrays_indexOf(receiver, element, start, receiver.length);
},
 indexOf$1: function($receiver, element) {
  return this.indexOf$2($receiver, element, 0);
},
 contains$1: function(receiver, other) {
  var i;
  for (i = 0; i < receiver.length; ++i)
    if ($.eqB(other, receiver[i]))
      return true;
  return false;
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 isEmpty$1: function($receiver, arg0) {
  return this.get$isEmpty($receiver).call$1(arg0);
},
 toString$0: function(receiver) {
  return $.Collections_collectionToString(receiver);
},
 iterator$0: function(receiver) {
  return $.ListIterator$(receiver);
},
 get$hashCode: function(receiver) {
  return $.Primitives_objectHashCode(receiver);
},
 get$length: function(receiver) {
  return receiver.length;
},
 set$length: function(receiver, newLength) {
  if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
    throw $.$$throw($.ArgumentError$(newLength));
  if (newLength < 0)
    throw $.$$throw($.RangeError$value(newLength));
  $.checkGrowable(receiver, "set length");
  receiver.length = newLength;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSNumber = {"":"Object;",
 get$isNegative: function(receiver) {
  return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
},
 get$isNaN: function(receiver) {
  return isNaN(receiver);
},
 abs$0: function(receiver) {
  return Math.abs(receiver);
},
 toInt$0: function(receiver) {
  var truncated;
  if (this.get$isNaN(receiver) === true)
    throw $.$$throw($.FormatException$("NaN"));
  if (this.get$isInfinite(receiver) === true)
    throw $.$$throw($.FormatException$("Infinity"));
  truncated = this.truncate$0(receiver);
  return truncated == -0.0 ? 0 : truncated;
},
 ceil$0: function(receiver) {
  return Math.ceil(receiver);
},
 floor$0: function(receiver) {
  return Math.floor(receiver);
},
 get$isInfinite: function(receiver) {
  return receiver == Infinity || receiver == -Infinity;
},
 round$0: function(receiver) {
  if (receiver < 0)
    return -Math.round(-receiver);
  else
    return Math.round(receiver);
},
 truncate$0: function(receiver) {
  return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
},
 toString$0: function(receiver) {
  if (receiver === 0 && (1 / receiver) < 0)
    return "-0.0";
  else
    return String(receiver);
},
 get$hashCode: function(receiver) {
  return receiver & 536870911;
}
};

$$.JSInt = {"":"JSNumber;"
};

$$.JSDouble = {"":"JSNumber;"
};

$$.JSString = {"":"Object;",
 charCodeAt$1: function(receiver, index) {
  if (!(typeof index === 'number'))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if (index >= receiver.length)
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength, t1;
  $.checkString(other);
  otherLength = other.length;
  t1 = receiver.length;
  if (otherLength > t1)
    return false;
  return other === this.substring$1(receiver, t1 - otherLength);
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 split$1: function(receiver, pattern) {
  $.checkNull(pattern);
  return receiver.split(pattern);
},
 startsWith$1: function(receiver, other) {
  var otherLength;
  $.checkString(other);
  otherLength = other.length;
  if (otherLength > receiver.length)
    return false;
  return other == receiver.substring(0, otherLength);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = receiver.length;
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, receiver.length))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($receiver, startIndex) {
  return this.substring$2($receiver, startIndex, null);
},
 toLowerCase$0: function(receiver) {
  return receiver.toLowerCase();
},
 trim$0: function(receiver) {
  return receiver.trim();
},
 indexOf$2: function(receiver, other, start) {
  $.checkNull(other);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof other === 'string'))
    throw $.$$throw($.ArgumentError$(other));
  if (start < 0)
    return -1;
  return receiver.indexOf(other, start);
},
 indexOf$1: function($receiver, other) {
  return this.indexOf$2($receiver, other, 0);
},
 contains$2: function(receiver, other, startIndex) {
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
},
 contains$1: function($receiver, other) {
  return this.contains$2($receiver, other, 0);
},
 get$isEmpty: function(receiver) {
  return receiver.length === 0;
},
 isEmpty$1: function($receiver, arg0) {
  return this.get$isEmpty($receiver).call$1(arg0);
},
 toString$0: function(receiver) {
  return receiver;
},
 get$hashCode: function(receiver) {
  var hash, i, hash0, hash1;
  for (hash = 0, i = 0; i < receiver.length; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
},
 get$length: function(receiver) {
  return receiver.length;
},
 is$String: true
};

$$.Todo = {"":"Object;title=,completed=",
 toJson$0: function() {
  return $.makeLiteralMap(["title", this.title, "completed", this.completed]);
}
};

$$.TodoAppControl = {"":"Control;_todos,_completedCount=,view,template",
 get$todos: function() {
  return this._todos;
},
 get$completedCount: function() {
  return this._completedCount;
},
 get$activeCount: function() {
  var t1 = this._todos;
  return $.sub($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._completedCount);
},
 get$input: function() {
  return this.view.query$1("#new-todo");
},
 enterNewTodo$1: function(event$) {
  var t1, title;
  if ($.eqB(event$.get$keyCode(), 13)) {
    t1 = this.get$input().get$value();
    title = $.getInterceptor$JSString(t1).trim$0(t1);
    if ($.getInterceptor$JSStringJSArray(title).get$isEmpty(title) !== true) {
      t1 = this._todos;
      $.getInterceptor$JSArray(t1).add$1(t1, $.Todo$(title, false));
      t1 = this._todos;
      $.indexSet($.window().get$localStorage(), "todos-rikulo", $.JSON_stringify(t1));
      this.render$0();
      this.get$input().get$node().focus$0();
    }
  }
},
 selectAll$1: function(event$) {
  var completed, t1;
  completed = event$.get$value();
  t1 = this._todos;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.TodoAppControl_selectAll_anon(completed));
  if (completed === true) {
    t1 = this._todos;
    t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
  } else
    t1 = 0;
  this._completedCount = t1;
  t1 = this._todos;
  $.indexSet($.window().get$localStorage(), "todos-rikulo", $.JSON_stringify(t1));
  this.render$0();
},
 clearCompleted$1: function(event$) {
  var t1, t2;
  t1 = this._todos;
  this._todos = $.getInterceptor$JSArray(t1).filter$1(t1, new $.TodoAppControl_clearCompleted_anon());
  this._completedCount = 0;
  t2 = this._todos;
  $.indexSet($.window().get$localStorage(), "todos-rikulo", $.JSON_stringify(t2));
  this.render$0();
},
 increaseCompleted$1: function(completed) {
  var t1, t2, t3;
  t1 = this._completedCount;
  t2 = completed === true ? 1 : -1;
  this._completedCount = $.add(t1, t2);
  t3 = this._todos;
  $.indexSet($.window().get$localStorage(), "todos-rikulo", $.JSON_stringify(t3));
  this.render$0();
},
 destroy$1: function(t) {
  var t1 = this._todos;
  if ($.getInterceptor$JSArray(t1).removeAt$1(t1, $.getInterceptor$JSStringJSArray(t1).indexOf$1(t1, t)).get$completed() === true)
    this._completedCount = $.sub(this._completedCount, 1);
  t1 = this._todos;
  $.indexSet($.window().get$localStorage(), "todos-rikulo", $.JSON_stringify(t1));
  this.render$0();
},
 save$0: function() {
  var t1 = this._todos;
  $.indexSet($.window().get$localStorage(), "todos-rikulo", $.JSON_stringify(t1));
  return;
},
 TodoAppControl$1: function(_todos) {
  var t1;
  this._completedCount = 0;
  t1 = this._todos;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.anon10(this));
}
};

$$.TodoItemControl = {"":"Control;_appc,_todo,view,template",
 get$input: function() {
  return this.view.query$1("TextBox.edit");
},
 get$label: function() {
  return this.view.query$1("TextView.title");
},
 toggleCompleted$1: function(event$) {
  var t1, t2;
  t1 = this._appc;
  t2 = event$.get$value();
  this._todo.set$completed(t2);
  t1.increaseCompleted$1(t2);
},
 editTitle$1: function(event$) {
  var t1 = this.view.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "editing");
  this.get$input().get$node().focus$0();
},
 enterTitle$1: function(event$) {
  if ($.eqB(event$.get$keyCode(), 13))
    this.get$input().get$node().blur$0();
},
 submitTitle$1: function(event$) {
  var t1, title, t2, t3;
  t1 = this.get$input().get$value();
  title = $.getInterceptor$JSString(t1).trim$0(t1);
  t1 = $.getInterceptor$JSStringJSArray(title).get$isEmpty(title) !== true;
  t2 = this._todo;
  t3 = this._appc;
  if (t1) {
    t2.set$title(title);
    this.get$label().set$text(title);
    t3.save$0();
    this.view.get$classes().remove$1("editing");
  } else
    t3.destroy$1(t2);
},
 destroy$1: function(event$) {
  return this._appc.destroy$1(this._todo);
}
};

$$.BodyElementEvents = {"":"ElementEvents;_ptr",
 get$blur: function() {
  return this.operator$index$1("blur");
},
 blur$0: function() {
  return this.get$blur().call$0();
},
 get$focus: function() {
  return this.operator$index$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
},
 get$resize: function() {
  return this.operator$index$1("resize");
}
};

$$.DocumentEvents = {"":"ElementEvents;_ptr"
};

$$._FrozenCssClassSet = {"":"CssClassSet;",
 writeClasses$1: function(s) {
  throw $.$$throw($.UnsupportedError$("frozen class set cannot be modified"));
},
 readClasses$0: function() {
  return $.Set_Set('$.String');
}
};

$$._ChildrenElementList = {"":"Object;_lib0_element?,_childElements",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $.List_List(t3);
  $.setRuntimeTypeInfo(output, []);
  len = t1.length;
  i = 0;
  for (; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      len = env2;
      output = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._childElements;
    case 1:
      state0 = 0;
      t3 = $.getInterceptor$JSStringJSArray(t1);
      output = $.List_List(t3.get$length(t1));
      $.setRuntimeTypeInfo(output, []);
      len = t3.get$length(t1);
    case 2:
      var t1, t3, output, len, i, t2;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i) {
        t2 = $.index(t1, i);
        if (i >= output.length)
          throw $.ioore(i);
        output[i] = t2;
      }
      return output;
  }
},
 contains$1: function(element) {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this._childElements, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(f, output);
  for (t2 = this._childElements, t2 = $.getInterceptor$JSArray(t2).iterator$0(t2); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return this._lib0_element.firstElementChild == null;
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 get$length: function() {
  var t1 = this._childElements;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 operator$indexSet$2: function(index, value) {
  this._lib0_element.$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 add$1: function(value) {
  this._lib0_element.$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._lib0_element.$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  var t1 = this._toList$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._lib0_element; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnimplementedError$(null));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 clear$0: function() {
  this._lib0_element.textContent = "";
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 removeAt$1: function(index) {
  var result = this.operator$index$1(index);
  if (!(result == null))
    this._lib0_element.$dom_removeChild$1(result);
  return result;
},
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    this._lib0_element.$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._lib0_element.lastElementChild;
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"":"Object;_nodeList",
 contains$1: function(element) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = this.iterator$0(); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      out.push(t2);
  }
  return out;
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 get$length: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 set$length: function(newLength) {
  var t1 = this._nodeList;
  $.getInterceptor$JSArray(t1).set$length(t1, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(""));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$(""));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  var t1 = this._nodeList;
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 removeAt$1: function(index) {
  throw $.$$throw($.UnsupportedError$(""));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(""));
},
 get$last: function() {
  var t1 = this._nodeList;
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"":"Object;_lib0_list,_index",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._lib0_list;
  t2 = this._index;
  if (typeof t2 !== 'number')
    return this.next$0$bailout1(1, t2, t1);
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 next$0$bailout1: function(state0, t2, t1) {
  this._index = $.add(t2, 1);
  return t1.operator$index$1(t2);
},
 get$hasNext: function() {
  var t1, t2;
  t1 = this._index;
  t2 = this._lib0_list;
  return $.lt(t1, $.getInterceptor$JSStringJSArray(t2).get$length(t2));
}
};

$$._ElementCssClassSet = {"":"CssClassSet;_lib0_element?",
 readClasses$0: function() {
  var s, classname, t1, t2, t3, trimmed;
  s = $.Set_Set('$.String');
  classname = this._lib0_element.className;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list, t1;
  list = $.List_List$from(s);
  $.setRuntimeTypeInfo(list, []);
  t1 = $.Strings_join(list, " ");
  this._lib0_element.className = t1;
}
};

$$.ElementEvents = {"":"Events;_ptr",
 get$blur: function() {
  return this.operator$index$1("blur");
},
 blur$0: function() {
  return this.get$blur().call$0();
},
 get$focus: function() {
  return this.operator$index$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
},
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$touchStart: function() {
  return this.operator$index$1("touchstart");
}
};

$$.Events = {"":"Object;_ptr?",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"":"Object;_ptr?,_type",
 add$2: function(listener, useCapture) {
  this._ptr.$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener, false);
},
 remove$2: function(listener, useCapture) {
  this._ptr.$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener, false);
}
};

$$.FrameSetElementEvents = {"":"ElementEvents;_ptr",
 get$blur: function() {
  return this.operator$index$1("blur");
},
 blur$0: function() {
  return this.get$blur().call$0();
},
 get$focus: function() {
  return this.operator$index$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
},
 get$resize: function() {
  return this.operator$index$1("resize");
}
};

$$.InputElementEvents = {"":"ElementEvents;_ptr"
};

$$.LocalWindowEvents = {"":"Events;_ptr",
 get$blur: function() {
  return this.operator$index$1("blur");
},
 blur$0: function() {
  return this.get$blur().call$0();
},
 get$focus: function() {
  return this.operator$index$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
},
 get$mouseDown: function() {
  return this.operator$index$1("mousedown");
},
 get$resize: function() {
  return this.operator$index$1("resize");
},
 get$touchStart: function() {
  return this.operator$index$1("touchstart");
}
};

$$.MediaElementEvents = {"":"ElementEvents;_ptr"
};

$$._ChildNodeListLazy = {"":"Object;_this",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(collection).iterator$0(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 removeAt$1: function(index) {
  var result = this.operator$index$1(index);
  if (!(result == null))
    this._this.$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.textContent = "";
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 operator$indexSet$2: function(index, value) {
  this._this.$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 get$length: function() {
  var t1 = this._this.childNodes;
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
},
 operator$index$1: function(index) {
  return $.index(this._this.childNodes, index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._AttributeMap = {"":"Object;_lib0_element?",
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.containsKey$1(key) !== true)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 clear$0: function() {
  for (var t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    this.remove$1(t1.next$0());
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 forEach$1: function(f) {
  var t1, t2;
  for (t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    f.call$2(t2, this.operator$index$1(t2));
  }
},
 get$keys: function() {
  var attributes, keys, len, i;
  attributes = this._lib0_element.attributes;
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$keys$bailout(1, attributes);
  keys = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(keys, ['$.String']);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    if (this._matches$1(attributes[i]) === true) {
      if (i >= attributes.length)
        throw $.ioore(i);
      keys.push(attributes[i].get$$$dom_localName());
    }
  }
  return keys;
},
 get$keys$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      keys = env2;
      attributes = env1;
      len = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._lib0_element.attributes;
    case 1:
      state0 = 0;
      keys = $.List_List(null, '$.String');
      $.setRuntimeTypeInfo(keys, ['$.String']);
      len = $.getInterceptor$JSStringJSArray(attributes).get$length(attributes);
    case 2:
      var attributes, keys, len, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i)
        if (this._matches$1($.index(attributes, i)) === true)
          keys.push($.index(attributes, i).get$$$dom_localName());
      return keys;
  }
},
 get$values: function() {
  var attributes, values, len, i;
  attributes = this._lib0_element.attributes;
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.get$values$bailout(1, attributes);
  values = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(values, ['$.String']);
  len = attributes.length;
  i = 0;
  for (; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    if (this._matches$1(attributes[i]) === true) {
      if (i >= attributes.length)
        throw $.ioore(i);
      values.push(attributes[i].get$value());
    }
  }
  return values;
},
 get$values$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      attributes = env0;
      break;
    case 2:
      values = env2;
      attributes = env1;
      len = env0;
      break;
  }
  switch (state0) {
    case 0:
      attributes = this._lib0_element.attributes;
    case 1:
      state0 = 0;
      values = $.List_List(null, '$.String');
      $.setRuntimeTypeInfo(values, ['$.String']);
      len = $.getInterceptor$JSStringJSArray(attributes).get$length(attributes);
    case 2:
      var attributes, values, len, i;
      state0 = 0;
      i = 0;
      for (; $.ltB(i, len); ++i)
        if (this._matches$1($.index(attributes, i)) === true)
          values.push($.index(attributes, i).get$value());
      return values;
  }
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"":"_AttributeMap;_lib0_element",
 containsKey$1: function(key) {
  return this._lib0_element.$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._lib0_element.$dom_getAttribute$1(key);
},
 operator$indexSet$2: function(key, value) {
  this._lib0_element.$dom_setAttribute$2(key, $.S(value));
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._lib0_element;
  value = t1.$dom_getAttribute$1(key);
  t1.$dom_removeAttribute$1(key);
  return value;
},
 get$length: function() {
  var t1 = this.get$keys();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 _matches$1: function(node) {
  return node.get$$$dom_namespaceUri() == null;
}
};

$$._DataAttributeMap = {"":"Object;$$dom_attributes?",
 containsKey$1: function(key) {
  return this.$$dom_attributes.containsKey$1("data-" + $.S(key));
},
 operator$index$1: function(key) {
  return $.index(this.$$dom_attributes, "data-" + $.S(key));
},
 operator$indexSet$2: function(key, value) {
  $.indexSet(this.$$dom_attributes, "data-" + $.S(key), $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this.$$dom_attributes.putIfAbsent$2("data-" + $.S(key), ifAbsent);
},
 remove$1: function(key) {
  return this.$$dom_attributes.remove$1("data-" + $.S(key));
},
 clear$0: function() {
  var t1, t2;
  for (t1 = this.get$keys(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = this.$$dom_attributes; t1.get$hasNext() === true;)
    t2.remove$1("data-" + $.S(t1.next$0()));
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 forEach$1: function(f) {
  var t1 = this.$$dom_attributes;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._DataAttributeMap_forEach_anon(this, f));
},
 get$keys: function() {
  var keys, t1;
  keys = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(keys, ['$.String']);
  t1 = this.$$dom_attributes;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._DataAttributeMap_keys_anon(keys, this));
  return keys;
},
 get$values: function() {
  var values, t1;
  values = $.List_List(null, '$.String');
  $.setRuntimeTypeInfo(values, ['$.String']);
  t1 = this.$$dom_attributes;
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $._DataAttributeMap_values_anon(values, this));
  return values;
},
 get$length: function() {
  var t1 = this.get$keys();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 _matches$1: function(key) {
  return $.getInterceptor$JSString(key).startsWith$1(key, "data-");
},
 is$Map: function() { return true; }
};

$$.CssClassSet = {"":"Object;",
 toString$0: function() {
  var t1 = $.List_List$from(this.readClasses$0());
  $.setRuntimeTypeInfo(t1, []);
  return $.Strings_join(t1, " ");
},
 iterator$0: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 forEach$1: function(f) {
  var t1 = this.readClasses$0();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 get$length: function() {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 contains$1: function(value) {
  var t1 = this.readClasses$0();
  return $.getInterceptor$JSStringJSArray(t1).contains$1(t1, value);
},
 add$1: function(value) {
  this._modify$1(new $.CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s, result;
  s = this.readClasses$0();
  result = s.remove$1(value);
  this.writeClasses$1(s);
  return result;
},
 addAll$1: function(collection) {
  this._modify$1(new $.CssClassSet_addAll_anon(collection));
},
 removeAll$1: function(collection) {
  this._modify$1(new $.CssClassSet_removeAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $.CssClassSet_clear_anon());
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 _modify$1: function(f) {
  var s = this.readClasses$0();
  f.call$1(s);
  this.writeClasses$1(s);
},
 is$Collection: function() { return true; }
};

$$._DOMWindowCrossFrame = {"":"Object;_window",
 get$location: function() {
  return $._LocationCrossFrame__createSafe(this._window.location);
},
 get$parent: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.parent);
},
 get$top: function() {
  return $._DOMWindowCrossFrame__createSafe(this._window.top);
}
};

$$._LocationCrossFrame = {"":"Object;_location=",
 is$Location: function() { return true; }
};

$$._LocationWrapper = {"":"Object;_ptr?",
 toString$0: function() {
  return this._ptr.toString();
},
 is$_LocationWrapper: true,
 is$Location: function() { return true; }
};

$$.FixedSizeListIterator = {"":"_VariableSizeListIterator;_lib0_length,_array,_pos",
 get$hasNext: function() {
  return $.gt(this._lib0_length, this._pos);
}
};

$$._VariableSizeListIterator = {"":"Object;",
 get$hasNext: function() {
  var t1 = this._array;
  return $.gt($.getInterceptor$JSStringJSArray(t1).get$length(t1), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  if (typeof t3 !== 'number')
    return this.next$0$bailout(2, t3, t1);
  this._pos = t3 + 1;
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this.get$hasNext() !== true)
        throw $.$$throw($.StateError$("No more elements"));
      t1 = this._array;
    case 1:
      state0 = 0;
      t3 = this._pos;
    case 2:
      var t1, t3;
      state0 = 0;
      this._pos = $.add(t3, 1);
      return $.index(t1, t3);
  }
}
};

$$.FilteredElementList = {"":"Object;_lib7_node,_childNodes",
 get$_filtered: function() {
  var t1, t2;
  t1 = this._childNodes;
  t2 = $.List_List$from($.getInterceptor$JSArray(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
  $.setRuntimeTypeInfo(t2, []);
  return t2;
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 operator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.getInterceptor$JSStringJSArray(this).get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$("Invalid list length"));
  this.removeRange$2(newLength, $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 get$add: function() { return new $.BoundClosure0(this, 'add$1'); },
 addAll$1: function(collection) {
  $.getInterceptor$JSArray(collection).forEach$1(collection, this.get$add());
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).add$1(t1, value);
},
 contains$1: function(element) {
  var t1, t2;
  if (typeof element === 'object' && element !== null && element.is$Element()) {
    t1 = this._childNodes;
    t2 = $.getInterceptor$JSStringJSArray(t1).contains$1(t1, element) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor$JSArray(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor$JSArray(t1).clear$0(t1);
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 removeLast$0: function() {
  var result = $.getInterceptor$JSArray(this).get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 removeAt$1: function(index) {
  var result = this.operator$index$1(index);
  result.remove$0();
  return result;
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).filter$1(t1, f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 get$length: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).iterator$0(t1);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  var t1 = this.get$_filtered();
  return $.getInterceptor$JSArray(t1).get$last(t1);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JsonUnsupportedObjectError = {"":"Object;unsupportedObject,cause",
 toString$0: function() {
  if (!(this.cause == null))
    return "Calling toJson method on object failed.";
  else
    return "Object toJson method returns non-serializable value.";
}
};

$$._JsonParser = {"":"Object;json,length?,position=",
 parseToplevel$0: function() {
  var result = this.parseValue$0();
  if (!(this.token$0() == null))
    this.error$1("Junk at the end of JSON input");
  return result;
},
 parseValue$0: function() {
  var token = this.token$0();
  if (token == null)
    this.error$1("Nothing to parse");
  switch (token) {
    case 34:
      return this.parseString$0();
    case 45:
      return this.parseNumber$0();
    case 110:
      return this.expectKeyword$2("null", null);
    case 102:
      return this.expectKeyword$2("false", false);
    case 116:
      return this.expectKeyword$2("true", true);
    case 123:
      return this.parseObject$0();
    case 91:
      return this.parseList$0();
    default:
      this.error$1("Unexpected token");
  }
},
 expectKeyword$2: function(word, value) {
  var i;
  for (i = 0; i < word.length; ++i) {
    if (!$.eqB(this.char$0(), $.CTC.charCodeAt$1(word, i)))
      this.error$1("Expected keyword '" + word + "'");
    this.position = $.add(this.position, 1);
  }
  return value;
},
 parseObject$0: function() {
  var object, key, t1;
  object = $.makeLiteralMap([]);
  if (typeof object !== 'object' || object === null || (object.constructor !== Array || !!object.immutable$list) && !object.is$JavaScriptIndexingBehavior())
    return this.parseObject$0$bailout(1, object);
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1("Expected ':' when parsing object");
      this.position = $.add(this.position, 1);
      t1 = this.parseValue$0();
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= object.length)
        throw $.ioore(key);
      object[key] = t1;
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1("Expected '}' at end of object");
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseObject$0$bailout: function(state0, object) {
  var key;
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 125)) {
    for (; true;) {
      key = this.parseString$0();
      if (!$.eqB(this.token$0(), 58))
        this.error$1("Expected ':' when parsing object");
      this.position = $.add(this.position, 1);
      $.indexSet(object, key, this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 125))
      this.error$1("Expected '}' at end of object");
  }
  this.position = $.add(this.position, 1);
  return object;
},
 parseList$0: function() {
  var list = [];
  this.position = $.add(this.position, 1);
  if (!$.eqB(this.token$0(), 93)) {
    for (; true;) {
      list.push(this.parseValue$0());
      if (!$.eqB(this.token$0(), 44))
        break;
      this.position = $.add(this.position, 1);
    }
    if (!$.eqB(this.token$0(), 93))
      this.error$1("Expected ']' at end of list");
  }
  this.position = $.add(this.position, 1);
  return list;
},
 parseString$0: function(exception) {
  var charCodes, t1, t2, t3, c, codeString;
  if (!$.eqB(this.token$0(), 34))
    this.error$1("Expected string literal");
  this.position = $.add(this.position, 1);
  charCodes = $.List_List(null, '$.$int');
  $.setRuntimeTypeInfo(charCodes, ['$.$int']);
  for (t1 = this.length, t2 = this.json, t3 = $.getInterceptor$JSString(t2); true;) {
    c = this.char$0();
    if ($.eqB(c, 34)) {
      this.position = $.add(this.position, 1);
      break;
    }
    if ($.eqB(c, 92)) {
      this.position = $.add(this.position, 1);
      if ($.eqB(this.position, t1))
        this.error$1("\\ at the end of input");
      switch (this.char$0()) {
        case 34:
          c = 34;
          break;
        case 92:
          c = 92;
          break;
        case 47:
          c = 47;
          break;
        case 98:
          c = 8;
          break;
        case 110:
          c = 10;
          break;
        case 114:
          c = 13;
          break;
        case 102:
          c = 12;
          break;
        case 116:
          c = 9;
          break;
        case 117:
          if ($.gtB($.add(this.position, 5), t1))
            this.error$1("Invalid unicode esacape sequence");
          codeString = t3.substring$2(t2, $.add(this.position, 1), $.add(this.position, 5));
          try {
            c = $.int_parse("0x" + $.S(codeString));
          } catch (exception) {
            $.unwrapException(exception);
            this.error$1("Invalid unicode esacape sequence");
          }

          this.position = $.add(this.position, 4);
          break;
        default:
          this.error$1("Invalid esacape sequence in string literal");
      }
    }
    charCodes.push(c);
    this.position = $.add(this.position, 1);
  }
  return $.String_String$fromCharCodes(charCodes);
},
 parseNumber$0: function() {
  var startPos, char$, isInt, t1, number;
  if (!$.eqB(this.token$0(), 45))
    this.error$1("Expected number literal");
  startPos = this.position;
  char$ = this.char$0();
  if (char$ === 45)
    char$ = this.nextChar$0();
  if (char$ === 48)
    char$ = this.nextChar$0();
  else if ($.geB(char$, 48) && $.leB(char$, 57)) {
    char$ = this.nextChar$0();
    if (typeof char$ !== 'number')
      return this.parseNumber$0$bailout(1, startPos, char$);
    while (true) {
      if (!($.geB(char$, 48) && $.leB(char$, 57)))
        break;
      char$ = this.nextChar$0();
    }
  } else
    this.error$1("Expected digit when parsing number");
  if (char$ === 46) {
    char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(2, startPos, char$);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else {
      this.error$1("Expected digit following comma");
      isInt = true;
    }
  } else
    isInt = true;
  if (char$ === 101 || char$ === 69) {
    char$ = this.nextChar$0();
    if (char$ === 45 || char$ === 43)
      char$ = this.nextChar$0();
    if ($.geB(char$, 48) && $.leB(char$, 57)) {
      char$ = this.nextChar$0();
      if (typeof char$ !== 'number')
        return this.parseNumber$0$bailout(3, char$, startPos);
      while (true) {
        if (!($.geB(char$, 48) && $.leB(char$, 57)))
          break;
        char$ = this.nextChar$0();
      }
      isInt = false;
    } else
      this.error$1("Expected digit following 'e' or 'E'");
  }
  t1 = this.json;
  number = $.getInterceptor$JSString(t1).substring$2(t1, startPos, this.position);
  if (isInt)
    return $.int_parse(number);
  else
    return $.double_parse(number);
},
 parseNumber$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      char$ = env1;
      startPos = env0;
      break;
    case 2:
      char$ = env1;
      startPos = env0;
      break;
    case 3:
      startPos = env1;
      char$ = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (!$.eqB(this.token$0(), 45))
        this.error$1("Expected number literal");
      startPos = this.position;
      char$ = this.char$0();
      if (char$ === 45)
        char$ = this.nextChar$0();
    case 1:
      if (state0 === 0 && char$ === 48)
        char$ = this.nextChar$0();
      else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 1 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 1:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
              }
            else
              this.error$1("Expected digit when parsing number");
        }
    case 2:
      if (state0 === 2 || state0 === 0 && char$ === 46)
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
          case 2:
            if (state0 === 2 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 2:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else {
              this.error$1("Expected digit following comma");
              isInt = true;
            }
        }
      else
        isInt = true;
    case 3:
      var startPos, char$, isInt, t1, number;
      if (state0 === 3 || state0 === 0 && (char$ === 101 || char$ === 69))
        switch (state0) {
          case 0:
            char$ = this.nextChar$0();
            if (char$ === 45 || char$ === 43)
              char$ = this.nextChar$0();
          case 3:
            if (state0 === 3 || state0 === 0 && $.geB(char$, 48) && $.leB(char$, 57))
              switch (state0) {
                case 0:
                  char$ = this.nextChar$0();
                case 3:
                  state0 = 0;
                  while (true) {
                    if (!($.geB(char$, 48) && $.leB(char$, 57)))
                      break;
                    char$ = this.nextChar$0();
                  }
                  isInt = false;
              }
            else
              this.error$1("Expected digit following 'e' or 'E'");
        }
      t1 = this.json;
      number = $.getInterceptor$JSString(t1).substring$2(t1, startPos, this.position);
      if (isInt)
        return $.int_parse(number);
      else
        return $.double_parse(number);
  }
},
 char$0: function() {
  var t1, t3;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.char$0$bailout(1, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.char$0$bailout(2, t1, t3);
  if (t1 >= t3)
    this.error$1("Unexpected end of JSON stream");
  t1 = this.json;
  return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
},
 char$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      t3 = this.length;
    case 2:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        this.error$1("Unexpected end of JSON stream");
      t1 = this.json;
      return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
  }
},
 nextChar$0: function() {
  var t1, t3, t2;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(1, t1);
  this.position = t1 + 1;
  t1 = this.position;
  if (typeof t1 !== 'number')
    return this.nextChar$0$bailout(2, t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.nextChar$0$bailout(3, t1, t3);
  if (t1 >= t3)
    return 0;
  t2 = this.json;
  return $.getInterceptor$JSString(t2).charCodeAt$1(t2, t1);
},
 nextChar$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env0;
      break;
    case 3:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.position;
    case 1:
      state0 = 0;
      this.position = $.add(t1, 1);
      t1 = this.position;
    case 2:
      state0 = 0;
      t3 = this.length;
    case 3:
      var t1, t3;
      state0 = 0;
      if ($.geB(t1, t3))
        return 0;
      t1 = this.json;
      return $.getInterceptor$JSString(t1).charCodeAt$1(t1, this.position);
  }
},
 token$0: function() {
  var t1, t2, t3, t4, char$, token;
  t1 = this.json;
  t2 = $.getInterceptor$JSString(t1);
  t3 = this.length;
  if (typeof t3 !== 'number')
    return this.token$0$bailout(1, t2, t3, t1);
  for (; true;) {
    t4 = this.position;
    if (typeof t4 !== 'number')
      return this.token$0$bailout(2, t4, t2, t3, t1);
    if (t4 >= t3)
      return;
    char$ = t2.charCodeAt$1(t1, t4);
    t4 = $._JsonParser_tokens;
    if (typeof t4 !== 'string' && (typeof t4 !== 'object' || t4 === null || t4.constructor !== Array && !t4.is$JavaScriptIndexingBehavior()))
      return this.token$0$bailout(3, t2, t3, char$, t1, t4);
    if (char$ !== (char$ | 0))
      throw $.iae(char$);
    if (char$ < 0 || char$ >= t4.length)
      throw $.ioore(char$);
    token = t4[char$];
    if (token === 32) {
      t4 = this.position;
      if (typeof t4 !== 'number')
        return this.token$0$bailout(4, t2, t3, t1, t4);
      this.position = t4 + 1;
      continue;
    }
    if (token == null)
      return 0;
    return token;
  }
},
 token$0$bailout: function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env2;
      t3 = env1;
      t2 = env0;
      break;
    case 2:
      t1 = env3;
      t3 = env2;
      t2 = env1;
      t4 = env0;
      break;
    case 3:
      t4 = env4;
      t1 = env3;
      char$ = env2;
      t3 = env1;
      t2 = env0;
      break;
    case 4:
      t4 = env3;
      t1 = env2;
      t3 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.json;
      t2 = $.getInterceptor$JSString(t1);
      t3 = this.length;
    case 1:
      state0 = 0;
    default:
      var t1, t2, t3, t4, char$, token;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
            default:
              c$0: {
                switch (state0) {
                  case 0:
                    t4 = this.position;
                  case 2:
                    state0 = 0;
                    if ($.geB(t4, t3))
                      return;
                    char$ = t2.charCodeAt$1(t1, this.position);
                    t4 = $._JsonParser_tokens;
                  case 3:
                    state0 = 0;
                    token = $.index(t4, char$);
                  case 4:
                    if (state0 === 4 || state0 === 0 && token === 32)
                      switch (state0) {
                        case 0:
                          t4 = this.position;
                        case 4:
                          state0 = 0;
                          this.position = $.add(t4, 1);
                          break c$0;
                      }
                    if (token == null)
                      return 0;
                    return token;
                }
              }
          }
  }
},
 error$1: function(message) {
  throw $.$$throw(message);
},
 _JsonParser$1: function(json) {
  var t1;
  if (!($._JsonParser_tokens == null))
    return;
  t1 = $.List_List(126, '$.$int');
  $.setRuntimeTypeInfo(t1, ['$.$int']);
  $._JsonParser_tokens = t1;
  $.indexSet($._JsonParser_tokens, 9, 32);
  $.indexSet($._JsonParser_tokens, 10, 32);
  $.indexSet($._JsonParser_tokens, 13, 32);
  $.indexSet($._JsonParser_tokens, 32, 32);
  $.indexSet($._JsonParser_tokens, 48, 45);
  $.indexSet($._JsonParser_tokens, 49, 45);
  $.indexSet($._JsonParser_tokens, 50, 45);
  $.indexSet($._JsonParser_tokens, 51, 45);
  $.indexSet($._JsonParser_tokens, 52, 45);
  $.indexSet($._JsonParser_tokens, 53, 45);
  $.indexSet($._JsonParser_tokens, 54, 45);
  $.indexSet($._JsonParser_tokens, 55, 45);
  $.indexSet($._JsonParser_tokens, 56, 45);
  $.indexSet($._JsonParser_tokens, 57, 45);
  $.indexSet($._JsonParser_tokens, 45, 45);
  $.indexSet($._JsonParser_tokens, 123, 123);
  $.indexSet($._JsonParser_tokens, 125, 125);
  $.indexSet($._JsonParser_tokens, 91, 91);
  $.indexSet($._JsonParser_tokens, 93, 93);
  $.indexSet($._JsonParser_tokens, 34, 34);
  $.indexSet($._JsonParser_tokens, 58, 58);
  $.indexSet($._JsonParser_tokens, 44, 44);
  $.indexSet($._JsonParser_tokens, 110, 110);
  $.indexSet($._JsonParser_tokens, 116, 116);
  $.indexSet($._JsonParser_tokens, 102, 102);
}
};

$$._JsonStringifier = {"":"Object;sb?,seen",
 checkCycle$1: function(object) {
  var t1, t2, i, t3;
  for (t1 = this.seen, t2 = t1.length, i = 0; i < t2; ++i) {
    t3 = t1[i];
    if (t3 == null ? object == null : t3 === object)
      throw $.$$throw("Cyclic structure");
  }
  t1.push(object);
},
 stringifyValue$1: function(object, exception) {
  var customJson, t1, e;
  if (this.stringifyJsonValue$1(object) !== true) {
    this.checkCycle$1(object);
    try {
      customJson = object.toJson$0();
      if (this.stringifyJsonValue$1(customJson) !== true)
        throw $.$$throw($.JsonUnsupportedObjectError$(object));
      t1 = this.seen;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      throw $.$$throw($.JsonUnsupportedObjectError$withCause(object, e));
    }

  }
},
 stringifyJsonValue$1: function(object) {
  var t1, t2, t3, i;
  t1 = {};
  if (typeof object === 'number') {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, $.CTC2.toString$0(object));
    return true;
  } else if (object === true) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "true");
    return true;
  } else if (object === false) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "false");
    return true;
  } else if (object == null) {
    t1 = this.sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "null");
    return true;
  } else if (typeof object === 'string') {
    t1 = this.sb;
    t2 = $.getInterceptor$JSArray(t1);
    t2.add$1(t1, "\"");
    $._JsonStringifier_escape(t1, object);
    t2.add$1(t1, "\"");
    return true;
  } else if (typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List())) {
    if (typeof object !== 'object' || object === null || object.constructor !== Array && !object.is$JavaScriptIndexingBehavior())
      return this.stringifyJsonValue$1$bailout(1, object);
    this.checkCycle$1(object);
    t2 = this.sb;
    t3 = $.getInterceptor$JSArray(t2);
    t3.add$1(t2, "[");
    if (object.length > 0) {
      this.stringifyValue$1(object[0]);
      for (i = 1; i < object.length; ++i) {
        t3.add$1(t2, ",");
        if (i >= object.length)
          throw $.ioore(i);
        this.stringifyValue$1(object[i]);
      }
    }
    t3.add$1(t2, "]");
    t1 = this.seen;
    if (0 >= t1.length)
      throw $.ioore(0);
    t1.pop();
    return true;
  } else if (typeof object === 'object' && object !== null && object.is$Map()) {
    this.checkCycle$1(object);
    t2 = this.sb;
    t3 = $.getInterceptor$JSArray(t2);
    t3.add$1(t2, "{");
    t1.first_11 = true;
    object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
    t3.add$1(t2, "}");
    t2 = this.seen;
    if (0 >= t2.length)
      throw $.ioore(0);
    t2.pop();
    return true;
  } else
    return false;
},
 stringifyJsonValue$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      object = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
    case 1:
      var t1, t2, object, t3, i;
      if (state0 === 0 && typeof object === 'number') {
        t1 = this.sb;
        $.getInterceptor$JSArray(t1).add$1(t1, $.CTC2.toString$0(object));
        return true;
      } else
        switch (state0) {
          case 0:
          case 1:
            if (state0 === 0 && object === true) {
              t1 = this.sb;
              $.getInterceptor$JSArray(t1).add$1(t1, "true");
              return true;
            } else
              switch (state0) {
                case 0:
                case 1:
                  if (state0 === 0 && object === false) {
                    t1 = this.sb;
                    $.getInterceptor$JSArray(t1).add$1(t1, "false");
                    return true;
                  } else
                    switch (state0) {
                      case 0:
                      case 1:
                        if (state0 === 0 && object == null) {
                          t1 = this.sb;
                          $.getInterceptor$JSArray(t1).add$1(t1, "null");
                          return true;
                        } else
                          switch (state0) {
                            case 0:
                            case 1:
                              if (state0 === 0 && typeof object === 'string') {
                                t1 = this.sb;
                                t2 = $.getInterceptor$JSArray(t1);
                                t2.add$1(t1, "\"");
                                $._JsonStringifier_escape(t1, object);
                                t2.add$1(t1, "\"");
                                return true;
                              } else
                                switch (state0) {
                                  case 0:
                                  case 1:
                                    if (state0 === 1 || state0 === 0 && typeof object === 'object' && object !== null && (object.constructor === Array || object.is$List()))
                                      switch (state0) {
                                        case 0:
                                        case 1:
                                          state0 = 0;
                                          this.checkCycle$1(object);
                                          t2 = this.sb;
                                          t3 = $.getInterceptor$JSArray(t2);
                                          t3.add$1(t2, "[");
                                          t1 = $.getInterceptor$JSStringJSArray(object);
                                          if ($.gtB(t1.get$length(object), 0)) {
                                            this.stringifyValue$1($.index(object, 0));
                                            for (i = 1; $.ltB(i, t1.get$length(object)); ++i) {
                                              t3.add$1(t2, ",");
                                              this.stringifyValue$1($.index(object, i));
                                            }
                                          }
                                          t3.add$1(t2, "]");
                                          t1 = this.seen;
                                          if (0 >= t1.length)
                                            throw $.ioore(0);
                                          t1.pop();
                                          return true;
                                      }
                                    else if (typeof object === 'object' && object !== null && object.is$Map()) {
                                      this.checkCycle$1(object);
                                      t2 = this.sb;
                                      t3 = $.getInterceptor$JSArray(t2);
                                      t3.add$1(t2, "{");
                                      t1.first_11 = true;
                                      object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
                                      t3.add$1(t2, "}");
                                      t2 = this.seen;
                                      if (0 >= t2.length)
                                        throw $.ioore(0);
                                      t2.pop();
                                      return true;
                                    } else
                                      return false;
                                }
                          }
                    }
              }
        }
  }
}
};

$$._AttributeClassSet = {"":"CssClassSet;_lib2_element?",
 readClasses$0: function() {
  var classname, s, t1, t2, t3, trimmed;
  classname = $.index(this._lib2_element.get$attributes(), "class");
  s = $.Set_Set('$.String');
  if (classname == null)
    return s;
  for (t1 = $.getInterceptor$JSString(classname).split$1(classname, " "), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(s); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    trimmed = $.getInterceptor$JSString(t3).trim$0(t3);
    if ($.getInterceptor$JSStringJSArray(trimmed).get$isEmpty(trimmed) !== true)
      t2.add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list = $.List_List$from(s);
  $.setRuntimeTypeInfo(list, []);
  $.indexSet(this._lib2_element.get$attributes(), "class", $.Strings_join(list, " "));
}
};

$$.View = {"":"Object;_uuid,_parent!,_nextSibling=,_prevSibling=,_virtIS=,_childInfo,_evlInfo,_dataAttrs!,_mntAttrs,_annos,_style,_node,_left,_top,_width,_height,_profile,_layout,_inDoc",
 get$className: function() {
  return $.S(this.get$runtimeType());
},
 _initChildInfo$0: function() {
  if (this._childInfo == null)
    this._childInfo = $._ChildInfo$();
  return this._childInfo;
},
 _initEventListenerInfo$0: function() {
  if (this._evlInfo == null)
    this._evlInfo = $._EventListenerInfo$(this);
  return this._evlInfo;
},
 get$uuid: function() {
  if (this._uuid == null) {
    var t1 = $.View__uuidNext;
    $.View__uuidNext = $.add(t1, 1);
    this._uuid = $.StringUtil_encodeId(t1, $.get$viewConfig().get$uuidPrefix());
  }
  return this._uuid;
},
 get$id: function() {
  return this.get$node().get$id();
},
 set$id: function(id) {
  if (id == null)
    id = "";
  if (!$.eqB(this.get$node().get$id(), id)) {
    if ($.gtB($.getInterceptor$JSStringJSArray(id).get$length(id), 0))
      $._ViewImpl_checkIdSpaces(this, id);
    $._ViewImpl_removeFromIdSpace(this, false);
    this.get$node().set$id(id);
    $._ViewImpl_addToIdSpace(this, false);
  }
},
 query$1: function(selector) {
  var so, t1, iter;
  if (selector == null)
    return;
  switch (selector) {
    case "":
      return;
    case "parent":
      return this.get$parent();
    case "spaceOwner":
      so = this.get$spaceOwner();
      return typeof so === 'object' && so !== null && !!so.is$View ? so : null;
  }
  t1 = this.queryAll$1(selector);
  iter = $.getInterceptor$JSArray(t1).iterator$0(t1);
  return iter.get$hasNext() === true ? iter.next$0() : null;
},
 queryAll$1: function(selector) {
  return $.ViewIterable$(this, selector);
},
 get$fellows: function() {
  return this.get$spaceOwner().get$fellows();
},
 get$spaceOwner: function() {
  return $._ViewImpl_spaceOwner(this);
},
 isDescendantOf$1: function(parent$) {
  var w;
  for (w = this; !(w == null); w = w.get$parent())
    if (w == null ? parent$ == null : w === parent$)
      return true;
  return false;
},
 get$parent: function() {
  return this._parent;
},
 get$firstChild: function() {
  var t1 = this._childInfo;
  return !(t1 == null) ? t1.get$firstChild() : null;
},
 get$lastChild: function() {
  var t1 = this._childInfo;
  return !(t1 == null) ? t1.get$lastChild() : null;
},
 get$nextSibling: function() {
  return this._nextSibling;
},
 get$previousSibling: function() {
  return this._prevSibling;
},
 get$children: function() {
  var ci = this._initChildInfo$0();
  if (ci.get$children() == null)
    ci.set$children($._SubviewList$(this));
  return ci.get$children();
},
 get$childCount: function() {
  var t1 = this._childInfo;
  return !(t1 == null) ? t1.get$nChild() : 0;
},
 onChildAdded_$1: function(child) {
},
 beforeChildRemoved_$1: function(child) {
},
 onChildRemoved_$1: function(child) {
},
 onParentChanged_$1: function(oldParent) {
},
 beforeParentChanged_$1: function(newParent) {
},
 onLayout_$1: function(mctx) {
  this.sendEvent$1($.LayoutEvent$(mctx, "layout", null));
},
 onPreLayout_$1: function(mctx) {
  this.sendEvent$1($.LayoutEvent$(mctx, "preLayout", null));
},
 get$isViewGroup: function() {
  return true;
},
 addChild$2: function(child, beforeChild) {
  var oldParent, t1, parentChanged;
  if (this.isDescendantOf$1(child) === true)
    throw $.$$throw($.UiError$($.S(child) + " is an ancestor of " + $.S(this)));
  if (this.get$isViewGroup() !== true)
    throw $.$$throw($.UiError$("No child allowed for " + $.S(this)));
  if (!(beforeChild == null))
    if (!(beforeChild.get$parent() === this))
      beforeChild = null;
    else if (child == null ? beforeChild == null : child === beforeChild)
      return;
  oldParent = child.get$parent();
  t1 = oldParent === this;
  parentChanged = !t1;
  if (t1) {
    t1 = child.get$nextSibling();
    t1 = beforeChild == null ? t1 == null : beforeChild === t1;
  } else
    t1 = false;
  if (t1)
    return;
  t1 = oldParent == null;
  if (t1 && child.get$inDocument() === true)
    child._removeFromDocument$0();
  if (parentChanged)
    child.beforeParentChanged_$1(this);
  if (!t1)
    oldParent._removeChild$2(child, false);
  $._ViewImpl_link(this, child, beforeChild);
  this.addChildNode_$2(child, beforeChild);
  if (this.get$inDocument() === true)
    child._mount$0();
  this.onChildAdded_$1(child);
  if (parentChanged)
    child.onParentChanged_$1(oldParent);
},
 addChild$1: function(child) {
  return this.addChild$2(child, null);
},
 remove$0: function() {
  if (!(this.get$parent() == null))
    this.get$parent()._removeChild$1(this);
  else if (this.get$inDocument() === true)
    this._removeFromDocument$0();
},
 _removeChild$2: function(child, notifyChild) {
  var t1;
  if (!(child.get$parent() === this))
    return;
  this.beforeChildRemoved_$1(child);
  t1 = notifyChild === true;
  if (t1)
    child.beforeParentChanged_$1(null);
  if (this.get$inDocument() === true)
    child._unmount$0();
  this.removeChildNode_$1(child);
  $._ViewImpl_unlink(this, child);
  if (t1)
    child.onParentChanged_$1(this);
  this.onChildRemoved_$1(child);
},
 _removeChild$1: function(child) {
  return this._removeChild$2(child, true);
},
 addChildNode_$2: function(child, beforeChild) {
  var beforeNode, t1;
  if (!(beforeChild == null)) {
    beforeNode = beforeChild.get$node();
    beforeNode.get$parent().insertBefore$2(child.get$node(), beforeNode);
  } else {
    t1 = this.get$node().get$nodes();
    $.getInterceptor$JSArray(t1).add$1(t1, child.get$node());
  }
},
 removeChildNode_$1: function(child) {
  child.get$node().remove$0();
},
 get$node: function() {
  if (this._node == null) {
    this._node = this.render_$0();
    this._initNode$0();
  }
  return this._node;
},
 set$node: function(node) {
  var t1;
  if (!(node.get$parent() == null))
    throw $.$$throw($.UiError$("Root element required, " + $.S(node)));
  t1 = this._node;
  if (!(t1 == null))
    throw $.$$throw($.UiError$("Already assigned with " + $.S(t1)));
  this._node = node;
  this._initNode$0();
},
 _initNode$0: function() {
  var t1, t2;
  t1 = this.get$node().get$classes();
  t2 = $.getInterceptor$JSArray(t1);
  t2.add$1(t1, $.get$viewConfig().get$classPrefix());
  t2.add$1(t1, $.S($.get$viewConfig().get$classPrefix()) + $.S(this.get$className()));
},
 render_$0: function() {
  return $.Element_Element$tag("div");
},
 getNode$1: function(subId) {
  var subId0;
  if ($.CTC.get$isEmpty(subId) === true)
    return this.get$node();
  subId0 = "#" + $.S(this.get$uuid()) + "-" + subId;
  return this.get$inDocument() === true ? $.document().query$1(subId0) : this.get$node().query$1(subId0);
},
 get$inDocument: function() {
  return this._inDoc;
},
 addToDocument$3$layout$mode$ref: function(layout, mode, ref) {
  var t1, p, nxt, refid, t2, dlgInfo;
  this.remove$0();
  $._ViewImpl_init();
  if (ref == null) {
    ref = $.document().query$1("#v-main");
    t1 = ref == null;
  } else
    t1 = false;
  if (t1)
    ref = $.document().get$body();
  switch (mode) {
    case "before":
      p = ref.get$parent();
      nxt = ref;
      break;
    case "replace":
      refid = typeof ref === 'object' && ref !== null && ref.is$Element() ? ref.get$id() : "";
      if ($.getInterceptor$JSStringJSArray(refid).get$isEmpty(refid) !== true) {
        t1 = this.get$id();
        t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true;
        t1 = t2;
      } else
        t1 = false;
      if (t1)
        this.set$id(refid);
      p = ref.get$parent();
      nxt = ref.get$nextNode();
      ref.remove$0();
      break;
    case "inner":
      t1 = ref.get$nodes();
      $.getInterceptor$JSArray(t1).clear$0(t1);
      p = ref;
      nxt = null;
      break;
    case "dialog":
      t1 = $.get$dialogInfos();
      dlgInfo = $._ViewImpl_createDialog(ref, this, "v-mask");
      $.indexSet(t1, this, dlgInfo);
      t1 = $.get$ViewUtil__views();
      p = dlgInfo.cave;
      $.indexSet(t1, p, this);
      t1 = this.get$profile().get$location();
      if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
        this.get$profile().set$location("center center");
      nxt = null;
      break;
    default:
      p = ref;
      nxt = null;
      break;
  }
  if (!(nxt == null))
    nxt.get$parent().insertBefore$2(this.get$node(), nxt);
  else if (!(p == null)) {
    t1 = p.get$nodes();
    $.getInterceptor$JSArray(t1).add$1(t1, this.get$node());
  }
  this._mount$0();
  t1 = this.get$classes();
  $.getInterceptor$JSArray(t1).addAll$1(t1, $._rootClasses());
  t1 = $.get$rootViews();
  $.getInterceptor$JSArray(t1).add$1(t1, this);
  if (!$.eqB(layout, false))
    this.requestLayout$1($.eq(layout, true));
},
 addToDocument$0: function() {
  return this.addToDocument$3$layout$mode$ref(null, null, null);
},
 addToDocument$2$mode$ref: function(mode, ref) {
  return this.addToDocument$3$layout$mode$ref(null, mode, ref);
},
 _removeFromDocument$0: function() {
  var dlgInfo, t1, t2;
  this._unmount$0();
  this.get$classes().removeAll$1($._rootClasses());
  $.ListUtil_remove($.get$rootViews(), this);
  dlgInfo = $.get$dialogInfos().remove$1(this);
  if (!(dlgInfo == null)) {
    t1 = $.get$ViewUtil__views();
    t2 = dlgInfo.get$cave();
    t2.remove$0();
    t1.remove$1(t2);
  } else
    this.get$node().remove$0();
},
 _mount$0: function() {
  var t1, afters, t2, view;
  $.View__mntCnt = $.add($.View__mntCnt, 1);
  try {
    this._mntInit$0();
    this.mount_$0();
  } finally {
    $.View__mntCnt = $.sub($.View__mntCnt, 1);
  }
  if ($.eqB($.View__mntCnt, 0)) {
    t1 = $.get$View__afters();
    if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) !== true) {
      afters = $.List_List$from($.get$View__afters());
      $.setRuntimeTypeInfo(afters, []);
      t1 = $.get$View__afters();
      $.getInterceptor$JSArray(t1).clear$0(t1);
      for (t1 = $.CTC0.iterator$0(afters); t1.get$hasNext() === true;) {
        t2 = t1.next$0();
        view = $.index(t2, 0);
        if (view.get$inDocument() === true)
          $.index(t2, 1).call$1(view);
      }
    }
  }
},
 _unmount$0: function() {
  if (this._inDoc === true) {
    this.unmount_$0();
    this._mntClean$0();
  }
},
 mount_$0: function() {
  var child;
  for (var child = this.get$firstChild(); !(child == null); child = child.get$nextSibling()) {
    child._mntInit$0();
    child.mount_$0();
  }
  this.sendEvent$1($.ViewEvent$("mount", null));
},
 unmount_$0: function() {
  var child;
  this.sendEvent$1($.ViewEvent$("unmount", null));
  for (var child = this.get$firstChild(); !(child == null); child = child.get$nextSibling()) {
    child.unmount_$0();
    child._mntClean$0();
  }
},
 _mntInit$0: function() {
  var t1, t3;
  this._inDoc = true;
  t1 = $.get$ViewUtil__views();
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this._mntInit$0$bailout(1, t1);
  t3 = this.get$node();
  if (t3 !== (t3 | 0))
    throw $.iae(t3);
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  t1[t3] = this;
},
 _mntInit$0$bailout: function(state0, t1) {
  $.indexSet(t1, this.get$node(), this);
},
 _mntClean$0: function() {
  $.get$ViewUtil__views().remove$1(this.get$node());
  this._mntAttrs = null;
  this._inDoc = false;
},
 requestLayout$2: function(immediate, descendantOnly) {
  $.get$layoutManager().requestLayout$3(this, immediate, descendantOnly);
},
 requestLayout$0: function() {
  return this.requestLayout$2(false, false);
},
 requestLayout$1: function(immediate) {
  return this.requestLayout$2(immediate, false);
},
 doLayout_$1: function(mctx) {
  $.get$layoutManager().doLayout$2(mctx, this);
},
 measureWidth_$1: function(mctx) {
  return this.get$shallMeasureContent() === true ? mctx.measureContentWidth$2(this, true) : mctx.measureWidth$1(this);
},
 measureHeight_$1: function(mctx) {
  return this.get$shallMeasureContent() === true ? mctx.measureContentHeight$2(this, true) : mctx.measureHeight$1(this);
},
 get$shallMeasureContent: function() {
  if (this.get$isViewGroup() === true)
    var t1 = this.get$firstChild() == null && $._DomAgentX$(this.get$node()).get$hasContent() === true;
  else
    t1 = true;
  return t1;
},
 shallLayout_$1: function(child) {
  var v;
  if (child.get$visible() !== true)
    return false;
  v = child.get$style().get$position();
  if (typeof v !== 'string')
    return this.shallLayout_$1$bailout(1, v);
  return $.CTC.get$isEmpty(v) === true || v === "absolute";
},
 shallLayout_$1$bailout: function(state0, v) {
  return $.getInterceptor$JSStringJSArray(v).get$isEmpty(v) === true || $.eqB(v, "absolute");
},
 get$visible: function() {
  return !$.eqB(this.get$node().get$style().get$display(), "none");
},
 set$visible: function(visible) {
  var changed, t1, t2;
  changed = !$.eqB(visible, this.get$visible());
  t1 = visible === true;
  t2 = t1 ? "" : "none";
  this.get$node().get$style().set$display(t2);
  if (this._inDoc === true && changed && t1)
    this.requestLayout$1(true);
},
 get$left: function() {
  return this._left;
},
 set$left: function(left) {
  var t1;
  this._left = left;
  t1 = $.Css_px(left);
  this.get$node().get$style().set$left(t1);
  $.ViewImpl_leftUpdated(this);
},
 get$top: function() {
  return this._top;
},
 set$top: function(top$) {
  var t1;
  this._top = top$;
  t1 = $.Css_px(top$);
  this.get$node().get$style().set$top(t1);
  $.ViewImpl_topUpdated(this);
},
 get$width: function() {
  return this._width;
},
 set$width: function(width) {
  var t1;
  this._width = width;
  t1 = $.Css_px(width);
  this.get$node().get$style().set$width(t1);
  $.ViewImpl_widthUpdated(this);
},
 get$height: function() {
  return this._height;
},
 set$height: function(height) {
  var t1;
  this._height = height;
  t1 = $.Css_px(height);
  this.get$node().get$style().set$height(t1);
  $.ViewImpl_heightUpdated(this);
},
 get$realWidth: function() {
  var t1 = this._width;
  return !(t1 == null) ? t1 : $.DomAgent$(this.get$node()).get$width();
},
 get$realHeight: function() {
  var t1 = this._height;
  return !(t1 == null) ? t1 : $.DomAgent$(this.get$node()).get$height();
},
 get$innerWidth: function() {
  return $.DomAgent$(this.get$node()).get$innerWidth();
},
 get$innerHeight: function() {
  return $.DomAgent$(this.get$node()).get$innerHeight();
},
 get$pageOffset: function() {
  var left, top$, view, t1;
  if (this._inDoc === true)
    return $.DomAgent$(this.get$node()).get$pageOffset();
  for (left = 0, top$ = 0, view = this; true;) {
    t1 = view.get$left();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    left += t1;
    t1 = view.get$top();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    top$ += t1;
    if (!$.eqB(view.get$style().get$position(), "fixed")) {
      view = view.get$parent();
      t1 = view == null;
    } else
      t1 = true;
    if (t1)
      return $.Offset$(left, top$);
  }
},
 get$layout: function() {
  if (this._layout == null)
    this._layout = $.LayoutDeclaration$(this);
  return this._layout;
},
 get$profile: function() {
  if (this._profile == null)
    this._profile = $.ProfileDeclaration$(this);
  return this._profile;
},
 get$style: function() {
  if (this._style == null)
    this._style = $._StyleImpl$(this);
  return this._style;
},
 get$classes: function() {
  return this.get$node().get$classes();
},
 get$on: function() {
  return this._initEventListenerInfo$0().get$on();
},
 sendEvent$2: function(event$, type) {
  var t1;
  if (event$.get$target() == null)
    event$.set$target(this);
  t1 = this._evlInfo;
  return !(t1 == null) && t1.send$2(event$, type) === true;
},
 sendEvent$1: function(event$) {
  return this.sendEvent$2(event$, null);
},
 onEventListened_$2: function(type, target) {
  return this._evlInfo.onEventListened_$2(type, target);
},
 onEventListened_$1: function(type) {
  return this.onEventListened_$2(type, null);
},
 onEventUnlistened_$2: function(type, target) {
  return this._evlInfo.onEventUnlistened_$2(type, target);
},
 onEventUnlistened_$1: function(type) {
  return this.onEventUnlistened_$2(type, null);
},
 get$dataAttributes: function() {
  var t1 = this._dataAttrs;
  return !(t1 == null) ? t1 : $.MapUtil_onDemand(new $.View_dataAttributes_anon(this));
},
 toString$0: function() {
  var t1, t2;
  t1 = $.S(this.get$className()) + "(";
  t2 = this.get$id();
  if ($.getInterceptor$JSStringJSArray(t2).get$isEmpty(t2) === true) {
    t2 = this._uuid;
    if (typeof t2 !== 'string')
      return this.toString$0$bailout0(1, t2, t1);
  } else {
    t2 = this.get$id();
    if (typeof t2 !== 'string')
      return this.toString$0$bailout0(2, t2, t1);
  }
  return t1 + t2 + ")";
},
 toString$0$bailout0: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t1 = env1;
      t2 = env0;
      break;
    case 2:
      t1 = env1;
      t2 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = $.S(this.get$className()) + "(";
      t2 = this.get$id();
    default:
      var t1, t2;
      if (state0 === 1 || state0 === 0 && $.getInterceptor$JSStringJSArray(t2).get$isEmpty(t2) === true)
        switch (state0) {
          case 0:
            t2 = this._uuid;
          case 1:
            state0 = 0;
            t2 = !(t2 == null) ? t2 : "";
        }
      else
        switch (state0) {
          case 0:
            t2 = this.get$id();
          case 2:
            state0 = 0;
        }
      return t1 + $.S(t2) + ")";
  }
},
 View$tag$1: function(tag) {
  this.set$node($.Element_Element$tag(tag));
},
 is$View: true
};

$$.UiError = {"":"Object;message",
 toString$0: function() {
  return "UiError(" + this.message + ")";
}
};

$$.Declaration = {"":"Object;",
 set$text: function(text) {
  var t1, t2, pair, j, t3, key, value;
  t1 = this._props;
  $.getInterceptor$JSArray(t1).clear$0(t1);
  for (t1 = $._s(text), t1 = $.getInterceptor$JSString(t1).split$1(t1, ";"), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    pair = $.getInterceptor$JSString(t2).trim$0(t2);
    t2 = $.getInterceptor$JSStringJSArray(pair);
    if (t2.get$isEmpty(pair) === true)
      continue;
    j = t2.indexOf$1(pair, ":");
    if ($.gtB(j, 0)) {
      t3 = t2.substring$2(pair, 0, j);
      key = $.getInterceptor$JSString(t3).trim$0(t3);
      t2 = t2.substring$1(pair, $.add(j, 1));
      value = $.getInterceptor$JSString(t2).trim$0(t2);
      if ($.getInterceptor$JSStringJSArray(key).get$isEmpty(key) !== true) {
        this.setProperty$2(key, value);
        continue;
      }
    }
    throw $.$$throw($.UiError$("Unknown declaration: " + $.S(pair)));
  }
},
 getPropertyValue$1: function(propertyName) {
  var value = $.index(this._props, propertyName);
  return !(value == null) ? value : "";
},
 removeProperty$1: function(propertyName) {
  this._props.remove$1(propertyName);
},
 setProperty$2: function(propertyName, value) {
  var t1, t3;
  if (value == null || $.getInterceptor$JSStringJSArray(value).get$isEmpty(value) === true)
    this.removeProperty$1(propertyName);
  else {
    t1 = this._props;
    if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
      return this.setProperty$2$bailout(1, propertyName, value, t1);
    t3 = $.getInterceptor$JSString(value).trim$0(value);
    if (propertyName !== (propertyName | 0))
      throw $.iae(propertyName);
    if (propertyName < 0 || propertyName >= t1.length)
      throw $.ioore(propertyName);
    t1[propertyName] = t3;
  }
},
 setProperty$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env2;
      value = env1;
      propertyName = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      var t1, value, propertyName;
      if (state0 === 0 && (value == null || $.getInterceptor$JSStringJSArray(value).get$isEmpty(value) === true))
        this.removeProperty$1(propertyName);
      else
        switch (state0) {
          case 0:
            t1 = this._props;
          case 1:
            state0 = 0;
            $.indexSet(t1, propertyName, $.getInterceptor$JSString(value).trim$0(value));
        }
  }
}
};

$$.ProfileDeclaration = {"":"Declaration;_owner,_anchorView,_props",
 get$anchor: function() {
  return this.getPropertyValue$1("anchor");
},
 get$anchorView: function() {
  var t1, anc;
  t1 = this._anchorView;
  if (!(t1 == null))
    return t1;
  anc = this.get$anchor();
  if ($.getInterceptor$JSStringJSArray(anc).get$isEmpty(anc) === true) {
    t1 = this.get$location();
    t1 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true ? null : this._owner.get$parent();
  } else
    t1 = this._owner.query$1(anc);
  return t1;
},
 get$location: function() {
  return this.getPropertyValue$1("location");
},
 set$location: function(value) {
  this.setProperty$2("location", value);
},
 get$margin: function() {
  return this.getPropertyValue$1("margin");
},
 get$align: function() {
  return this.getPropertyValue$1("align");
},
 get$spacing: function() {
  return this.getPropertyValue$1("spacing");
},
 get$width: function() {
  return this.getPropertyValue$1("width");
},
 set$width: function(value) {
  this.setProperty$2("width", value);
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 set$height: function(value) {
  this.setProperty$2("height", value);
},
 get$minWidth: function() {
  return this.getPropertyValue$1("min-width");
},
 get$minHeight: function() {
  return this.getPropertyValue$1("min-height");
},
 get$maxWidth: function() {
  return this.getPropertyValue$1("max-width");
},
 get$maxHeight: function() {
  return this.getPropertyValue$1("max-height");
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
}
};

$$.LayoutDeclaration = {"":"Declaration;_owner,_handler,_props",
 get$type: function() {
  return this.getPropertyValue$1("type");
},
 set$type: function(value) {
  this.setProperty$2("type", value);
},
 get$handler: function() {
  var t1, handler;
  t1 = this._handler;
  if (!(t1 == null))
    return t1;
  handler = $.get$layoutManager().getLayout$1(this.get$type());
  if (handler == null)
    throw $.$$throw($.UiError$("Unknown type, " + $.S(this.get$type())));
  return handler;
},
 get$orient: function() {
  return this.getPropertyValue$1("orient");
},
 get$align: function() {
  return this.getPropertyValue$1("align");
},
 get$spacing: function() {
  return this.getPropertyValue$1("spacing");
},
 get$gap: function() {
  return this.getPropertyValue$1("gap");
},
 get$width: function() {
  return this.getPropertyValue$1("width");
},
 set$width: function(value) {
  this.setProperty$2("width", value);
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 set$height: function(value) {
  this.setProperty$2("height", value);
}
};

$$._ChildInfo = {"":"Object;firstChild=,lastChild=,nChild=,children="
};

$$._EventListenerInfo = {"":"Object;_owner,on?,_listeners,_domListeners",
 isEmpty$1: function(type) {
  var t1, ls;
  t1 = this._listeners;
  if (!(t1 == null)) {
    ls = $.index(t1, type);
    t1 = ls == null || $.getInterceptor$JSStringJSArray(ls).get$isEmpty(ls) === true;
  } else
    t1 = true;
  return t1;
},
 get$isEmpty: function() { return new $.BoundClosure0(this, 'isEmpty$1'); },
 add$2: function(type, listener) {
  var t1, t2;
  t1 = {};
  if (listener == null)
    throw $.$$throw($.ArgumentError$("listener"));
  if (this._listeners == null)
    this._listeners = $.makeLiteralMap([]);
  t1.first_10 = false;
  t2 = this._listeners.putIfAbsent$2(type, new $._EventListenerInfo_add_anon(t1));
  $.getInterceptor$JSArray(t2).add$1(t2, listener);
  if (t1.first_10 === true)
    this._owner.onEventListened_$1(type);
},
 remove$2: function(type, listener) {
  var t1, ls, j, found;
  t1 = this._listeners;
  if (!(t1 == null)) {
    ls = $.index(t1, type);
    t1 = !(ls == null);
  } else {
    ls = null;
    t1 = false;
  }
  if (t1) {
    t1 = $.getInterceptor$JSStringJSArray(ls);
    j = t1.indexOf$1(ls, listener);
    if ($.geB(j, 0)) {
      t1.removeRange$2(ls, j, 1);
      if (t1.get$isEmpty(ls) === true)
        this._owner.onEventUnlistened_$1(type);
      found = true;
    } else
      found = false;
  } else
    found = false;
  return found;
},
 send$2: function(event$, type) {
  var t1, ls, dispatched;
  if (type == null)
    type = event$.get$type();
  t1 = this._listeners;
  if (!(t1 == null)) {
    ls = $.index(t1, type);
    t1 = !(ls == null);
  } else {
    ls = null;
    t1 = false;
  }
  if (t1) {
    event$.set$currentTarget(this._owner);
    for (t1 = $.List_List$from(ls), $.setRuntimeTypeInfo(t1, []), t1 = $.CTC0.iterator$0(t1), dispatched = false; t1.get$hasNext() === true; dispatched = true) {
      t1.next$0().call$1(event$);
      if (event$.get$isPropagationStopped() === true)
        return true;
    }
  } else
    dispatched = false;
  return dispatched;
},
 onEventListened_$2: function(type, target) {
  var disp, t1, ln, t2;
  disp = $._domEventDispatcher(type);
  if (!(disp == null)) {
    t1 = this._owner;
    ln = disp.call$1(t1);
    if (this._domListeners == null)
      this._domListeners = $.makeLiteralMap([]);
    t1 = $.index((!(target == null) ? target : $._domEvtTarget(type, t1.get$node())).get$on(), $.getInterceptor$JSString(type).toLowerCase$0(type));
    t2 = $.getInterceptor$JSArray(t1);
    $.indexSet(this._domListeners, type, ln);
    t2.add$1(t1, ln);
  }
},
 onEventUnlistened_$2: function(type, target) {
  var t1, ln;
  t1 = this._domListeners;
  if (!(t1 == null)) {
    ln = t1.remove$1(type);
    t1 = !(ln == null);
  } else {
    ln = null;
    t1 = false;
  }
  if (t1)
    $.index((!(target == null) ? target : $._domEvtTarget(type, this._owner.get$node())).get$on(), $.getInterceptor$JSString(type).toLowerCase$0(type)).remove$1(ln);
},
 _EventListenerInfo$1: function(_owner) {
  this.on = $.ViewEvents$(this);
}
};

$$._VirtualIdSpace = {"":"Object;_owner,fellows?",
 query$1: function(selector) {
  return this._owner.query$1(selector);
},
 toString$0: function() {
  return "_VirtualIdSpace(" + $.S(this._owner) + ")";
},
 is$IdSpace: true
};

$$._SubviewSeq = {"":"Sequence;_owner",
 get$length: function() {
  return this._owner.get$childCount();
},
 operator$index$1: function(index) {
  var t1, index2, t2, child;
  if (typeof index !== 'number')
    return this.operator$index$1$bailout0(1, index);
  $.ListUtil_rangeCheck(this, index, 1);
  t1 = this.get$length();
  if (typeof t1 !== 'number')
    return this.operator$index$1$bailout0(2, index, t1);
  index2 = t1 - index - 1;
  t1 = index <= index2;
  t2 = this._owner;
  if (t1) {
    child = t2.get$firstChild();
    for (; --index, index >= 0;)
      child = child.get$nextSibling();
    return child;
  } else {
    child = t2.get$lastChild();
    for (; --index2, index2 >= 0;)
      child = child.get$previousSibling();
    return child;
  }
},
 operator$index$1$bailout0: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      index = env0;
      break;
    case 2:
      t1 = env1;
      index = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.ListUtil_rangeCheck(this, index, 1);
      t1 = this.get$length();
    case 2:
      var index, t1, index2, t2, child;
      state0 = 0;
      index2 = $.sub($.sub(t1, index), 1);
      t1 = $.leB(index, index2);
      t2 = this._owner;
      if (t1) {
        child = t2.get$firstChild();
        for (; index = $.sub(index, 1), $.geB(index, 0);)
          child = child.get$nextSibling();
        return child;
      } else {
        child = t2.get$lastChild();
        for (; index2 = $.sub(index2, 1), $.geB(index2, 0);)
          child = child.get$previousSibling();
        return child;
      }
  }
}
};

$$._SubviewList = {"":"SequenceList;_owner,sequence",
 operator$indexSet$2: function(index, value) {
  var w, next;
  if (value == null)
    throw $.$$throw($.ArgumentError$(null));
  w = this.operator$index$1(index);
  if (!(w == null ? value == null : w === value)) {
    next = w.get$nextSibling();
    w.remove$0();
    this._owner.addChild$2(value, next);
  }
},
 add$1: function(view) {
  this._owner.addChild$1(view);
},
 removeLast$0: function() {
  var w = this.get$last();
  if (!(w == null))
    w.remove$0();
  return w;
},
 removeRange$2: function(start, length$) {
  var child, next;
  if (length$ <= 0)
    return;
  child = this.operator$index$1(start);
  while (true) {
    --length$;
    if (!(length$ >= 0 && !(child == null)))
      break;
    next = child.get$nextSibling();
    child.remove$0();
    child = next;
  }
}
};

$$._DomAgentX = {"":"DomAgent;node",
 get$hasContent: function() {
  return $._DomAgentX__hasContent(this.node);
}
};

$$._StyleImpl = {"":"Object;_view",
 get$_st: function() {
  return this._view.get$node().get$style();
},
 getPropertyValue$1: function(propertyName) {
  return this.get$_st().getPropertyValue$1(propertyName);
},
 setProperty$3: function(propertyName, value, priority) {
  var t1 = $ === priority;
  if (t1)
    priority = null;
  if (!t1)
    this.get$_st().setProperty$3(propertyName, value, priority);
  else
    this.get$_st().setProperty$2(propertyName, value);
},
 setProperty$2: function(propertyName, value) {
  return this.setProperty$3(propertyName, value, $);
},
 set$cssText: function(value) {
  var st, v, t1, t2;
  st = this.get$_st();
  st.set$cssText(value);
  v = st.get$left();
  t1 = $.getInterceptor$JSStringJSArray(v).get$isEmpty(v) === true;
  t2 = this._view;
  if (t1)
    st.set$left($.Css_px(t2.get$left()));
  else
    t2.set$left($.Css_intOf(v, 0, null));
  v = st.get$top();
  t1 = $.getInterceptor$JSStringJSArray(v).get$isEmpty(v) === true;
  t2 = this._view;
  if (t1)
    st.set$top($.Css_px(t2.get$top()));
  else
    t2.set$top($.Css_intOf(v, 0, null));
  v = st.get$width();
  t1 = $.getInterceptor$JSStringJSArray(v).get$isEmpty(v) === true;
  t2 = this._view;
  if (t1)
    st.set$width($.Css_px(t2.get$width()));
  else
    t2.set$width($.Css_intOf(v, null, null));
  v = st.get$height();
  t1 = $.getInterceptor$JSStringJSArray(v).get$isEmpty(v) === true;
  t2 = this._view;
  if (t1)
    st.set$height($.Css_px(t2.get$height()));
  else
    t2.set$height($.Css_intOf(v, null, null));
},
 get$length: function() {
  var t1 = this.get$_st();
  return $.getInterceptor$JSStringJSArray(t1).get$length(t1);
},
 get$left: function() {
  return this.get$_st().get$left();
},
 set$left: function(v) {
  var t1 = $.Css_intOf(v, 0, null);
  this._view.set$left(t1);
},
 get$top: function() {
  return this.get$_st().get$top();
},
 set$top: function(v) {
  var t1 = $.Css_intOf(v, 0, null);
  this._view.set$top(t1);
},
 get$width: function() {
  return this.get$_st().get$width();
},
 set$width: function(v) {
  var t1 = $.Css_intOf(v, null, null);
  this._view.set$width(t1);
},
 get$height: function() {
  return this.get$_st().get$height();
},
 set$height: function(v) {
  var t1 = $.Css_intOf(v, null, null);
  this._view.set$height(t1);
},
 get$borderBottomWidth: function() {
  return this.get$_st().get$borderBottomWidth();
},
 get$borderLeftWidth: function() {
  return this.get$_st().get$borderLeftWidth();
},
 get$borderRightWidth: function() {
  return this.get$_st().get$borderRightWidth();
},
 get$borderTopWidth: function() {
  return this.get$_st().get$borderTopWidth();
},
 get$bottom: function() {
  return this.get$_st().get$bottom();
},
 get$clear: function() {
  var t1 = this.get$_st();
  return $.getInterceptor$JSArray(t1).get$clear(t1);
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 get$display: function() {
  return this.get$_st().get$display();
},
 set$display: function(v) {
  var t1 = $._s(v);
  this.get$_st().set$display(t1);
},
 get$filter: function() {
  var t1 = this.get$_st();
  return $.getInterceptor$JSArray(t1).get$filter(t1);
},
 filter$1: function(arg0) {
  return this.get$filter().call$1(arg0);
},
 get$margin: function() {
  return this.get$_st().get$margin();
},
 get$maxHeight: function() {
  return this.get$_st().get$maxHeight();
},
 get$maxWidth: function() {
  return this.get$_st().get$maxWidth();
},
 get$minHeight: function() {
  return this.get$_st().get$minHeight();
},
 get$minWidth: function() {
  return this.get$_st().get$minWidth();
},
 get$position: function() {
  return this.get$_st().get$position();
},
 set$position: function(v) {
  var t1 = $._s(v);
  this.get$_st().set$position(t1);
},
 get$resize: function() {
  return this.get$_st().get$resize();
},
 get$right: function() {
  return this.get$_st().get$right();
},
 get$size: function() {
  return this.get$_st().get$size();
},
 get$transform: function() {
  return this.get$_st().get$transform();
},
 get$visibility: function() {
  return this.get$_st().get$visibility();
},
 set$visibility: function(v) {
  var t1 = $._s(v);
  this.get$_st().set$visibility(t1);
},
 get$whiteSpace: function() {
  return this.get$_st().get$whiteSpace();
},
 set$whiteSpace: function(v) {
  var t1 = $._s(v);
  this.get$_st().set$whiteSpace(t1);
},
 get$zIndex: function() {
  return this.get$_st().get$zIndex();
}
};

$$.Button = {"":"TextView;_text,_uuid,_parent,_nextSibling,_prevSibling,_virtIS,_childInfo,_evlInfo,_dataAttrs,_mntAttrs,_annos,_style,_node,_left,_top,_width,_height,_profile,_layout,_inDoc",
 get$_buttonNode: function() {
  return this.get$node();
},
 get$type: function() {
  return this.get$_buttonNode().get$type();
},
 set$type: function(type) {
  var t1 = this.get$node();
  t1.$dom_setAttribute$2("type", type == null || $.getInterceptor$JSStringJSArray(type).get$isEmpty(type) === true ? "button" : type);
},
 render_$0: function() {
  return $.Element_Element$html("<button>" + $.S(this.get$encodedText()) + "</button>");
}
};

$$.CheckBox = {"":"TextView;_text,_uuid,_parent,_nextSibling,_prevSibling,_virtIS,_childInfo,_evlInfo,_dataAttrs,_mntAttrs,_annos,_style,_node,_left,_top,_width,_height,_profile,_layout,_inDoc",
 get$name: function() {
  return this.get$inputNode().get$name();
},
 set$name: function(name$) {
  var t1 = $._s(name$);
  this.get$inputNode().set$name(t1);
},
 get$value: function() {
  return this.get$inputNode().get$checked();
},
 set$value: function(value) {
  var t1 = $._b(value);
  this.get$inputNode().set$checked(t1);
},
 get$inputNode: function() {
  return this.getNode$1("inp");
},
 updateInner_$1: function(html) {
  var t1, t2;
  t1 = $.S(this.get$encodedText());
  t2 = t1 + $.S(!(html == null) ? html : "");
  this.get$node().query$1("label").set$innerHtml(t2);
},
 updateInner_$0: function() {
  return this.updateInner_$1(null);
},
 render_$0: function() {
  return $.Element_Element$html("<div><input type=\"" + $.S(this.get$type()) + "\" id=\"" + $.S(this.get$uuid()) + "-inp\"/><label for=\"" + $.S(this.get$uuid()) + "-inp\" class=\"" + $.S($.get$viewConfig().get$classPrefix()) + "inner\"></label></div>");
},
 get$type: function() {
  return "checkbox";
},
 toString$0: function() {
  return $.S(this.get$className()) + "(" + $.S(this.get$text()) + ", " + $.S(this.get$value()) + ")";
},
 CheckBox$2: function(text, value) {
  if ($._b(value))
    this.set$value(true);
}
};

$$.TextBox = {"":"View;_uuid,_parent,_nextSibling,_prevSibling,_virtIS,_childInfo,_evlInfo,_dataAttrs,_mntAttrs,_annos,_style,_node,_left,_top,_width,_height,_profile,_layout,_inDoc",
 get$inputNode: function() {
  return this.get$node();
},
 get$name: function() {
  return this.get$inputNode().get$name();
},
 set$name: function(name$) {
  var t1 = $._s(name$);
  this.get$inputNode().set$name(t1);
},
 get$type: function() {
  return this.get$inputNode().get$type();
},
 set$type: function(type) {
  var t1 = !(type == null) ? type : "text";
  this.get$inputNode().set$type(t1);
},
 get$value: function() {
  return this.get$inputNode().get$value();
},
 set$value: function(value) {
  var t1 = $._s(value);
  this.get$inputNode().set$value(t1);
},
 set$placeholder: function(placeholder) {
  var t1 = $._s(placeholder);
  this.get$inputNode().set$placeholder(t1);
},
 render_$0: function() {
  return $.Element_Element$tag("input");
},
 get$isViewGroup: function() {
  return false;
},
 toString$0: function() {
  return $.S(this.get$className()) + "('" + $.S(this.get$value()) + "')";
},
 TextBox$2: function(value, type) {
  if (!(value == null) && $.getInterceptor$JSStringJSArray(value).get$isEmpty(value) !== true)
    this.set$value(value);
  if (!(type == null) && $.getInterceptor$JSStringJSArray(type).get$isEmpty(type) !== true)
    this.set$type(type);
}
};

$$.TextView = {"":"View;_text,_uuid,_parent,_nextSibling,_prevSibling,_virtIS,_childInfo,_evlInfo,_dataAttrs,_mntAttrs,_annos,_style,_node,_left,_top,_width,_height,_profile,_layout,_inDoc",
 get$text: function() {
  return this._text;
},
 set$text: function(text) {
  this._text = $._s(text);
  this.get$classes().remove$1("v-html");
  this.updateInner_$0();
},
 set$html: function(html) {
  var t1;
  this._text = "";
  t1 = this.get$classes();
  $.getInterceptor$JSArray(t1).add$1(t1, "v-html");
  this.updateInner_$1(html);
},
 updateInner_$1: function(html) {
  var t1, t2;
  t1 = $.S(this.get$encodedText());
  t2 = t1 + $.S(!(html == null) ? html : "");
  this.get$node().set$innerHtml(t2);
},
 updateInner_$0: function() {
  return this.updateInner_$1(null);
},
 get$encodedText: function() {
  return $.XmlUtil_encode(this.get$text(), 0, true, false);
},
 render_$0: function() {
  return $.Element_Element$html("<div>" + $.S(this.get$encodedText()) + "</div>");
},
 get$isViewGroup: function() {
  return false;
},
 toString$0: function() {
  return $.S(this.get$className()) + "(" + $.S(this.get$text()) + ")";
},
 TextView$1: function(text) {
  if (!(text == null) && $.getInterceptor$JSStringJSArray(text).get$isEmpty(text) !== true)
    this.set$text(text);
}
};

$$._OnDemandMap = {"":"Object;_creator,_lib1_map",
 _creator$0: function() {
  return this._creator.call$0();
},
 operator$index$1: function(key) {
  var t1 = this._lib1_map;
  return !(t1 == null) ? $.index(t1, key) : null;
},
 operator$indexSet$2: function(key, value) {
  var t1 = this._lib1_map;
  if (!(t1 == null))
    ;
  else {
    t1 = this._creator$0();
    this._lib1_map = t1;
  }
  $.indexSet(t1, key, value);
},
 clear$0: function() {
  var t1 = this._lib1_map;
  if (!(t1 == null))
    $.getInterceptor$JSArray(t1).clear$0(t1);
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 containsKey$1: function(key) {
  var t1 = this._lib1_map;
  return !(t1 == null) && t1.containsKey$1(key) === true;
},
 forEach$1: function(f) {
  var t1 = this._lib1_map;
  if (!(t1 == null))
    $.getInterceptor$JSArray(t1).forEach$1(t1, f);
},
 get$values: function() {
  var t1 = this._lib1_map;
  return !(t1 == null) ? t1.get$values() : $.CTC21;
},
 get$isEmpty: function() {
  var t1 = this._lib1_map;
  return t1 == null || $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true;
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 get$length: function() {
  var t1 = this._lib1_map;
  return !(t1 == null) ? $.getInterceptor$JSStringJSArray(t1).get$length(t1) : 0;
},
 putIfAbsent$2: function(key, ifAbsent) {
  var t1 = this._lib1_map;
  if (!(t1 == null))
    ;
  else {
    t1 = this._creator$0();
    this._lib1_map = t1;
  }
  return t1.putIfAbsent$2(key, ifAbsent);
},
 remove$1: function(key) {
  var t1 = this._lib1_map;
  return !(t1 == null) ? t1.remove$1(key) : null;
},
 is$Map: function() { return true; }
};

$$.Offset = {"":"Object;left?,top?",
 get$x: function() {
  return this.left;
},
 get$y: function() {
  return this.top;
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Offset)
    t1 = $.eqB(this.left, other.left) && $.eqB(this.top, other.top);
  else
    t1 = false;
  return t1;
},
 operator$sub$1: function(other) {
  return $.Offset$($.sub(this.left, other.get$left()), $.sub(this.top, other.get$top()));
},
 operator$add$1: function(other) {
  return $.Offset$($.add(this.left, other.get$left()), $.add(this.top, other.get$top()));
},
 operator$mul$1: function(scalar) {
  return $.Offset$($.mul(this.left, scalar), $.mul(this.top, scalar));
},
 operator$div$1: function(scalar) {
  return $.Offset$($.div(this.left, scalar), $.div(this.top, scalar));
},
 get$hashCode: function() {
  var t1 = $.add(this.left, this.top);
  return $.getInterceptor$JSNumber(t1).toInt$0(t1);
},
 toString$0: function() {
  return "(" + $.S(this.left) + ", " + $.S(this.top) + ")";
},
 is$Offset: true
};

$$.Offset3d = {"":"Offset;zIndex?,left,top",
 get$z: function() {
  return this.zIndex;
},
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Offset3d)
    t1 = $.eqB(this.left, other.left) && $.eqB(this.top, other.top) && $.eqB(this.zIndex, other.zIndex);
  else
    t1 = false;
  return t1;
},
 operator$sub$1: function(other) {
  return $.Offset3d$($.sub(this.left, other.get$left()), $.sub(this.top, other.get$top()), $.sub(this.zIndex, other.get$zIndex()));
},
 operator$add$1: function(other) {
  return $.Offset3d$($.add(this.left, other.get$left()), $.add(this.top, other.get$top()), $.add(this.zIndex, other.get$zIndex()));
},
 operator$mul$1: function(scalar) {
  return $.Offset3d$($.mul(this.left, scalar), $.mul(this.top, scalar), $.mul(this.zIndex, scalar));
},
 operator$div$1: function(scalar) {
  return $.Offset3d$($.div(this.left, scalar), $.div(this.top, scalar), $.div(this.zIndex, scalar));
},
 get$hashCode: function() {
  var t1 = $.add($.add(this.get$x(), this.get$y()), this.get$z());
  return $.getInterceptor$JSNumber(t1).toInt$0(t1);
},
 toString$0: function() {
  return "(" + $.S(this.get$x()) + ", " + $.S(this.get$y()) + ", " + $.S(this.get$z()) + ")";
},
 is$Offset3d: true
};

$$.Size = {"":"Object;width?,height?",
 operator$eq$1: function(other) {
  var t1;
  if (typeof other === 'object' && other !== null && !!other.is$Size)
    t1 = $.eqB(this.width, other.width) && $.eqB(this.height, other.height);
  else
    t1 = false;
  return t1;
},
 get$hashCode: function() {
  var t1 = $.add(this.width, this.height);
  return $.getInterceptor$JSNumber(t1).toInt$0(t1);
},
 toString$0: function() {
  return "(" + $.S(this.width) + ", " + $.S(this.height) + ")";
},
 is$Size: true
};

$$.Browser = {"":"Object;name=,version!,safari,chrome,msie,firefox,webkit,opera,ios?,android?,mobile,touch?,webkitVersion,iosVersion,androidVersion,size?",
 toString$0: function() {
  return $.S(this.name) + "(v" + $.S(this.version) + ", " + $.S(this.size) + ")";
},
 _initBrowserInfo$0: function() {
  var t1, ua, bm, m2, q;
  t1 = $.window().get$navigator().get$userAgent();
  ua = $.getInterceptor$JSString(t1).toLowerCase$0(t1);
  bm = new $.Browser__initBrowserInfo_anon(ua, this);
  m2 = $.get$Browser__randroid().firstMatch$1(ua);
  if (!(m2 == null)) {
    this.android = true;
    this.mobile = true;
    this.touch = true;
    this.androidVersion = $.Browser__versionOf(m2.group$1(1), ".");
  } else {
    m2 = $.get$Browser__rios().firstMatch$1(ua);
    if (!(m2 == null)) {
      this.ios = true;
      this.mobile = true;
      this.touch = true;
      this.iosVersion = $.Browser__versionOf(m2.group$1(1), "_");
    }
  }
  if (bm.call$1($.get$Browser__rwebkit()) === true) {
    this.webkit = true;
    this.webkitVersion = this.version;
    if (bm.call$1($.get$Browser__rchrome()) === true)
      this.chrome = true;
    else if (bm.call$1($.get$Browser__rsafari()) === true)
      this.safari = true;
  } else if (bm.call$1($.get$Browser__rmsie()) === true) {
    this.msie = true;
    t1 = $.ge($.getInterceptor$JSStringJSArray(ua).indexOf$1(ua, "IEMobile"), 0);
    this.mobile = t1;
    this.touch = t1;
  } else if (bm.call$1($.get$Browser__ropera()) === true)
    this.opera = true;
  else if ($.ltB($.getInterceptor$JSStringJSArray(ua).indexOf$1(ua, "compatible"), 0) && bm.call$1($.get$Browser__rmozilla()) === true) {
    this.name = "firefox";
    this.firefox = true;
  } else {
    this.name = "unknown";
    this.version = 1;
  }
  q = $.WindowAgent$($.window());
  this.size = $.Size$(q.get$innerWidth(), q.get$innerHeight());
},
 updateSize$0: function() {
  var q = $.WindowAgent$($.window());
  this.size = $.Size$(q.get$innerWidth(), q.get$innerHeight());
},
 Browser$0: function() {
  this._initBrowserInfo$0();
}
};

$$.DomAgent = {"":"Object;node?",
 get$innerWidth: function() {
  return this.node.get$clientWidth();
},
 get$innerHeight: function() {
  return this.node.get$clientHeight();
},
 get$innerSize: function() {
  return $.Size$(this.get$innerWidth(), this.get$innerHeight());
},
 get$width: function() {
  return this.node.get$offsetWidth();
},
 get$height: function() {
  return this.node.get$offsetHeight();
},
 get$size: function() {
  return $.Size$(this.get$width(), this.get$height());
},
 get$offsetParent: function() {
  return this.node.get$offsetParent();
},
 get$offsetLeft: function() {
  return this.node.get$offsetLeft();
},
 get$offsetTop: function() {
  return this.node.get$offsetTop();
},
 get$offset: function() {
  var t1 = this.node;
  return $.Offset$(t1.get$offsetLeft(), t1.get$offsetTop());
},
 get$pageOffset: function() {
  var el, el0, left, top$, t1, txofs;
  el = this.node;
  el0 = el;
  left = 0;
  top$ = 0;
  do {
    t1 = el0.get$offsetLeft();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    left += t1;
    t1 = el0.get$offsetTop();
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    top$ += t1;
    if (!$.eqB(el0.get$style().get$position(), "fixed")) {
      el0 = el0.get$offsetParent();
      t1 = !(el0 == null);
    } else
      t1 = false;
  } while (t1);
  do {
    txofs = $.Css_offset3dOf(el.get$style().get$transform());
    t1 = $.sub(el.get$scrollLeft(), txofs.left);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    left -= t1;
    t1 = $.sub(el.get$scrollTop(), txofs.top);
    if (typeof t1 !== 'number')
      throw $.iae(t1);
    top$ -= t1;
    el = el.get$parent();
  } while (!(el == null) && !(typeof el === 'object' && el !== null && el.is$Document()));
  t1 = $.window().get$pageXOffset();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  left += t1;
  t1 = $.window().get$pageYOffset();
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return $.Offset$(left, top$ + t1);
},
 get$computedStyle: function() {
  return $.window().$dom_getComputedStyle$2(this.node, "");
},
 isDescendantOf$1: function(parent$) {
  var n;
  for (n = this.node; !(n == null); n = n.get$parent())
    if (n == null ? parent$ == null : n === parent$)
      return true;
  return false;
},
 hide$0: function() {
  this.node.get$style().set$display("none");
}
};

$$.WindowAgent = {"":"DomAgent;node",
 get$innerWidth: function() {
  return this.node.get$innerWidth();
},
 get$innerHeight: function() {
  return this.node.get$innerHeight();
},
 get$width: function() {
  return this.node.get$innerWidth();
},
 get$height: function() {
  return this.node.get$innerHeight();
},
 get$offsetParent: function() {
  return;
},
 get$offsetLeft: function() {
  return 0;
},
 get$offsetTop: function() {
  return 0;
},
 get$offset: function() {
  return $.Offset$(0, 0);
},
 get$pageOffset: function() {
  return this.get$offset();
},
 isDescendantOf$1: function(parent$) {
  return false;
},
 get$computedStyle: function() {
  return $.CssStyleDeclaration_CssStyleDeclaration();
}
};

$$.ViewEvent = {"":"Object;_lib4_type,_stamp,_propStop,target=,currentTarget!",
 get$type: function() {
  return this._lib4_type;
},
 get$isPropagationStopped: function() {
  return this._propStop;
},
 toString$0: function() {
  return "ViewEvent(" + $.S(this.target) + "," + $.S(this.get$type()) + ")";
},
 ViewEvent$_$2: function(_type, target) {
  this.currentTarget = target;
  this.target = target;
},
 ViewEvent$2: function(type, target) {
  this.currentTarget = target;
  this.target = target;
}
};

$$.DomEvent = {"":"ViewEvent;cause,_lib4_type,_stamp,_propStop,target,currentTarget",
 get$keyCode: function() {
  return 0;
},
 get$pageOffset: function() {
  return $.Offset$(0, 0);
},
 toString$0: function() {
  return "DomEvent(" + $.S(this.target) + "," + $.S(this.cause) + ")";
}
};

$$._UiEvent = {"":"DomEvent;cause,_lib4_type,_stamp,_propStop,target,currentTarget",
 get$_uc: function() {
  return this.cause;
},
 get$keyCode: function() {
  return this.get$_uc().get$$$dom_keyCode();
},
 get$pageOffset: function() {
  return $.Offset$(this.get$_uc().get$pageX(), this.get$_uc().get$pageY());
},
 toString$0: function() {
  return "UiEvent(" + $.S(this.target) + "," + $.S(this.cause) + ")";
}
};

$$._KbEvent = {"":"_UiEvent;cause,_lib4_type,_stamp,_propStop,target,currentTarget",
 get$_kc: function() {
  return this.cause;
},
 get$keyCode: function() {
  return this.get$_kc().get$keyCode();
},
 toString$0: function() {
  return "KeyboardEvent(" + $.S(this.target) + "," + $.S(this.cause) + ")";
}
};

$$._MsEvent = {"":"_UiEvent;cause,_lib4_type,_stamp,_propStop,target,currentTarget",
 toString$0: function() {
  return "MouseEvent(" + $.S(this.target) + "," + $.S(this.cause) + ")";
}
};

$$.ViewEventListenerList = {"":"Object;_lib4_ptr?,_lib4_type",
 add$1: function(handler) {
  this._lib4_ptr.add$2(this._lib4_type, handler);
  return this;
},
 remove$1: function(handler) {
  this._lib4_ptr.remove$2(this._lib4_type, handler);
  return this;
},
 get$isEmpty: function() {
  var t1 = this._lib4_ptr;
  return $.getInterceptor$JSStringJSArray(t1).isEmpty$1(t1, this._lib4_type);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
}
};

$$.ViewEventListenerMap = {"":"Object;_lib4_ptr?",
 operator$index$1: function(type) {
  return this._get$1(type);
},
 _get$1: function(type) {
  return this._lnlist.putIfAbsent$2(type, new $.ViewEventListenerMap__get_anon(type, this));
}
};

$$.ViewEvents = {"":"ViewEventListenerMap;_lib4_ptr,_lnlist",
 get$blur: function() {
  return this._get$1("blur");
},
 blur$0: function() {
  return this.get$blur().call$0();
},
 get$focus: function() {
  return this._get$1("focus");
},
 focus$0: function() {
  return this.get$focus().call$0();
},
 get$mouseDown: function() {
  return this._get$1("mouseDown");
},
 get$layout: function() {
  return this._get$1("layout");
},
 get$preLayout: function() {
  return this._get$1("preLayout");
},
 preLayout$1: function(arg0) {
  return this.get$preLayout().call$1(arg0);
}
};

$$.Broadcaster = {"":"Object;"
};

$$.BroadcastEvents = {"":"ViewEventListenerMap;_lib4_ptr,_lnlist"
};

$$._Broadcaster = {"":"Broadcaster;_lib4_listeners,_on",
 get$on: function() {
  return this._on;
},
 sendEvent$2: function(event$, type) {
  return this._lib4_listeners.send$2(event$, type);
},
 sendEvent$1: function(event$) {
  return this.sendEvent$2(event$, null);
},
 _Broadcaster$0: function() {
  this._lib4_listeners = $._BroadcastListeners$(this);
  this._on = $.BroadcastEvents$(this._lib4_listeners);
}
};

$$._BroadcastListeners = {"":"Object;_lib4_owner,_lib4_listeners",
 isEmpty$1: function(type) {
  var t1, ls;
  t1 = this._lib4_listeners;
  if (!(t1 == null)) {
    ls = $.index(t1, type);
    t1 = ls == null || $.getInterceptor$JSStringJSArray(ls).get$isEmpty(ls) === true;
  } else
    t1 = true;
  return t1;
},
 get$isEmpty: function() { return new $.BoundClosure0(this, 'isEmpty$1'); },
 add$2: function(type, listener) {
  var t1;
  if (listener == null)
    throw $.$$throw($.ArgumentError$("listener"));
  t1 = this._lib4_listeners.putIfAbsent$2(type, new $._BroadcastListeners_add_anon());
  $.getInterceptor$JSArray(t1).add$1(t1, listener);
},
 remove$2: function(type, listener) {
  var ls = $.index(this._lib4_listeners, type);
  return !(ls == null) && $.ListUtil_remove(ls, listener);
},
 send$2: function(event$, type) {
  var ls, t1, dispatched;
  if (type == null)
    type = event$.get$type();
  ls = $.index(this._lib4_listeners, type);
  if (!(ls == null))
    for (t1 = $.List_List$from(ls), $.setRuntimeTypeInfo(t1, []), t1 = $.CTC0.iterator$0(t1), dispatched = false; t1.get$hasNext() === true; dispatched = true) {
      t1.next$0().call$1(event$);
      if (event$.get$isPropagationStopped() === true)
        return true;
    }
  else
    dispatched = false;
  for (t1 = $.get$rootViews(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    if (t1.next$0().sendEvent$2(event$, type) === true)
      dispatched = true;
  return dispatched;
}
};

$$.ActivateEvent = {"":"ViewEvent;_source,_lib4_type,_stamp,_propStop,target,currentTarget",
 get$source: function() {
  return this._source;
},
 source$1: function(arg0) {
  return this.get$source().call$1(arg0);
}
};

$$.ChangeEvent = {"":"ViewEvent;_value,_lib4_type,_stamp,_propStop,target,currentTarget",
 get$value: function() {
  return this._value;
},
 toString$0: function() {
  return "ChangeEvent(" + $.S(this.target) + "," + $.S(this.get$value()) + ")";
}
};

$$.LayoutEvent = {"":"ViewEvent;_context,_lib4_type,_stamp,_propStop,target,currentTarget",
 toString$0: function() {
  return "LayoutEvent(" + $.S(this.target) + ")";
}
};

$$.LayoutManager = {"":"RunOnceViewManager;_layouts,_imgWaits,_afters,_inLayout,_inCallback=,_runQue,_views,_task,_readyChecks,_ignoreDetached,_ignoreSubviews",
 addLayout$2: function(name$, clayout) {
  var t1, old;
  t1 = this._layouts;
  old = $.index(t1, name$);
  $.indexSet(t1, name$, clayout);
  return old;
},
 getLayout$1: function(name$) {
  return $.index(this._layouts, name$);
},
 requestLayout$3: function(view, immediate, descendantOnly) {
  var parent$, t1, t2;
  if (descendantOnly !== true) {
    parent$ = view.get$parent();
    if (view.get$profile().get$anchorView() == null)
      if (!(parent$ == null)) {
        t1 = parent$.get$layout().get$type();
        t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) !== true;
        t1 = t2;
      } else
        t1 = false;
    else
      t1 = false;
    if (t1)
      view = parent$;
  }
  if (immediate === true)
    this.flush$2(view, true);
  else
    this.queue$1(view);
},
 get$inLayout: function() {
  return this._inLayout > 0 && $.leB(this._inCallback, 0);
},
 flush$2: function(view, force) {
  var t1 = this._imgWaits;
  if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true)
    $.RunOnceViewManager.prototype.flush$2.call(this, view, force);
  else if (!(view == null))
    this.queue$1(view);
},
 flush$0: function() {
  return this.flush$2(null, false);
},
 handle_$1: function(view) {
  var mctx, parent$, t1, afters0, afters, task;
  this._inLayout = this._inLayout + 1;
  try {
    mctx = $.MeasureContext$();
    mctx.preLayout$1(view);
    parent$ = view.get$parent();
    if (parent$ == null)
      $.rootLayout(mctx, view);
    else if (!(view.get$profile().get$anchorView() == null))
      $.AnchorRelation$(parent$)._layoutAnchored$3(mctx, view.get$profile().get$anchorView(), view);
    else {
      t1 = parent$.get$layout().get$type();
      if ($.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) === true) {
        mctx.setWidthByProfile$2(view, new $.LayoutManager_handle__anon(parent$));
        mctx.setHeightByProfile$2(view, new $.LayoutManager_handle__anon0(parent$));
      }
    }
    this.doLayout$2(mctx, view);
  } finally {
    t1 = this._inLayout - 1;
    this._inLayout = t1;
    if (t1 <= 0 && this.isQueueEmpty$0() === true && $.CTC0.get$isEmpty(this._afters) !== true) {
      t1 = this._afters;
      afters0 = $.List_List$from(t1);
      $.setRuntimeTypeInfo(afters0, []);
      afters = afters0;
      $.CTC0.clear$0(t1);
      for (t1 = afters, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
        task = t1.next$0();
        task.call$0();
      }
    }
  }
},
 doLayout$2: function(mctx, view) {
  if (view.get$visible() === true) {
    view.get$layout().get$handler().doLayout$2(mctx, view);
    this._inCallback = $.add(this._inCallback, 1);
    try {
      view.onLayout_$1(mctx);
    } finally {
      this._inCallback = $.sub(this._inCallback, 1);
    }
  }
},
 LayoutManager$0: function() {
  this.addLayout$2("linear", $.LinearLayout$());
  this.addLayout$2("tile", $.TileLayout$());
  var freeLayout = $.FreeLayout$();
  this.addLayout$2("none", freeLayout);
  this.addLayout$2("", freeLayout);
}
};

$$.Layout = {"":"Object;"
};

$$.AbstractLayout = {"":"Layout;",
 get$isProfileInherited: function() {
  return true;
},
 get$isFlex: function() {
  return false;
},
 doLayout$2: function(mctx, view) {
  var ar, t1, t2;
  if (!(view.get$firstChild() == null)) {
    ar = $.AnchorRelation$(view);
    for (t1 = ar.indeps, t2 = $.CTC0.iterator$0(t1); t2.get$hasNext() === true;)
      mctx.preLayout$1(t2.next$0());
    this.doLayout_$3(mctx, view, t1);
    ar.layoutAnchored$1(mctx);
    for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      if (t2.get$visible() === true)
        t2.doLayout_$1(mctx);
    }
  }
}
};

$$.FreeLayout = {"":"AbstractLayout;",
 measureWidth$2: function(mctx, view) {
  var wd, t1, t2, subsz;
  wd = mctx.getWidthByApp$1(view);
  if (wd == null) {
    wd = view.get$innerWidth();
    if (typeof wd !== 'number')
      return this.measureWidth$2$bailout(1, mctx, view, wd);
    for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      if (view.shallLayout_$1(t2) === true && t2.get$profile().get$anchorView() == null) {
        subsz = t2.measureWidth_$1(mctx);
        t2 = t2.get$left();
        subsz = $.add(t2, !(subsz == null) ? subsz : 0);
        if (wd == null || $.gtB(subsz, wd))
          wd = subsz;
      }
    }
    if (!(wd == null))
      wd = $.add(wd, mctx.getBorderWidth$1(view));
  }
  return wd;
},
 measureWidth$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      wd = env2;
      view = env1;
      mctx = env0;
      break;
  }
  switch (state0) {
    case 0:
      wd = mctx.getWidthByApp$1(view);
    case 1:
      var wd, view, mctx, t1, t2, subsz;
      if (state0 === 1 || state0 === 0 && wd == null)
        switch (state0) {
          case 0:
            wd = view.get$innerWidth();
          case 1:
            state0 = 0;
            for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              if (view.shallLayout_$1(t2) === true && t2.get$profile().get$anchorView() == null) {
                subsz = t2.measureWidth_$1(mctx);
                t2 = t2.get$left();
                subsz = $.add(t2, !(subsz == null) ? subsz : 0);
                if (wd == null || $.gtB(subsz, wd))
                  wd = subsz;
              }
            }
            if (!(wd == null))
              wd = $.add(wd, mctx.getBorderWidth$1(view));
        }
      return wd;
  }
},
 measureHeight$2: function(mctx, view) {
  var hgh, t1, t2, subsz;
  hgh = mctx.getHeightByApp$1(view);
  if (hgh == null) {
    hgh = view.get$innerHeight();
    if (typeof hgh !== 'number')
      return this.measureHeight$2$bailout(1, mctx, view, hgh);
    for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      if (view.shallLayout_$1(t2) === true && t2.get$profile().get$anchorView() == null) {
        subsz = t2.measureHeight_$1(mctx);
        t2 = t2.get$top();
        subsz = $.add(t2, !(subsz == null) ? subsz : 0);
        if (hgh == null || $.gtB(subsz, hgh))
          hgh = subsz;
      }
    }
    if (!(hgh == null))
      hgh = $.add(hgh, mctx.getBorderHeight$1(view));
  }
  return hgh;
},
 measureHeight$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      hgh = env2;
      view = env1;
      mctx = env0;
      break;
  }
  switch (state0) {
    case 0:
      hgh = mctx.getHeightByApp$1(view);
    case 1:
      var hgh, view, mctx, t1, t2, subsz;
      if (state0 === 1 || state0 === 0 && hgh == null)
        switch (state0) {
          case 0:
            hgh = view.get$innerHeight();
          case 1:
            state0 = 0;
            for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
              t2 = t1.next$0();
              if (view.shallLayout_$1(t2) === true && t2.get$profile().get$anchorView() == null) {
                subsz = t2.measureHeight_$1(mctx);
                t2 = t2.get$top();
                subsz = $.add(t2, !(subsz == null) ? subsz : 0);
                if (hgh == null || $.gtB(subsz, hgh))
                  hgh = subsz;
              }
            }
            if (!(hgh == null))
              hgh = $.add(hgh, mctx.getBorderHeight$1(view));
        }
      return hgh;
  }
},
 get$isProfileInherited: function() {
  return false;
},
 doLayout_$3: function(mctx, view, children) {
  var innerWidth$, innerHeight$, t1, t2;
  innerWidth$ = new $.FreeLayout_doLayout__anon(view);
  innerHeight$ = new $.FreeLayout_doLayout__anon0(view);
  for (t1 = $.CTC0.iterator$0(children); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    mctx.setWidthByProfile$2(t2, innerWidth$);
    mctx.setHeightByProfile$2(t2, innerHeight$);
  }
}
};

$$._AnchorOfRoot = {"":"Object;",
 get$realWidth: function() {
  return $.get$browser().get$size().get$width();
},
 get$innerWidth: function() {
  return $.get$browser().get$size().get$width();
},
 get$realHeight: function() {
  return $.get$browser().get$size().get$height();
},
 get$innerHeight: function() {
  return $.get$browser().get$size().get$height();
}
};

$$._AnchorOfNode = {"":"Object;_q",
 get$realWidth: function() {
  return this._q.get$width();
},
 get$innerWidth: function() {
  return this._q.get$innerWidth();
},
 get$realHeight: function() {
  return this._q.get$height();
},
 get$innerHeight: function() {
  return this._q.get$innerHeight();
}
};

$$.MeasureContext = {"":"Object;widths,heights,_borderWds,_borderHghs,_lib6_dataAttrs!",
 getBorderWidth$1: function(view) {
  var t1, v, qs, t2;
  t1 = this._borderWds;
  v = $.index(t1, view);
  if (v == null) {
    qs = $.DomAgent$(view.get$node()).get$computedStyle();
    t2 = $.add($.Css_intOf(qs.get$borderLeftWidth(), 0, null), $.Css_intOf(qs.get$borderRightWidth(), 0, null));
    $.indexSet(t1, view, t2);
    return t2;
  }
  return v;
},
 getBorderHeight$1: function(view) {
  var t1, v, qs, t2;
  t1 = this._borderHghs;
  v = $.index(t1, view);
  if (v == null) {
    qs = $.DomAgent$(view.get$node()).get$computedStyle();
    t2 = $.add($.Css_intOf(qs.get$borderTopWidth(), 0, null), $.Css_intOf(qs.get$borderBottomWidth(), 0, null));
    $.indexSet(t1, view, t2);
    return t2;
  }
  return v;
},
 getProfile$2: function(view, name$) {
  var v = view.get$profile().getPropertyValue$1(name$);
  if ($.getInterceptor$JSStringJSArray(v).get$isEmpty(v) === true) {
    if (!(view.get$parent() == null) && view.get$parent().get$layout().get$handler().get$isProfileInherited() === true)
      v = view.get$parent().get$layout().getPropertyValue$1(name$);
    if ($.getInterceptor$JSStringJSArray(v).get$isEmpty(v) === true && view.get$layout().get$handler().get$isFlex() === true)
      v = "flex";
  }
  return v;
},
 setWidthByProfile$2: function(view, width) {
  var amt, t1, wd;
  if (view.get$visible() === true) {
    amt = $.AmountInfo$(this.getProfile$2(view, "width"));
    switch (amt.type) {
      case $.CTC11:
        view.set$width(amt.value);
        break;
      case $.CTC12:
        view.set$width($._minMax(width.call$0(), this.getProfile$2(view, "min-width"), this.getProfile$2(view, "max-width")));
        break;
      case $.CTC13:
        t1 = $.mul(width.call$0(), amt.value);
        t1 = $.getInterceptor$JSNumber(t1).round$0(t1);
        view.set$width($._minMax($.getInterceptor$JSNumber(t1).toInt$0(t1), this.getProfile$2(view, "min-width"), this.getProfile$2(view, "max-width")));
        break;
      case $.CTC14:
        this._contentWd$1(view);
        break;
      case $.CTC15:
        if (this.getWidthByApp$1(view) == null) {
          if (view.get$parent() == null)
            if (view.get$shallMeasureContent() !== true) {
              wd = width.call$0();
              t1 = $.gtB(wd, 0);
            } else {
              wd = null;
              t1 = false;
            }
          else {
            wd = null;
            t1 = false;
          }
          if (t1)
            view.set$width($._minMax(wd, this.getProfile$2(view, "min-width"), this.getProfile$2(view, "max-width")));
          else
            this._contentWd$1(view);
        }
        break;
      case $.CTC16:
        $.ViewImpl_clearWidthByLayout(view);
        break;
    }
  }
},
 setHeightByProfile$2: function(view, height) {
  var amt, t1, hgh;
  if (view.get$visible() === true) {
    amt = $.AmountInfo$(this.getProfile$2(view, "height"));
    switch (amt.type) {
      case $.CTC11:
        view.set$height(amt.value);
        break;
      case $.CTC12:
        view.set$height($._minMax(height.call$0(), this.getProfile$2(view, "min-height"), this.getProfile$2(view, "max-height")));
        break;
      case $.CTC13:
        t1 = $.mul(height.call$0(), amt.value);
        t1 = $.getInterceptor$JSNumber(t1).round$0(t1);
        view.set$height($._minMax($.getInterceptor$JSNumber(t1).toInt$0(t1), this.getProfile$2(view, "min-height"), this.getProfile$2(view, "max-height")));
        break;
      case $.CTC14:
        this._contentHgh$1(view);
        break;
      case $.CTC15:
        if (this.getHeightByApp$1(view) == null) {
          if (view.get$parent() == null)
            if (view.get$shallMeasureContent() !== true) {
              hgh = height.call$0();
              t1 = $.gtB(hgh, 0);
            } else {
              hgh = null;
              t1 = false;
            }
          else {
            hgh = null;
            t1 = false;
          }
          if (t1)
            view.set$height($._minMax(hgh, this.getProfile$2(view, "min-height"), this.getProfile$2(view, "max-height")));
          else
            this._contentHgh$1(view);
        }
        break;
      case $.CTC16:
        $.ViewImpl_clearHeightByLayout(view);
        break;
    }
  }
},
 _contentWd$1: function(view) {
  var wd = view.measureWidth_$1(this);
  if (!(wd == null))
    view.set$width(wd);
},
 _contentHgh$1: function(view) {
  var hgh = view.measureHeight_$1(this);
  if (!(hgh == null))
    view.set$height(hgh);
},
 measureWidth$1: function(view) {
  var t1, wd, parentInnerWidth, limit, t2;
  if (view.get$visible() === true) {
    t1 = this.widths;
    wd = $.index(t1, view);
    if (!(wd == null) || t1.containsKey$1(view) === true)
      return wd;
    wd = view.get$layout().get$handler().measureWidth$2(this, view);
    parentInnerWidth = new $.MeasureContext_measureWidth_anon(view);
    limit = $._amountOf(view.get$profile().get$maxWidth(), parentInnerWidth);
    if (!(limit == null))
      t2 = wd == null || $.gtB(wd, limit);
    else
      t2 = false;
    if (t2)
      wd = limit;
    limit = $._amountOf(view.get$profile().get$minWidth(), parentInnerWidth);
    if (!(limit == null))
      t2 = wd == null || $.ltB(wd, limit);
    else
      t2 = false;
    if (t2)
      wd = limit;
    $.indexSet(t1, view, wd);
    return wd;
  }
  return 0;
},
 measureHeight$1: function(view) {
  var t1, hgh, parentInnerHeight, limit, t2;
  if (view.get$visible() === true) {
    t1 = this.heights;
    hgh = $.index(t1, view);
    if (!(hgh == null) || t1.containsKey$1(view) === true)
      return hgh;
    hgh = view.get$layout().get$handler().measureHeight$2(this, view);
    parentInnerHeight = new $.MeasureContext_measureHeight_anon(view);
    limit = $._amountOf(view.get$profile().get$maxHeight(), parentInnerHeight);
    if (!(limit == null))
      t2 = hgh == null || $.gtB(hgh, limit);
    else
      t2 = false;
    if (t2)
      hgh = limit;
    limit = $._amountOf(view.get$profile().get$minHeight(), parentInnerHeight);
    if (!(limit == null))
      t2 = hgh == null || $.ltB(hgh, limit);
    else
      t2 = false;
    if (t2)
      hgh = limit;
    $.indexSet(t1, view, hgh);
    return hgh;
  }
  return 0;
},
 measureContentWidth$2: function(view, autowidth) {
  var t1, wd;
  t1 = this.widths;
  wd = $.index(t1, view);
  return !(wd == null) || t1.containsKey$1(view) === true ? wd : this._measureContent$2(view, autowidth).get$width();
},
 measureContentHeight$2: function(view, autowidth) {
  var t1, hgh;
  t1 = this.heights;
  hgh = $.index(t1, view);
  return !(hgh == null) || t1.containsKey$1(view) === true ? hgh : this._measureContent$2(view, autowidth).get$height();
},
 _measureContent$2: function(view, autowidth) {
  var nodestyle, pos, orgspace, orgwd, orghgh, qview, width, height, parentInnerWidth, parentInnerHeight, limit, t1;
  if (view.get$visible() !== true) {
    $.indexSet(this.widths, view, 0);
    $.indexSet(this.heights, view, 0);
    return $.Size$(0, 0);
  }
  if (autowidth) {
    nodestyle = view.get$node().get$style();
    pos = nodestyle.get$position();
    if (!$.eqB(pos, "fixed") && !$.eqB(pos, "static")) {
      orgspace = nodestyle.get$whiteSpace();
      nodestyle.set$whiteSpace("nowrap");
    } else
      orgspace = null;
    orgwd = nodestyle.get$width();
    orghgh = nodestyle.get$height();
    nodestyle.set$width("");
    nodestyle.set$height("");
  } else {
    nodestyle = null;
    orgspace = null;
    orgwd = null;
    orghgh = null;
  }
  qview = $.DomAgent$(view.get$node());
  width = qview.get$width();
  height = qview.get$height();
  if (!(orgspace == null))
    nodestyle.set$whiteSpace(orgspace);
  if (!(orgwd == null) && $.getInterceptor$JSStringJSArray(orgwd).get$isEmpty(orgwd) !== true)
    nodestyle.set$width(orgwd);
  if (!(orghgh == null) && $.getInterceptor$JSStringJSArray(orghgh).get$isEmpty(orghgh) !== true)
    nodestyle.set$height(orghgh);
  parentInnerWidth = new $.MeasureContext__measureContent_anon(view);
  parentInnerHeight = new $.MeasureContext__measureContent_anon0(view);
  limit = $._amountOf(view.get$profile().get$maxWidth(), parentInnerWidth);
  if (!(autowidth && $.gtB(width, $.get$browser().get$size().get$width())))
    t1 = !(limit == null) && $.gtB(width, limit);
  else
    t1 = true;
  if (t1) {
    nodestyle.set$width($.Css_px(!(limit == null) ? limit : $.get$browser().get$size().get$width()));
    width = qview.get$width();
    height = qview.get$height();
  }
  limit = $._amountOf(view.get$profile().get$maxHeight(), parentInnerHeight);
  if (!(limit == null) && $.gtB(height, limit))
    height = limit;
  limit = $._amountOf(view.get$profile().get$minWidth(), parentInnerWidth);
  if (!(limit == null) && $.ltB(width, limit))
    width = limit;
  limit = $._amountOf(view.get$profile().get$minHeight(), parentInnerHeight);
  if (!(limit == null) && $.ltB(height, limit))
    height = limit;
  $.indexSet(this.widths, view, width);
  $.indexSet(this.heights, view, height);
  return $.Size$(width, height);
},
 getLeftByApp$1: function(view) {
  return view.get$profile().get$anchorView() == null && $.ViewImpl_isLeftByApp(view) ? view.get$left() : null;
},
 getTopByApp$1: function(view) {
  return view.get$profile().get$anchorView() == null && $.ViewImpl_isTopByApp(view) ? view.get$top() : null;
},
 getWidthByApp$1: function(view) {
  var amtInf = $.AmountInfo$(this.getProfile$2(view, "width"));
  switch (amtInf.type) {
    case $.CTC11:
      return amtInf.value;
    case $.CTC15:
    case $.CTC16:
      return $.ViewImpl_isWidthByApp(view) ? view.get$width() : null;
  }
},
 getHeightByApp$1: function(view) {
  var amtInf = $.AmountInfo$(this.getProfile$2(view, "height"));
  switch (amtInf.type) {
    case $.CTC11:
      return amtInf.value;
    case $.CTC15:
    case $.CTC16:
      return $.ViewImpl_isHeightByApp(view) ? view.get$height() : null;
  }
},
 preLayout$1: function(view) {
  var t1 = $.get$layoutManager();
  t1.set$_inCallback($.add(t1.get$_inCallback(), 1));
  try {
    view.onPreLayout_$1(this);
  } finally {
    t1 = $.get$layoutManager();
    t1.set$_inCallback($.sub(t1.get$_inCallback(), 1));
  }
},
 get$dataAttributes: function() {
  var t1 = this._lib6_dataAttrs;
  return !(t1 == null) ? t1 : $.MapUtil_onDemand(new $.MeasureContext_dataAttributes_anon(this));
}
};

$$.LinearLayout = {"":"AbstractLayout;",
 measureWidth$2: function(mctx, view) {
  return (!$.eqB(view.get$layout().get$orient(), "vertical") ? $._HLayout$() : $._VLayout$()).measureWidth$2(mctx, view);
},
 measureHeight$2: function(mctx, view) {
  return (!$.eqB(view.get$layout().get$orient(), "vertical") ? $._HLayout$() : $._VLayout$()).measureHeight$2(mctx, view);
},
 doLayout_$3: function(mctx, view, children) {
  return (!$.eqB(view.get$layout().get$orient(), "vertical") ? $._HLayout$() : $._VLayout$()).doLayout$3(mctx, view, children);
}
};

$$._LinearHandler = {"":"Object;"
};

$$._HLayout = {"":"_LinearHandler;",
 measureWidth$2: function(mctx, view) {
  var va, spcinf, gapinf, defpwd, t1, width, prevSpacing, t2, si, t3, pwd, amt, wapp, wd;
  va = mctx.getWidthByApp$1(view);
  if (!(va == null))
    return va;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), $.get$_SPACING(), null);
  gapinf = $.SideInfo$(view.get$layout().get$gap(), null, null);
  defpwd = view.get$layout().get$width();
  for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), width = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true || !(t2.get$profile().get$anchorView() == null))
      continue;
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    if (prevSpacing == null)
      t3 = si.left;
    else {
      t3 = gapinf.left;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.left);
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    width += t3;
    prevSpacing = si.right;
    pwd = t2.get$profile().get$width();
    amt = $._getAmountInfo(t2, $.getInterceptor$JSStringJSArray(pwd).get$isEmpty(pwd) === true ? defpwd : pwd);
    switch (amt.type) {
      case $.CTC11:
        t2 = amt.value;
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        width += t2;
        break;
      case $.CTC15:
      case $.CTC14:
        wapp = mctx.getWidthByApp$1(t2);
        wd = !(wapp == null) && !$.eqB(amt.type, $.CTC14) ? wapp : t2.measureWidth_$1(mctx);
        t2 = !(wd == null) ? wd : t2.get$realWidth();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        width += t2;
        break;
      case $.CTC16:
        t2 = t2.get$realWidth();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        width += t2;
        break;
    }
  }
  t1 = mctx.getBorderWidth$1(view);
  t1 = $.add(t1, !(prevSpacing == null) ? prevSpacing : $.add(spcinf.left, spcinf.right));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return width + t1;
},
 measureHeight$2: function(mctx, view) {
  var va, spcinf, defphgh, borderHgh, t1, height, t2, si, hgh, phgh, amt, happ, h;
  va = mctx.getHeightByApp$1(view);
  if (!(va == null))
    return va;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), $.get$_SPACING(), null);
  defphgh = view.get$layout().get$height();
  borderHgh = mctx.getBorderHeight$1(view);
  for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), height = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true || !(t2.get$profile().get$anchorView() == null))
      continue;
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    hgh = $.add($.add(si.top, si.bottom), borderHgh);
    phgh = t2.get$profile().get$height();
    amt = $._getAmountInfo(t2, $.getInterceptor$JSStringJSArray(phgh).get$isEmpty(phgh) === true ? defphgh : phgh);
    switch (amt.type) {
      case $.CTC11:
        hgh = $.add(hgh, amt.value);
        break;
      case $.CTC15:
      case $.CTC14:
        happ = mctx.getHeightByApp$1(t2);
        h = !(happ == null) && !$.eqB(amt.type, $.CTC14) ? happ : t2.measureHeight_$1(mctx);
        hgh = $.add(hgh, !(h == null) ? h : t2.get$realHeight());
        break;
      case $.CTC16:
        hgh = $.add(hgh, t2.get$realHeight());
        break;
      default:
        continue;
    }
    if (height == null || $.gtB(hgh, height))
      height = hgh;
  }
  return height;
},
 doLayout$3: function(mctx, view, children) {
  var spcinf, gapinf, defpwd, childspcinfs, flexViews, flexs, t1, nflex, prevSpacing, assigned, t2, si, t3, pwd, amt, wdapp, wd, space, per, len, j, delta, defAlign, align;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), $.get$_SPACING(), null);
  gapinf = $.SideInfo$(view.get$layout().get$gap(), null, null);
  defpwd = view.get$layout().get$width();
  childspcinfs = $.Map_Map();
  flexViews = $.List_List(null);
  $.setRuntimeTypeInfo(flexViews, []);
  flexs = $.List_List(null);
  $.setRuntimeTypeInfo(flexs, []);
  for (t1 = $.CTC0.iterator$0(children), nflex = 0, prevSpacing = null, assigned = 0; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true) {
      mctx.setWidthByProfile$2(t2, new $._HLayout_doLayout_anon(view));
      mctx.setHeightByProfile$2(t2, new $._HLayout_doLayout_anon0(view));
      continue;
    }
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    $.indexSet(childspcinfs, t2, si);
    if (prevSpacing == null)
      t3 = si.left;
    else {
      t3 = gapinf.left;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.left);
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    prevSpacing = si.right;
    pwd = t2.get$profile().get$width();
    amt = $._getAmountInfo(t2, $.getInterceptor$JSStringJSArray(pwd).get$isEmpty(pwd) === true ? defpwd : pwd);
    t3 = amt.type;
    switch (t3) {
      case $.CTC11:
        t3 = amt.value;
        t2.set$width(t3);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      case $.CTC12:
        t3 = amt.value;
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        nflex += t3;
        flexs.push(t3);
        flexViews.push(t2);
        break;
      case $.CTC13:
        t3 = $.mul(view.get$innerWidth(), amt.value);
        t3 = $.getInterceptor$JSNumber(t3).round$0(t3);
        t3 = $.getInterceptor$JSNumber(t3).toInt$0(t3);
        t2.set$width(t3);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      case $.CTC16:
        $.ViewImpl_clearWidthByLayout(t2);
        t3 = t2.get$realWidth();
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      default:
        if ($.eqB(t3, $.CTC15)) {
          wdapp = mctx.getWidthByApp$1(t2);
          t3 = !(wdapp == null);
        } else {
          wdapp = null;
          t3 = false;
        }
        if (t3) {
          if (typeof wdapp !== 'number')
            throw $.iae(wdapp);
          assigned += wdapp;
        } else {
          wd = t2.measureWidth_$1(mctx);
          if (!(wd == null)) {
            t2.set$width(wd);
            if (typeof wd !== 'number')
              throw $.iae(wd);
            assigned += wd;
          } else {
            t3 = t2.get$realWidth();
            if (typeof t3 !== 'number')
              throw $.iae(t3);
            assigned += t3;
          }
        }
        break;
    }
    mctx.setHeightByProfile$2(t2, new $._HLayout_doLayout_anon1(si, view));
  }
  if (nflex > 0) {
    space = $.sub($.sub(view.get$innerWidth(), assigned), prevSpacing);
    per = $.div(space, nflex);
    for (len = flexs.length - 1, j = 0; true; ++j) {
      if (j === len) {
        if (j >= flexViews.length)
          throw $.ioore(j);
        flexViews[j].set$width(space);
        break;
      }
      if (j >= flexs.length)
        throw $.ioore(j);
      t1 = $.mul(per, flexs[j]);
      t1 = $.getInterceptor$JSNumber(t1).round$0(t1);
      delta = $.getInterceptor$JSNumber(t1).toInt$0(t1);
      if (j >= flexViews.length)
        throw $.ioore(j);
      flexViews[j].set$width(delta);
      space = $.sub(space, delta);
    }
  }
  defAlign = view.get$layout().get$align();
  for (t1 = $.CTC0.iterator$0(children), prevSpacing = null, assigned = 0; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true)
      continue;
    si = $.index(childspcinfs, t2);
    if (prevSpacing == null)
      t3 = si.get$left();
    else {
      t3 = gapinf.left;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.get$left());
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    t2.set$left(assigned);
    t3 = t2.get$realWidth();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    prevSpacing = si.get$right();
    align = t2.get$profile().get$align();
    if ($.getInterceptor$JSStringJSArray(align).get$isEmpty(align) === true)
      align = defAlign;
    space = $.index(childspcinfs, t2).get$top();
    switch (align) {
      case "center":
      case "end":
        delta = $.sub($.sub($.sub(view.get$innerHeight(), si.get$top()), si.get$bottom()), t2.get$realHeight());
        t2.set$top($.add(space, $.eqB(align, "center") ? $.tdiv(delta, 2) : delta));
        break;
      default:
        t2.set$top(space);
        break;
    }
  }
}
};

$$._VLayout = {"":"_LinearHandler;",
 measureHeight$2: function(mctx, view) {
  var va, spcinf, gapinf, defphgh, t1, height, prevSpacing, t2, si, t3, phgh, amt, happ, hgh;
  va = mctx.getHeightByApp$1(view);
  if (!(va == null))
    return va;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), $.get$_SPACING(), null);
  gapinf = $.SideInfo$(view.get$layout().get$gap(), null, null);
  defphgh = view.get$layout().get$height();
  for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), height = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true || !(t2.get$profile().get$anchorView() == null))
      continue;
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    if (prevSpacing == null)
      t3 = si.top;
    else {
      t3 = gapinf.top;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.top);
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    height += t3;
    prevSpacing = si.bottom;
    phgh = t2.get$profile().get$height();
    amt = $._getAmountInfo(t2, $.getInterceptor$JSStringJSArray(phgh).get$isEmpty(phgh) === true ? defphgh : phgh);
    switch (amt.type) {
      case $.CTC11:
        t2 = amt.value;
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        height += t2;
        break;
      case $.CTC15:
      case $.CTC14:
        happ = mctx.getHeightByApp$1(t2);
        hgh = !(happ == null) && !$.eqB(amt.type, $.CTC14) ? happ : t2.measureHeight_$1(mctx);
        t2 = !(hgh == null) ? hgh : t2.get$realHeight();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        height += t2;
        break;
      case $.CTC16:
        t2 = t2.get$realHeight();
        if (typeof t2 !== 'number')
          throw $.iae(t2);
        height += t2;
        break;
    }
  }
  t1 = mctx.getBorderHeight$1(view);
  t1 = $.add(t1, !(prevSpacing == null) ? prevSpacing : $.add(spcinf.top, spcinf.bottom));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  return height + t1;
},
 measureWidth$2: function(mctx, view) {
  var va, spcinf, defpwd, borderWd, t1, width, t2, si, wd, pwd, amt, wapp, w;
  va = mctx.getWidthByApp$1(view);
  if (!(va == null))
    return va;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), $.get$_SPACING(), null);
  defpwd = view.get$layout().get$width();
  borderWd = mctx.getBorderWidth$1(view);
  for (t1 = view.get$children(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), width = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true || !(t2.get$profile().get$anchorView() == null))
      continue;
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    wd = $.add($.add(si.left, si.right), borderWd);
    pwd = t2.get$profile().get$width();
    amt = $._getAmountInfo(t2, $.getInterceptor$JSStringJSArray(pwd).get$isEmpty(pwd) === true ? defpwd : pwd);
    switch (amt.type) {
      case $.CTC11:
        wd = $.add(wd, amt.value);
        break;
      case $.CTC15:
      case $.CTC14:
        wapp = mctx.getWidthByApp$1(t2);
        w = !(wapp == null) && !$.eqB(amt.type, $.CTC14) ? wapp : t2.measureWidth_$1(mctx);
        wd = $.add(wd, !(w == null) ? w : t2.get$realWidth());
        break;
      case $.CTC16:
        wd = $.add(wd, t2.get$realWidth());
        break;
      default:
        continue;
    }
    if (width == null || $.gtB(wd, width))
      width = wd;
  }
  return width;
},
 doLayout$3: function(mctx, view, children) {
  var spcinf, gapinf, defphgh, childspcinfs, flexViews, flexs, t1, nflex, assigned, prevSpacing, t2, si, t3, phgh, amt, hghapp, hgh, space, per, len, j, delta, defAlign, align;
  spcinf = $.SideInfo$(view.get$layout().get$spacing(), $.get$_SPACING(), null);
  gapinf = $.SideInfo$(view.get$layout().get$gap(), null, null);
  defphgh = view.get$layout().get$height();
  childspcinfs = $.Map_Map();
  flexViews = $.List_List(null);
  $.setRuntimeTypeInfo(flexViews, []);
  flexs = $.List_List(null);
  $.setRuntimeTypeInfo(flexs, []);
  for (t1 = $.CTC0.iterator$0(children), nflex = 0, assigned = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true) {
      mctx.setWidthByProfile$2(t2, new $._VLayout_doLayout_anon(view));
      mctx.setHeightByProfile$2(t2, new $._VLayout_doLayout_anon0(view));
      continue;
    }
    si = $.SideInfo$(t2.get$profile().get$spacing(), 0, spcinf);
    $.indexSet(childspcinfs, t2, si);
    if (prevSpacing == null)
      t3 = si.top;
    else {
      t3 = gapinf.top;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.top);
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    prevSpacing = si.bottom;
    phgh = t2.get$profile().get$height();
    amt = $._getAmountInfo(t2, $.getInterceptor$JSStringJSArray(phgh).get$isEmpty(phgh) === true ? defphgh : phgh);
    t3 = amt.type;
    switch (t3) {
      case $.CTC11:
        t3 = amt.value;
        t2.set$height(t3);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      case $.CTC12:
        t3 = amt.value;
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        nflex += t3;
        flexs.push(t3);
        flexViews.push(t2);
        break;
      case $.CTC13:
        t3 = $.mul(view.get$innerHeight(), amt.value);
        t3 = $.getInterceptor$JSNumber(t3).round$0(t3);
        t3 = $.getInterceptor$JSNumber(t3).toInt$0(t3);
        t2.set$height(t3);
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      case $.CTC16:
        $.ViewImpl_clearHeightByLayout(t2);
        t3 = t2.get$realHeight();
        if (typeof t3 !== 'number')
          throw $.iae(t3);
        assigned += t3;
        break;
      default:
        if ($.eqB(t3, $.CTC15)) {
          hghapp = mctx.getHeightByApp$1(t2);
          t3 = !(hghapp == null);
        } else {
          hghapp = null;
          t3 = false;
        }
        if (t3) {
          if (typeof hghapp !== 'number')
            throw $.iae(hghapp);
          assigned += hghapp;
        } else {
          hgh = t2.measureHeight_$1(mctx);
          if (!(hgh == null)) {
            t2.set$height(hgh);
            if (typeof hgh !== 'number')
              throw $.iae(hgh);
            assigned += hgh;
          } else {
            t3 = t2.get$realHeight();
            if (typeof t3 !== 'number')
              throw $.iae(t3);
            assigned += t3;
          }
        }
        break;
    }
    mctx.setWidthByProfile$2(t2, new $._VLayout_doLayout_anon1(si, view));
  }
  if (nflex > 0) {
    space = $.sub($.sub(view.get$innerHeight(), assigned), prevSpacing);
    per = $.div(space, nflex);
    for (len = flexs.length - 1, j = 0; true; ++j) {
      if (j === len) {
        if (j >= flexViews.length)
          throw $.ioore(j);
        flexViews[j].set$height(space);
        break;
      }
      if (j >= flexs.length)
        throw $.ioore(j);
      t1 = $.mul(per, flexs[j]);
      t1 = $.getInterceptor$JSNumber(t1).round$0(t1);
      delta = $.getInterceptor$JSNumber(t1).toInt$0(t1);
      if (j >= flexViews.length)
        throw $.ioore(j);
      flexViews[j].set$height(delta);
      space = $.sub(space, delta);
    }
  }
  defAlign = view.get$layout().get$align();
  for (t1 = $.CTC0.iterator$0(children), assigned = 0, prevSpacing = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true)
      continue;
    si = $.index(childspcinfs, t2);
    if (prevSpacing == null)
      t3 = si.get$top();
    else {
      t3 = gapinf.top;
      t3 = !(t3 == null) ? t3 : $.max(prevSpacing, si.get$top());
    }
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    t2.set$top(assigned);
    t3 = t2.get$realHeight();
    if (typeof t3 !== 'number')
      throw $.iae(t3);
    assigned += t3;
    prevSpacing = si.get$bottom();
    align = t2.get$profile().get$align();
    if ($.getInterceptor$JSStringJSArray(align).get$isEmpty(align) === true)
      align = defAlign;
    space = $.index(childspcinfs, t2).get$left();
    switch (align) {
      case "center":
      case "end":
        delta = $.sub($.sub($.sub(view.get$innerWidth(), si.get$left()), si.get$right()), t2.get$realWidth());
        t2.set$left($.add(space, $.eqB(align, "center") ? $.tdiv(delta, 2) : delta));
        break;
      default:
        t2.set$left(space);
        break;
    }
  }
}
};

$$.TileLayout = {"":"AbstractLayout;",
 doLayout_$3: function(mctx, view, children) {
  var innerWidth$, innerHeight$, t1, t2;
  innerWidth$ = new $.TileLayout_doLayout__anon(view);
  innerHeight$ = new $.TileLayout_doLayout__anon0(view);
  for (t1 = $.CTC0.iterator$0(children); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (view.shallLayout_$1(t2) !== true) {
      mctx.setWidthByProfile$2(t2, innerWidth$);
      mctx.setHeightByProfile$2(t2, innerHeight$);
      continue;
    }
  }
},
 measureWidth$2: function(ctx, view) {
  throw $.$$throw($.UiError$("'content' not allowed in tile layout"));
},
 measureHeight$2: function(ctx, view) {
  throw $.$$throw($.UiError$("'content' not allowed in tile layout"));
},
 get$isFlex: function() {
  return true;
}
};

$$.AnchorRelation = {"":"Object;indeps,anchored,parent?",
 layoutAnchored$1: function(mctx) {
  var t1;
  this._layoutAnchored$2(mctx, this.parent);
  for (t1 = $.CTC0.iterator$0(this.indeps); t1.get$hasNext() === true;)
    this._layoutAnchored$2(mctx, t1.next$0());
},
 _layoutAnchored$3: function(mctx, anchor, thisOnly) {
  var t1, views, t2, t3, t4;
  t1 = this.anchored;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._layoutAnchored$3$bailout(1, mctx, anchor, thisOnly, t1);
  if (anchor !== (anchor | 0))
    throw $.iae(anchor);
  if (anchor < 0 || anchor >= t1.length)
    throw $.ioore(anchor);
  views = t1[anchor];
  if (!(views == null) && $.getInterceptor$JSStringJSArray(views).get$isEmpty(views) !== true) {
    for (t1 = $.getInterceptor$JSArray(views), t2 = t1.iterator$0(views), t3 = !(thisOnly == null); t2.get$hasNext() === true;) {
      t4 = t2.next$0();
      if (thisOnly == null || $.eqB(t4, thisOnly)) {
        mctx.preLayout$1(t4);
        mctx.setWidthByProfile$2(t4, new $.AnchorRelation__layoutAnchored_anon(t4, anchor));
        mctx.setHeightByProfile$2(t4, new $.AnchorRelation__layoutAnchored_anon0(t4, anchor));
        $.locateToView(mctx, t4, t4.get$profile().get$location(), anchor, 0, 0);
        if (t3)
          return;
      }
    }
    for (t1 = t1.iterator$0(views); t1.get$hasNext() === true;)
      this._layoutAnchored$3(mctx, t1.next$0(), thisOnly);
  }
},
 _layoutAnchored$3$bailout: function(state0, mctx, anchor, thisOnly, t1) {
  var views, t2, t3, t4;
  views = $.index(t1, anchor);
  if (!(views == null) && $.getInterceptor$JSStringJSArray(views).get$isEmpty(views) !== true) {
    for (t1 = $.getInterceptor$JSArray(views), t2 = t1.iterator$0(views), t3 = !(thisOnly == null); t2.get$hasNext() === true;) {
      t4 = t2.next$0();
      if (thisOnly == null || $.eqB(t4, thisOnly)) {
        mctx.preLayout$1(t4);
        mctx.setWidthByProfile$2(t4, new $.AnchorRelation__layoutAnchored_anon(t4, anchor));
        mctx.setHeightByProfile$2(t4, new $.AnchorRelation__layoutAnchored_anon0(t4, anchor));
        $.locateToView(mctx, t4, t4.get$profile().get$location(), anchor, 0, 0);
        if (t3)
          return;
      }
    }
    for (t1 = t1.iterator$0(views); t1.get$hasNext() === true;)
      this._layoutAnchored$3(mctx, t1.next$0(), thisOnly);
  }
},
 _layoutAnchored$2: function(mctx, anchor) {
  return this._layoutAnchored$3(mctx, anchor, null);
},
 AnchorRelation$1: function(view) {
  var t1, t2, t3, t4, av, t5, deps;
  t1 = view.get$children();
  t1 = $.getInterceptor$JSArray(t1).iterator$0(t1);
  t2 = this.indeps;
  t3 = this.anchored;
  if (typeof t3 !== 'object' || t3 === null || (t3.constructor !== Array || !!t3.immutable$list) && !t3.is$JavaScriptIndexingBehavior())
    return this.AnchorRelation$1$bailout(1, view, t3, t1, t2);
  for (; t1.get$hasNext() === true;) {
    t4 = t1.next$0();
    av = t4.get$profile().get$anchorView();
    if (av == null)
      t2.push(t4);
    else {
      t5 = av.get$parent();
      if (!(t5 == null ? view == null : t5 === view) && !(av == null ? view == null : av === view))
        throw $.$$throw($.UiError$("Anchor can be parent or sibling, not " + $.S(av)));
      if (av !== (av | 0))
        throw $.iae(av);
      if (av < 0 || av >= t3.length)
        throw $.ioore(av);
      deps = t3[av];
      if (!(deps == null))
        $.getInterceptor$JSArray(deps).add$1(deps, t4);
      else
        t3[av] = [t4];
    }
  }
},
 AnchorRelation$1$bailout: function(state0, view, t3, t1, t2) {
  var t4, av, t5, deps;
  for (; t1.get$hasNext() === true;) {
    t4 = t1.next$0();
    av = t4.get$profile().get$anchorView();
    if (av == null)
      t2.push(t4);
    else {
      t5 = av.get$parent();
      if (!(t5 == null ? view == null : t5 === view) && !(av == null ? view == null : av === view))
        throw $.$$throw($.UiError$("Anchor can be parent or sibling, not " + $.S(av)));
      deps = $.index(t3, av);
      if (!(deps == null))
        $.getInterceptor$JSArray(deps).add$1(deps, t4);
      else
        $.indexSet(t3, av, [t4]);
    }
  }
}
};

$$._AnchorOfPoint = {"":"Object;",
 get$realWidth: function() {
  return 0;
},
 get$innerWidth: function() {
  return 0;
},
 get$realHeight: function() {
  return 0;
},
 get$innerHeight: function() {
  return 0;
}
};

$$.AmountType = {"":"Object;name?",
 toString$0: function() {
  return this.name;
}
};

$$.AmountInfo = {"":"Object;type=,value=",
 toString$0: function() {
  return $.S(this.type) + ":" + $.S(this.value);
},
 AmountInfo$1: function(profile) {
  var t1, t2;
  if (profile == null || $.getInterceptor$JSStringJSArray(profile).get$isEmpty(profile) === true || $.eqB(profile, "none"))
    this.type = $.CTC15;
  else if ($.eqB(profile, "content"))
    this.type = $.CTC14;
  else if ($.eqB(profile, "ignore"))
    this.type = $.CTC16;
  else {
    t1 = $.getInterceptor$JSString(profile);
    if (t1.startsWith$1(profile, "flex") === true) {
      this.type = $.CTC12;
      if ($.gtB(t1.get$length(profile), 4)) {
        t1 = t1.substring$1(profile, 4);
        t2 = $.int_parse($.getInterceptor$JSString(t1).trim$0(t1));
        t1 = t2;
      } else
        t1 = 1;
      this.value = t1;
      if ($.ltB(this.value, 1))
        this.value = 1;
    } else if (t1.endsWith$1(profile, "%") === true) {
      this.type = $.CTC13;
      t1 = t1.substring$2(profile, 0, $.sub(t1.get$length(profile), 1));
      this.value = $.div($.double_parse($.getInterceptor$JSString(t1).trim$0(t1)), 100);
    } else {
      this.type = $.CTC11;
      this.value = $.Css_intOf(profile, 0, true);
    }
  }
}
};

$$.SideInfo = {"":"Object;top=,bottom?,left=,right?",
 toString$0: function() {
  return "(" + $.S(this.left) + "," + $.S(this.top) + "," + $.S(this.right) + "," + $.S(this.bottom) + ")";
},
 SideInfo$3: function(profile, defaultValue, defaultInfo) {
  var wds, t1, t2;
  if (!(profile == null) && $.getInterceptor$JSStringJSArray(profile).get$isEmpty(profile) !== true) {
    wds = [];
    for (t1 = $.get$_reNum(), t1 = $.getInterceptor$JSString(t1).allMatches$1(t1, profile), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
      wds.push($.int_parse(t1.next$0().group$1(0)));
    t1 = wds.length;
    switch (t1) {
      case 0:
        break;
      case 1:
        if (0 >= t1)
          throw $.ioore(0);
        t2 = wds[0];
        this.right = t2;
        this.left = t2;
        this.bottom = t2;
        this.top = t2;
        return;
      case 2:
        if (0 >= t1)
          throw $.ioore(0);
        t2 = wds[0];
        this.bottom = t2;
        this.top = t2;
        if (1 >= wds.length)
          throw $.ioore(1);
        t2 = wds[1];
        this.right = t2;
        this.left = t2;
        return;
      case 3:
        if (0 >= t1)
          throw $.ioore(0);
        this.top = wds[0];
        if (1 >= wds.length)
          throw $.ioore(1);
        t2 = wds[1];
        this.right = t2;
        this.left = t2;
        if (2 >= wds.length)
          throw $.ioore(2);
        this.bottom = wds[2];
        return;
      default:
        if (0 >= t1)
          throw $.ioore(0);
        this.top = wds[0];
        if (1 >= wds.length)
          throw $.ioore(1);
        this.right = wds[1];
        if (2 >= wds.length)
          throw $.ioore(2);
        this.bottom = wds[2];
        if (3 >= wds.length)
          throw $.ioore(3);
        this.left = wds[3];
        return;
    }
  }
  if (!(defaultInfo == null)) {
    this.top = defaultInfo.get$top();
    this.bottom = defaultInfo.get$bottom();
    this.left = defaultInfo.get$left();
    this.right = defaultInfo.get$right();
  } else if (!(defaultValue == null)) {
    this.right = defaultValue;
    this.left = defaultValue;
    this.bottom = defaultValue;
    this.top = defaultValue;
  }
}
};

$$.DialogInfo = {"":"Object;cave?,mask",
 updateSize$0: function() {
  var p, size, t1, t2, t3;
  p = this.cave.get$parent();
  size = $.eqB(p, $.document().get$body()) || p == null ? $.get$browser().get$size() : $.DomAgent$(p).get$innerSize();
  t1 = $.Css_px(size.get$height());
  t2 = $.Css_px(size.get$width());
  t3 = this.mask.get$style();
  t3.set$width(t2);
  t3.set$height(t1);
}
};

$$.ViewConfig = {"":"Object;classPrefix?,uuidPrefix?",
 ViewConfig$0: function() {
  var appid = $.ViewUtil_appId();
  if ($.gtB(appid, 0))
    this.uuidPrefix = $.S($.StringUtil_encodeId(appid, "v")) + "_";
}
};

$$.RunOnceQueue = {"":"Object;_tasks?",
 add$3: function(key, task, timeout) {
  var t1, tid;
  t1 = this._tasks;
  if (!(t1 == null)) {
    tid = t1.remove$1(key);
    if (!(tid == null))
      $.window().clearTimeout$1(tid);
  } else
    this._tasks = $.makeLiteralMap([]);
  $.indexSet(this._tasks, key, $.window().setTimeout$2(new $.RunOnceQueue_add_anon(task, this, key), timeout));
},
 add$2: function(key, task) {
  return this.add$3(key, task, 0);
}
};

$$.RunOnceViewManager = {"":"Object;",
 _task$1: function(arg0) {
  return this._task.call$1(arg0);
},
 isQueueEmpty$1: function(view) {
  var t1;
  if (view == null) {
    t1 = this._views;
    return $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1);
  }
  for (t1 = this._views, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    if (t1.next$0().isDescendantOf$1(view) === true)
      return false;
  return true;
},
 isQueueEmpty$0: function() {
  return this.isQueueEmpty$1(null);
},
 queue$1: function(view) {
  var t1 = this._views;
  $.getInterceptor$JSArray(t1).add$1(t1, view);
  this._runQue.add$3("", new $.RunOnceViewManager_queue_anon(this), 0);
},
 flush$2: function(view, force) {
  var t1;
  if (this._lib5_ready$2(view, force) !== true) {
    if (!(view == null)) {
      t1 = this._views;
      $.getInterceptor$JSArray(t1).add$1(t1, view);
    }
  } else if (!(view == null))
    this._flushOne$2(view, force);
  else
    this._flushAll$0();
},
 flush$0: function() {
  return this.flush$2(null, false);
},
 handle_$1: function(view) {
  this._task$1(view);
},
 _flushAll$0: function() {
  var t1, t2, t3, t4, t5, t6, v, v0, root1, root2, others;
  for (t1 = this._views, t2 = $.getInterceptor$JSArray(t1), t3 = t2.iterator$0(t1), t4 = this._ignoreDetached, t5 = $.getInterceptor$JSStringJSArray(t1), t6 = this._ignoreSubviews; t3.get$hasNext() === true;) {
    v = t3.next$0();
    if (t4 && v.get$inDocument() !== true) {
      t1.remove$1(v);
      continue;
    }
    if (t6)
      for (v0 = v; v0 = v0.get$parent(), !(v0 == null);)
        if (t5.contains$1(t1, v0) === true) {
          t1.remove$1(v);
          break;
        }
  }
  root1 = [];
  root2 = [];
  others = [];
  for (t3 = t2.iterator$0(t1); t3.get$hasNext() === true;) {
    t4 = t3.next$0();
    if (!(t4.get$parent() == null))
      t5 = others;
    else
      t5 = t4.get$profile().get$anchorView() == null ? root1 : root2;
    t5.push(t4);
  }
  t2.clear$0(t1);
  for (t1 = $.CTC0.iterator$0(root1); t1.get$hasNext() === true;)
    this.handle_$1(t1.next$0());
  for (t1 = $.CTC0.iterator$0(root2); t1.get$hasNext() === true;)
    this.handle_$1(t1.next$0());
  for (t1 = $.CTC0.iterator$0(others); t1.get$hasNext() === true;)
    this.handle_$1(t1.next$0());
},
 _flushOne$2: function(view, force) {
  var t1, found, t2, v, t3, todos;
  t1 = this._views;
  found = t1.remove$1(view);
  if (!this._ignoreDetached || view.get$inDocument() === true)
    if (this._ignoreSubviews) {
      if (force !== true)
        for (t2 = $.getInterceptor$JSStringJSArray(t1), v = view; v = v.get$parent(), !(v == null);)
          if (t2.contains$1(t1, v) === true)
            return;
      for (t2 = $.getInterceptor$JSArray(t1).iterator$0(t1); t2.get$hasNext() === true;) {
        t3 = t2.next$0();
        if (t3.isDescendantOf$1(view) === true)
          t1.remove$1(t3);
      }
      this.handle_$1(view);
    } else {
      todos = [];
      if (found === true)
        todos.push(view);
      for (t2 = $.getInterceptor$JSArray(t1).iterator$0(t1); t2.get$hasNext() === true;) {
        t3 = t2.next$0();
        if (t3.isDescendantOf$1(view) === true)
          todos.push(t3);
      }
      for (t2 = $.CTC0.iterator$0(todos); t2.get$hasNext() === true;) {
        t3 = t2.next$0();
        t1.remove$1(t3);
        this.handle_$1(t3);
      }
    }
},
 _lib5_ready$2: function(view, force) {
  var t1, continueTask;
  t1 = this._readyChecks;
  if ($.CTC0.get$isEmpty(t1) !== true) {
    continueTask = new $.RunOnceViewManager__ready_anon(this, force, view);
    for (t1 = $.CTC0.iterator$0(t1); t1.get$hasNext() === true;)
      if (t1.next$0().call$3(view, continueTask, force) !== true)
        return false;
  }
  return true;
}
};

$$.Token = {"":"Object;type?,start?,end",
 source$1: function(src) {
  return $.getInterceptor$JSString(src).substring$2(src, this.start, this.end);
},
 extend$0: function() {
  var t1 = this.end;
  this.end = t1 + 1;
  return t1;
},
 toString$0: function() {
  return $.S(this.type);
}
};

$$.ViewMatchContext = {"":"Object;parent?,view=,viewChildIndex,_qualified?",
 moveToNextSibling$0: function() {
  this.view = this.view.get$nextSibling();
  this.viewChildIndex = $.add(this.viewChildIndex, 1);
},
 isQualified$2: function(selectorIndex, position) {
  var t1, posq, t2;
  if (typeof selectorIndex !== 'number')
    return this.isQualified$2$bailout(1, selectorIndex, position);
  if (typeof position !== 'number')
    return this.isQualified$2$bailout(1, selectorIndex, position);
  if (!(selectorIndex < 0)) {
    t1 = this._qualified;
    t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
    if (typeof t1 !== 'number')
      return this.isQualified$2$bailout(2, selectorIndex, position, t1);
    t1 = selectorIndex >= t1;
  } else
    t1 = true;
  if (t1)
    return false;
  t1 = this._qualified;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.isQualified$2$bailout(3, t1, position, selectorIndex);
  if (selectorIndex !== (selectorIndex | 0))
    throw $.iae(selectorIndex);
  if (selectorIndex < 0 || selectorIndex >= t1.length)
    throw $.ioore(selectorIndex);
  posq = t1[selectorIndex];
  if (typeof posq !== 'string' && (typeof posq !== 'object' || posq === null || posq.constructor !== Array && !posq.is$JavaScriptIndexingBehavior()))
    return this.isQualified$2$bailout(4, position, posq);
  if (position > -1) {
    t1 = posq.length;
    if (position < t1) {
      if (position !== (position | 0))
        throw $.iae(position);
      if (position < 0 || position >= t1)
        throw $.ioore(position);
      t2 = posq[position] === true;
      t1 = t2;
    } else
      t1 = false;
  } else
    t1 = false;
  return t1;
},
 isQualified$2$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      position = env1;
      selectorIndex = env0;
      break;
    case 2:
      t1 = env2;
      position = env1;
      selectorIndex = env0;
      break;
    case 3:
      selectorIndex = env2;
      position = env1;
      t1 = env0;
      break;
    case 4:
      posq = env1;
      position = env0;
      break;
    case 5:
      posq = env2;
      t1 = env1;
      position = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && !$.ltB(selectorIndex, 0))
        switch (state0) {
          case 0:
            t1 = this._qualified;
            t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
          case 2:
            state0 = 0;
            t1 = $.geB(selectorIndex, t1);
        }
      else
        t1 = true;
      if (t1)
        return false;
      t1 = this._qualified;
    case 3:
      state0 = 0;
      posq = $.index(t1, selectorIndex);
    case 4:
      state0 = 0;
    case 5:
      var position, selectorIndex, t1, posq;
      if (state0 === 5 || state0 === 0 && $.gtB(position, -1))
        switch (state0) {
          case 0:
            t1 = $.getInterceptor$JSStringJSArray(posq).get$length(posq);
          case 5:
            state0 = 0;
            t1 = $.ltB(position, t1) && $.index(posq, position) === true;
        }
      else
        t1 = false;
      return t1;
  }
},
 qualify$3: function(selectorIndex, position, qualified) {
  var t1 = this._qualified;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.qualify$3$bailout(1, selectorIndex, position, qualified, t1);
  if (selectorIndex !== (selectorIndex | 0))
    throw $.iae(selectorIndex);
  if (selectorIndex < 0 || selectorIndex >= t1.length)
    throw $.ioore(selectorIndex);
  t1 = t1[selectorIndex];
  if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
    return this.qualify$3$bailout(2, t1, position, qualified);
  if (position !== (position | 0))
    throw $.iae(position);
  if (position < 0 || position >= t1.length)
    throw $.ioore(position);
  t1[position] = qualified;
},
 qualify$3$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      t1 = env3;
      qualified = env2;
      position = env1;
      selectorIndex = env0;
      break;
    case 2:
      qualified = env2;
      position = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this._qualified;
    case 1:
      state0 = 0;
      t1 = $.index(t1, selectorIndex);
    case 2:
      var t1, qualified, position, selectorIndex;
      state0 = 0;
      $.indexSet(t1, position, qualified);
  }
},
 qualify$2: function(selectorIndex, position) {
  return this.qualify$3(selectorIndex, position, true);
},
 isMatched$1: function(selectorIndex) {
  var i, t1, t3, t2;
  if (typeof selectorIndex !== 'number')
    return this.isMatched$1$bailout(1, selectorIndex);
  if (selectorIndex < 0) {
    i = 0;
    while (true) {
      t1 = this._qualified;
      t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
      if (typeof t1 !== 'number')
        return this.isMatched$1$bailout(2, i, t1);
      if (!(i < t1))
        break;
      if (this.isMatched$1(i) === true)
        return true;
      ++i;
    }
    return false;
  } else {
    t1 = this._qualified;
    if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
      return this.isMatched$1$bailout(3, selectorIndex, t1);
    t3 = t1.length;
    if (selectorIndex < t3) {
      if (selectorIndex !== (selectorIndex | 0))
        throw $.iae(selectorIndex);
      if (selectorIndex < 0 || selectorIndex >= t3)
        throw $.ioore(selectorIndex);
      t1 = t1[selectorIndex];
      t2 = $.getInterceptor$JSArray(t1).get$last(t1) === true;
      t1 = t2;
    } else
      t1 = false;
    return t1;
  }
},
 isMatched$1$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      selectorIndex = env0;
      break;
    case 2:
      t1 = env1;
      i = env0;
      break;
    case 3:
      t1 = env1;
      selectorIndex = env0;
      break;
    case 4:
      t3 = env2;
      t1 = env1;
      selectorIndex = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    default:
      var selectorIndex, i, t1, t3, t2;
      if (state0 === 2 || state0 === 0 && $.ltB(selectorIndex, 0))
        switch (state0) {
          case 0:
            i = 0;
          case 2:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    t1 = this._qualified;
                    t1 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
                  case 2:
                    state0 = 0;
                    if (!$.ltB(i, t1))
                      break L0;
                    if (this.isMatched$1(i) === true)
                      return true;
                    ++i;
                }
            return false;
        }
      else
        switch (state0) {
          case 0:
            t1 = this._qualified;
          case 3:
            state0 = 0;
            t3 = $.getInterceptor$JSStringJSArray(t1).get$length(t1);
          case 4:
            state0 = 0;
            if ($.ltB(selectorIndex, t3)) {
              t1 = $.index(t1, selectorIndex);
              t2 = $.getInterceptor$JSArray(t1).get$last(t1) === true;
              t1 = t2;
            } else
              t1 = false;
            return t1;
        }
  }
},
 isMatched$0: function() {
  return this.isMatched$1(-1);
},
 match$1: function(seq) {
  var t1, t2;
  t1 = this.view;
  t2 = seq.get$type();
  if (t2 == null || $.eqB(t2, t1.get$className())) {
    t1 = this.view;
    t2 = seq.get$id();
    t1 = (t2 == null || $.eqB(t2, t1.get$id())) && $.ViewMatchContext_matchClasses(this.view, seq.get$classes()) && this.matchPseudoClasses$1(seq.get$pseudoClasses()) === true;
  } else
    t1 = false;
  return t1;
},
 matchPseudoClasses$1: function(pseudoClasses) {
  var t1, t2, accept;
  if (pseudoClasses == null || $.getInterceptor$JSStringJSArray(pseudoClasses).get$isEmpty(pseudoClasses) === true)
    return true;
  for (t1 = $.getInterceptor$JSArray(pseudoClasses).iterator$0(pseudoClasses); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    accept = $.PseudoClass_getDefinition(t2.get$name());
    if (accept == null)
      throw $.$$throw($.Exception_Exception("Pseudo class definition not found: " + $.S(t2.get$name())));
    if (accept.call$2(this, t2.get$parameter()) !== true)
      return false;
  }
  return true;
},
 toString$0: function() {
  var sb, t1, t2;
  sb = $.StringBuffer_StringBuffer("");
  for (t1 = this._qualified, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(sb); t1.get$hasNext() === true;)
    t2.add$1(sb, t1.next$0());
  t1 = t2.add$1(sb, " @" + $.S(this.view));
  return $.getInterceptor(t1).toString$0(t1);
},
 ViewMatchContext$1: function(view) {
  this.viewChildIndex = $.ViewMatchContext_computeViewChildIndex(this.view);
},
 ViewMatchContext$root$2: function(view, selectors) {
  this.viewChildIndex = $.ViewMatchContext_computeViewChildIndex(this.view);
}
};

$$.PseudoClass = {"":"Object;name?,parameter=",
 toString$0: function() {
  var sb, t1;
  sb = $.StringBuffer_StringBuffer(":" + $.S(this.name));
  t1 = this.parameter;
  if (!(t1 == null))
    $.getInterceptor$JSArray(sb).add$1(sb, "(" + $.S(t1) + ")");
  return $.getInterceptor(sb).toString$0(sb);
}
};

$$.SimpleSelectorSequence = {"":"Object;type=,id=,classes?,attributes,pseudoClasses?,combinator?",
 setCombinatorByToken$1: function(token) {
  switch (token.get$type()) {
    case 7:
      this.combinator = 1;
      break;
    case 8:
      this.combinator = 2;
      break;
    case 9:
      this.combinator = 3;
      break;
    default:
  }
},
 printCombinator$0: function() {
  switch (this.combinator) {
    case 1:
      return " >";
    case 2:
      return " +";
    case 3:
      return " ~";
    default:
      return "";
  }
},
 toString$0: function() {
  var sb, t1, t2;
  sb = $.StringBuffer_StringBuffer("");
  t1 = this.type;
  if (!(t1 == null))
    $.getInterceptor$JSArray(sb).add$1(sb, t1);
  t1 = this.id;
  if (!(t1 == null))
    $.getInterceptor$JSArray(sb).add$1(sb, "#" + $.S(t1));
  for (t1 = this.classes, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), t2 = $.getInterceptor$JSArray(sb); t1.get$hasNext() === true;)
    t2.add$1(sb, "." + $.S(t1.next$0()));
  for (t1 = $.CTC0.iterator$0(this.pseudoClasses); t1.get$hasNext() === true;)
    t2.add$1(sb, $.S(t1.next$0()));
  t1 = $.getInterceptor$JSStringJSArray(sb);
  return t1.get$isEmpty(sb) === true ? "*" : t1.toString$0(sb);
}
};

$$.Selector = {"":"Object;selectorIndex?,seqs?",
 addCombinator$1: function(token) {
  $.CTC0.get$last(this.seqs).setCombinatorByToken$1(token);
},
 getCombinator$1: function(index) {
  var t1 = this.seqs;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index].get$combinator();
},
 requiresIdSpace$1: function(index) {
  var t1 = this.seqs;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return !(t1[index].get$id() == null);
},
 addSequence$0: function() {
  var seq = $.SimpleSelectorSequence$();
  this.seqs.push(seq);
  return seq;
},
 toString$0: function() {
  var sb, t1, t2, t3;
  sb = $.StringBuffer_StringBuffer("");
  for (t1 = $.CTC0.iterator$0(this.seqs), t2 = $.getInterceptor$JSArray(sb); t1.get$hasNext() === true;) {
    t3 = t1.next$0();
    t2.add$1(sb, $.S(t3) + $.S(t3.printCombinator$0()) + " ");
  }
  t1 = $.getInterceptor(sb).toString$0(sb);
  return $.getInterceptor$JSString(t1).trim$0(t1);
}
};

$$.SelectorParseException = {"":"Object;source,token,index",
 source$1: function(arg0) {
  return this.source.call$1(arg0);
},
 toString$0: function() {
  var t1, t2, t3;
  t1 = this.token;
  if (t1 == null) {
    t1 = this.index;
    t2 = $.ltB(t1, 0);
    t3 = this.source;
    t1 = t2 ? "Unexpected end of selector: " + $.S(t3) : "Unexpected character at " + $.S(t1) + " in selector " + $.S(t3);
  } else {
    t2 = "Unexpected token " + $.S(t1.get$type()) + " at " + $.S(this.index) + " in selector " + $.S(this.source);
    t1 = t2;
  }
  return t1;
}
};

$$.ViewIterator = {"":"Object;_root,_selectors,_posOffset,_allIds,_offsetRoot,_currCtx,_ready,_lib3_next=,_lib3_index",
 _ready$2: function(arg0, arg1) {
  return this._ready.call$2(arg0, arg1);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$("No more elements"));
  this._ready = false;
  return this._lib3_next;
},
 get$hasNext: function() {
  this._loadNext$0();
  return !(this._lib3_next == null);
},
 _loadNext$0: function() {
  if (this._ready)
    return;
  this._lib3_next = this._seekNext$0();
  this._ready = true;
},
 _seekNext$0: function() {
  this._currCtx = this._lib3_index < 0 ? this._buildRootCtx$0() : this._buildNextCtx$0();
  while (true) {
    var t1 = this._currCtx;
    if (!(!(t1 == null) && t1.isMatched$0() !== true))
      break;
    this._currCtx = this._buildNextCtx$0();
  }
  if (!(this._currCtx == null)) {
    this._lib3_index = this._lib3_index + 1;
    return this._currCtx.get$view();
  }
  return;
},
 _buildRootCtx$0: function() {
  var rt, selector, i, seq, rt2, t1, ctx;
  rt = this._root;
  if ($.gtB(this._posOffset, 0)) {
    selector = $.index(this._selectors, 0);
    for (i = 0; $.ltB(i, this._posOffset); ++i, rt = rt2) {
      seq = $.index(selector.get$seqs(), i);
      rt2 = $.index(rt.get$fellows(), seq.get$id());
      if (rt2 == null)
        return;
      t1 = seq.get$type();
      if (!(t1 == null || $.eqB(t1, rt2.get$className())) || !$.ViewMatchContext_matchClasses(rt2, seq.get$classes()) || $.ViewMatchContext$(rt2).matchPseudoClasses$1(seq.get$pseudoClasses()) !== true)
        return;
      if (i > 0)
        switch (selector.getCombinator$1(i - 1)) {
          case 0:
            if ($.ViewIterator_isDescendant(rt2, rt) !== true)
              return;
            break;
          case 1:
            if (!$.eqB(rt2.get$parent(), rt))
              return;
            break;
          case 3:
            if (!$.ViewIterator_isGeneralSibling(rt2, rt))
              return;
            break;
          case 2:
            if (!$.eqB(rt2.get$previousSibling(), rt))
              return;
            break;
        }
    }
    this._offsetRoot = rt.get$parent();
  }
  t1 = this._selectors;
  ctx = $.ViewMatchContext$root(rt, t1);
  if ($.gtB(this._posOffset, 0))
    for (t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
      ctx.qualify$2(t1.next$0().get$selectorIndex(), $.sub(this._posOffset, 1));
  else
    this.matchLevel0$1(ctx);
  return ctx;
},
 _buildNextCtx$0: function() {
  var t1, t2, t3;
  if (this._allIds === true)
    return;
  if (!(this._currCtx.get$view().get$firstChild() == null))
    return this._buildFirstChildCtx$1(this._currCtx);
  for (t1 = this._root; t2 = this._currCtx.get$view().get$nextSibling() == null, t3 = this._currCtx, t2;) {
    this._currCtx = t3.get$parent();
    t2 = this._currCtx;
    if (!(t2 == null)) {
      t2 = t2.get$view();
      t3 = this._posOffset;
      if (typeof t3 !== 'number')
        return this._buildNextCtx$0$bailout(1, t3, t1, t2);
      t2 = $.eqB(t2, t3 > 0 ? this._offsetRoot : t1);
    } else
      t2 = true;
    if (t2)
      return;
  }
  return this._buildNextSiblingCtx$1(t3);
},
 _buildNextCtx$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t2 = env2;
      t1 = env1;
      t3 = env0;
      break;
  }
  switch (state0) {
    case 0:
      if (this._allIds === true)
        return;
      if (!(this._currCtx.get$view().get$firstChild() == null))
        return this._buildFirstChildCtx$1(this._currCtx);
      t1 = this._root;
    case 1:
      var t1, t2, t3;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t2 = this._currCtx.get$view().get$nextSibling() == null;
              t3 = this._currCtx;
              if (!t2)
                break L0;
              this._currCtx = t3.get$parent();
              t2 = this._currCtx;
            case 1:
              if (state0 === 1 || state0 === 0 && !(t2 == null))
                switch (state0) {
                  case 0:
                    t2 = t2.get$view();
                    t3 = this._posOffset;
                  case 1:
                    state0 = 0;
                    t2 = $.eqB(t2, $.gtB(t3, 0) ? this._offsetRoot : t1);
                }
              else
                t2 = true;
              if (t2)
                return;
          }
      return this._buildNextSiblingCtx$1(t3);
  }
},
 _buildFirstChildCtx$1: function(parent$) {
  var ctx, t1, t2, i, posStart, j, t3, t4;
  ctx = $.ViewMatchContext$child(parent$.get$view().get$firstChild(), parent$);
  if ($.eqB(this._posOffset, 0))
    this.matchLevel0$1(ctx);
  for (t1 = this._selectors, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    i = t2.get$selectorIndex();
    posStart = $.gtB(this._posOffset, 0) ? $.sub(this._posOffset, 1) : 0;
    for (j = posStart; t3 = t2.get$seqs(), $.ltB(j, $.sub($.getInterceptor$JSStringJSArray(t3).get$length(t3), 1)); j = $.add(j, 1))
      switch (t2.getCombinator$1(j)) {
        case 0:
          if (parent$.isQualified$2(i, j) === true && $.ViewIterator_checkIdSpace(t2, $.add(j, 1), ctx))
            ctx.qualify$2(i, j);
          if (parent$.isQualified$2(i, j) === true) {
            t3 = $.add(j, 1);
            t4 = ctx.match$1($.index(t2.get$seqs(), t3)) === true;
            t3 = t4;
          } else
            t3 = false;
          if (t3)
            ctx.qualify$2(i, $.add(j, 1));
          break;
        case 1:
          if (parent$.isQualified$2(i, j) === true) {
            t3 = $.add(j, 1);
            t4 = ctx.match$1($.index(t2.get$seqs(), t3)) === true;
            t3 = t4;
          } else
            t3 = false;
          if (t3)
            ctx.qualify$2(i, $.add(j, 1));
          break;
      }
  }
  return ctx;
},
 _buildNextSiblingCtx$1: function(ctx) {
  var t1, t2, i, posEnd, t3, len, j, cb, parent$, parentPass, t4, t5;
  ctx.moveToNextSibling$0();
  for (t1 = this._selectors, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    i = t2.get$selectorIndex();
    posEnd = $.gtB(this._posOffset, 0) ? $.sub(this._posOffset, 1) : 0;
    t3 = t2.get$seqs();
    len = $.getInterceptor$JSStringJSArray(t3).get$length(t3);
    ctx.qualify$3(i, $.sub(len, 1), false);
    for (j = $.sub(len, 2); $.geB(j, posEnd); j = $.sub(j, 1)) {
      cb = t2.getCombinator$1(j);
      parent$ = ctx.get$parent();
      switch (cb) {
        case 0:
          parentPass = !(parent$ == null) && parent$.isQualified$2(i, j) === true;
          ctx.qualify$3(i, j, parentPass && $.ViewIterator_checkIdSpace(t2, $.add(j, 1), ctx));
          if (parentPass) {
            t3 = $.add(j, 1);
            t4 = ctx.match$1($.index(t2.get$seqs(), t3)) === true;
            t3 = t4;
          } else
            t3 = false;
          if (t3)
            ctx.qualify$2(i, $.add(j, 1));
          break;
        case 1:
          t3 = $.add(j, 1);
          if (!(parent$ == null))
            if (parent$.isQualified$2(i, j) === true) {
              t4 = $.add(j, 1);
              t5 = ctx.match$1($.index(t2.get$seqs(), t4)) === true;
              t4 = t5;
            } else
              t4 = false;
          else
            t4 = false;
          ctx.qualify$3(i, t3, t4);
          break;
        case 3:
          if (ctx.isQualified$2(i, j) === true) {
            t3 = $.add(j, 1);
            t4 = $.add(j, 1);
            ctx.qualify$3(i, t3, ctx.match$1($.index(t2.get$seqs(), t4)));
          }
          break;
        case 2:
          t3 = $.add(j, 1);
          if (ctx.isQualified$2(i, j) === true) {
            t4 = $.add(j, 1);
            t5 = ctx.match$1($.index(t2.get$seqs(), t4)) === true;
            t4 = t5;
          } else
            t4 = false;
          ctx.qualify$3(i, t3, t4);
          ctx.qualify$3(i, j, false);
          break;
      }
    }
  }
  if ($.eqB(this._posOffset, 0))
    this.matchLevel0$1(ctx);
  return ctx;
},
 matchLevel0$1: function(ctx) {
  var t1, t2;
  for (t1 = this._selectors, t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (ctx.match$1($.index(t2.get$seqs(), 0)) === true)
      ctx.qualify$2(t2.get$selectorIndex(), 0);
  }
},
 ViewIterator$2: function(_root, selector) {
  var t1 = this._selectors;
  this._posOffset = $.ViewIterator__getCommonSeqLength(t1);
  this._allIds = $.ViewIterator__isAllIds(t1, this._posOffset);
}
};

$$.ViewIterable = {"":"Object;_root,_selector",
 iterator$0: function() {
  return $.ViewIterator$(this._root, this._selector);
}
};

$$.Control = {"":"Object;view=",
 template$0: function() {
  return this.template.call$0();
},
 template$2$beforeChild$parent: function(arg0, arg1) {
  return this.template.call$2$beforeChild$parent(arg0, arg1);
},
 render$0: function() {
  var parent$, t1, t2, parentNode, nextNode, t3, next;
  parent$ = this.view.get$parent();
  t1 = parent$ == null;
  t2 = this.view;
  if (t1) {
    parentNode = t2.get$node().get$parent();
    nextNode = this.view.get$node().get$nextNode();
    this.view.remove$0();
    this.view = null;
    $.index(this.template$0(), 0);
    if (!(parentNode == null)) {
      t1 = this.view;
      t2 = !(nextNode == null);
      t3 = t2 ? nextNode : parentNode;
      t1.addToDocument$2$mode$ref(t2 ? "before" : "child", t3);
    }
  } else {
    next = t2.get$nextSibling();
    this.view.remove$0();
    this.view = null;
    $.index(this.template$2$beforeChild$parent(next, parent$), 0);
    parent$.requestLayout$0();
  }
  this.onRender$0();
  $.get$layoutManager().flush$0();
},
 onRender$0: function() {
}
};

$$.Maps__emitMap_anon = {"":"Closure;visiting_3,result_2,box_0",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true) {
    t2 = this.result_2;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor$JSArray(t1).add$1(t1, ": ");
  $.Collections__emitObject(v, t1, t2);
}
};

$$.NoSuchMethodError_toString_anon = {"":"Closure;box_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_2, 0)) {
    t2 = t1.sb_1;
    $.getInterceptor$JSArray(t2).add$1(t2, ", ");
  }
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, key);
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, ": ");
  t2 = t1.sb_1;
  $.getInterceptor$JSArray(t2).add$1(t2, $.Error_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"":"Closure;f_0",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.DoubleLinkedQueue_length_anon = {"":"Closure;box_0",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$.TodoMVCTemplate__c0T = {"":"Closure;_c0_1,app_0",
 call$2$beforeChild$parent$: function(beforeChild, parent$) {
  var _rva, t1, _this_, _this_0, t2, _this_1, t3, t4, t5, _this_2, _ca0;
  _rva = $.List_List(null);
  $.setRuntimeTypeInfo(_rva, []);
  t1 = this._c0_1;
  if (t1.get$view() == null) {
    _this_ = $.View$();
    t1.set$view(_this_);
  } else
    _this_ = $.View$();
  _this_.get$layout().set$text("type: linear; orient: vertical; spacing: 0");
  _this_.set$width(550);
  _this_.get$profile().set$text("location: center top");
  if (!(parent$ == null))
    parent$.addChild$2(_this_, beforeChild);
  _rva.push(_this_);
  _this_0 = $.TextView$(null);
  t2 = _this_0.get$classes();
  $.getInterceptor$JSArray(t2).add$1(t2, "h1");
  _this_0.set$text("todos");
  _this_.addChild$1(_this_0);
  _this_0 = $.View$();
  _this_0.set$id("todo-app");
  _this_0.get$layout().set$text("type: linear; orient: vertical; spacing: 0");
  _this_.addChild$1(_this_0);
  _this_1 = $.View$();
  _this_1.set$id("header-bar");
  _this_0.addChild$1(_this_1);
  _this_1 = $.View$tag("section");
  _this_1.set$id("header");
  _this_0.addChild$1(_this_1);
  t2 = this.app_0;
  t3 = t2.get$todos();
  t4 = $.getInterceptor$JSStringJSArray(t3).get$isEmpty(t3) !== true;
  t5 = $.eq(t2.get$activeCount(), 0);
  _this_2 = $.CheckBox$(null, null);
  _this_2.set$id("toggle-all");
  _this_2.set$value(t5);
  _this_2.set$visible(t4);
  t4 = $.index(_this_2.get$on(), "change");
  $.getInterceptor$JSArray(t4).add$1(t4, new $.TodoMVCTemplate__c0T_anon(t1));
  _this_1.addChild$1(_this_2);
  _this_2 = $.TextBox$(null, null);
  _this_2.set$id("new-todo");
  _this_2.set$placeholder("What needs to be done?");
  t4 = $.index(_this_2.get$on(), "keyUp");
  $.getInterceptor$JSArray(t4).add$1(t4, new $.TodoMVCTemplate__c0T_anon0(t1));
  _this_1.addChild$1(_this_2);
  _this_1 = $.View$tag("ul");
  _this_1.set$id("todo-list");
  _this_1.get$layout().set$text("type: linear; orient: vertical; spacing: 0");
  _this_0.addChild$1(_this_1);
  for (t3 = t2.get$todos(), t3 = $.getInterceptor$JSArray(t3).iterator$0(t3); t3.get$hasNext() === true;) {
    t4 = t3.next$0();
    _ca0 = $.TodoItemControl$(t2, t4);
    t4 = new $.TodoMVCTemplate__c0T__ca0T(t4, _ca0);
    _ca0.template = t4;
    $.index(t4.call$1$parent(_this_1), 0);
    _ca0.onRender$0();
  }
  _this_0 = $.View$tag("footer");
  _this_0.set$id("footer");
  _this_.addChild$1(_this_0);
  t3 = "<strong>" + $.S(t2.get$activeCount()) + "</strong> item";
  t4 = t3 + (!$.eqB(t2.get$activeCount(), 1) ? "s" : "") + " left";
  _this_ = $.TextView$(null);
  _this_.set$id("todo-count");
  _this_.set$html(t4);
  _this_0.addChild$1(_this_);
  t4 = "Clear completed (" + $.S(t2.get$completedCount()) + ")";
  _this_ = $.Button$(null);
  _this_.set$id("clear-completed");
  _this_.set$text(t4);
  t4 = $.index(_this_.get$on(), "click");
  $.getInterceptor$JSArray(t4).add$1(t4, new $.TodoMVCTemplate__c0T_anon1(t1));
  _this_0.addChild$1(_this_);
  return _rva;
},
 call$0: function() {
  return this.call$2$beforeChild$parent$(null, null);
},
 call$1$parent: function(parent$) {
  return this.call$2$beforeChild$parent$(null, parent$);
}
};

$$.TodoMVCTemplate__c0T_anon = {"":"Closure;_c0_2",
 call$1: function(_e) {
  this._c0_2.selectAll$1(_e);
}
};

$$.TodoMVCTemplate__c0T_anon0 = {"":"Closure;_c0_3",
 call$1: function(_e) {
  this._c0_3.enterNewTodo$1(_e);
}
};

$$.TodoMVCTemplate__c0T__ca0T = {"":"Closure;t_5,_ca0_4",
 call$2$beforeChild$parent$: function(beforeChild, parent$) {
  var _rvb, t1, _this_, t2, t3, t4, _this_0, _this_1;
  _rvb = $.List_List(null);
  $.setRuntimeTypeInfo(_rvb, []);
  t1 = this._ca0_4;
  if (t1.get$view() == null) {
    _this_ = $.View$tag("li");
    t1.set$view(_this_);
  } else
    _this_ = $.View$tag("li");
  t2 = _this_.get$classes();
  t3 = $.getInterceptor$JSArray(t2);
  t4 = this.t_5;
  t3.addAll$1(t2, (t4.get$completed() === true ? "completed" : "").split(" "));
  if (!(parent$ == null))
    parent$.addChild$2(_this_, beforeChild);
  _rvb.push(_this_);
  _this_0 = $.View$();
  t2 = _this_0.get$classes();
  $.getInterceptor$JSArray(t2).add$1(t2, "show");
  _this_.addChild$1(_this_0);
  t2 = t4.get$completed();
  _this_1 = $.CheckBox$(null, null);
  t3 = _this_1.get$classes();
  $.getInterceptor$JSArray(t3).add$1(t3, "toggle");
  _this_1.set$value(t2);
  t2 = $.index(_this_1.get$on(), "change");
  $.getInterceptor$JSArray(t2).add$1(t2, new $.TodoMVCTemplate__c0T__ca0T_anon(t1));
  _this_0.addChild$1(_this_1);
  t2 = t4.get$title();
  _this_1 = $.TextView$(null);
  t3 = _this_1.get$classes();
  $.getInterceptor$JSArray(t3).add$1(t3, "title");
  _this_1.set$text(t2);
  t2 = $.index(_this_1.get$on(), "dblclick");
  $.getInterceptor$JSArray(t2).add$1(t2, new $.TodoMVCTemplate__c0T__ca0T_anon0(t1));
  _this_0.addChild$1(_this_1);
  _this_1 = $.Button$(null);
  t2 = _this_1.get$classes();
  $.getInterceptor$JSArray(t2).add$1(t2, "destroy");
  t2 = $.index(_this_1.get$on(), "click");
  $.getInterceptor$JSArray(t2).add$1(t2, new $.TodoMVCTemplate__c0T__ca0T_anon1(t1));
  _this_0.addChild$1(_this_1);
  t4 = t4.get$title();
  _this_0 = $.TextBox$(null, null);
  t2 = _this_0.get$classes();
  $.getInterceptor$JSArray(t2).add$1(t2, "edit");
  _this_0.get$profile().set$text("width: ignore; height: ignore");
  _this_0.set$value(t4);
  t4 = $.index(_this_0.get$on(), "blur");
  $.getInterceptor$JSArray(t4).add$1(t4, new $.TodoMVCTemplate__c0T__ca0T_anon2(t1));
  t4 = $.index(_this_0.get$on(), "keyUp");
  $.getInterceptor$JSArray(t4).add$1(t4, new $.TodoMVCTemplate__c0T__ca0T_anon3(t1));
  _this_.addChild$1(_this_0);
  return _rvb;
},
 call$0: function() {
  return this.call$2$beforeChild$parent$(null, null);
},
 call$1$parent: function(parent$) {
  return this.call$2$beforeChild$parent$(null, parent$);
}
};

$$.TodoMVCTemplate__c0T__ca0T_anon = {"":"Closure;_ca0_6",
 call$1: function(_e) {
  this._ca0_6.toggleCompleted$1(_e);
}
};

$$.TodoMVCTemplate__c0T__ca0T_anon0 = {"":"Closure;_ca0_7",
 call$1: function(_e) {
  this._ca0_7.editTitle$1(_e);
}
};

$$.TodoMVCTemplate__c0T__ca0T_anon1 = {"":"Closure;_ca0_8",
 call$1: function(_e) {
  this._ca0_8.destroy$1(_e);
}
};

$$.TodoMVCTemplate__c0T__ca0T_anon2 = {"":"Closure;_ca0_9",
 call$1: function(_e) {
  this._ca0_9.submitTitle$1(_e);
}
};

$$.TodoMVCTemplate__c0T__ca0T_anon3 = {"":"Closure;_ca0_10",
 call$1: function(_e) {
  this._ca0_10.enterTitle$1(_e);
}
};

$$.TodoMVCTemplate__c0T_anon1 = {"":"Closure;_c0_11",
 call$1: function(_e) {
  this._c0_11.clearCompleted$1(_e);
}
};

$$.anon10 = {"":"Closure;this_0",
 call$1: function(t) {
  var t1;
  if (t.get$completed() === true) {
    t1 = this.this_0;
    t1.set$_completedCount($.add(t1.get$_completedCount(), 1));
  }
}
};

$$.FilteredElementList__filtered_anon = {"":"Closure;",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._ChildrenElementList_filter_anon = {"":"Closure;f_1,output_0",
 call$1: function(element) {
  var t1;
  if (this.f_1.call$1(element) === true) {
    t1 = this.output_0;
    $.getInterceptor$JSArray(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList_removeRange_anon = {"":"Closure;",
 call$1: function(el) {
  return el.remove$0();
}
};

$$._DataAttributeMap_keys_anon = {"":"Closure;keys_1,this_0",
 call$2: function(key, value) {
  var t1, t2;
  t1 = $.getInterceptor$JSString(key);
  if (t1.startsWith$1(key, "data-") === true) {
    t2 = this.keys_1;
    $.getInterceptor$JSArray(t2).add$1(t2, t1.substring$1(key, 5));
  }
}
};

$$._DataAttributeMap_forEach_anon = {"":"Closure;this_1,f_0",
 call$2: function(key, value) {
  var t1 = $.getInterceptor$JSString(key);
  if (t1.startsWith$1(key, "data-") === true)
    this.f_0.call$2(t1.substring$1(key, 5), value);
}
};

$$.ConstantMap_forEach_anon = {"":"Closure;f_1,this_0",
 call$1: function(key) {
  return this.f_1.call$2(key, $.index(this.this_0, key));
}
};

$$.View_dataAttributes_anon = {"":"Closure;this_0",
 call$0: function() {
  var t1 = $.Map_Map();
  this.this_0.set$_dataAttrs(t1);
  return t1;
}
};

$$.CssClassSet_clear_anon = {"":"Closure;",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).clear$0(s);
}
};

$$._HashSetImpl_filter_anon = {"":"Closure;f_1,result_0",
 call$2: function(key, value) {
  var t1;
  if (this.f_1.call$1(key) === true) {
    t1 = this.result_0;
    $.getInterceptor$JSArray(t1).add$1(t1, key);
  }
}
};

$$._HashSetImpl_forEach_anon = {"":"Closure;f_0",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$._HashSetImpl_addAll_anon = {"":"Closure;this_0",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$.CssClassSet_addAll_anon = {"":"Closure;collection_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).addAll$1(s, this.collection_0);
}
};

$$.CssClassSet_add_anon = {"":"Closure;value_0",
 call$1: function(s) {
  return $.getInterceptor$JSArray(s).add$1(s, this.value_0);
}
};

$$.PseudoClass_getDefinition_anon = {"":"Closure;",
 call$2: function(ctx, param) {
  return param == null && ctx.get$view().get$previousSibling() == null;
}
};

$$.PseudoClass_getDefinition_anon0 = {"":"Closure;",
 call$2: function(ctx, param) {
  return param == null && ctx.get$view().get$nextSibling() == null;
}
};

$$.PseudoClass_getDefinition_anon1 = {"":"Closure;",
 call$2: function(ctx, param) {
  return param == null && ctx.get$view().get$previousSibling() == null && ctx.get$view().get$nextSibling() == null;
}
};

$$.PseudoClass_getDefinition_anon2 = {"":"Closure;",
 call$2: function(ctx, param) {
  return param == null && $.eqB(ctx.get$view().get$childCount(), 0);
}
};

$$.PseudoClass_getDefinition_anon3 = {"":"Closure;",
 call$2: function(ctx, param) {
  return !(param == null);
}
};

$$.PseudoClass_getDefinition_anon4 = {"":"Closure;",
 call$2: function(ctx, param) {
  return !(param == null);
}
};

$$.invokeClosure_anon = {"":"Closure;closure_0",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"":"Closure;closure_2,arg1_1",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"":"Closure;arg2_5,closure_4,arg1_3",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$.ViewEventListenerMap__get_anon = {"":"Closure;type_1,this_0",
 call$0: function() {
  return $.ViewEventListenerList$(this.this_0.get$_lib4_ptr(), this.type_1);
}
};

$$._EventListenerInfo_add_anon = {"":"Closure;box_0",
 call$0: function() {
  this.box_0.first_10 = true;
  return [];
}
};

$$._domChangeEvtDisp_anon = {"":"Closure;",
 call$1: function(target) {
  return new $._domChangeEvtDisp__anon(target);
}
};

$$._domChangeEvtDisp__anon = {"":"Closure;target_0",
 call$1: function(event$) {
  var dt, tv, t1, t2;
  dt = event$.get$target();
  tv = !(dt == null) ? $.ViewUtil_getView(dt) : dt;
  t1 = this.target_0;
  if (!(tv == null))
    t2 = tv.get$value();
  else {
    if (typeof dt === 'object' && dt !== null && dt.is$InputElement())
      t2 = $.eqB(dt.type, "checkbox") || $.eqB(dt.type, "radio");
    else
      t2 = false;
    t2 = t2 ? dt.get$checked() : dt.get$value();
  }
  t1.sendEvent$1($.ChangeEvent$(t2, "change", null));
}
};

$$._DateImpl_toString_fourDigits = {"":"Closure;",
 call$1: function(n) {
  var absN, sign;
  absN = $.getInterceptor$JSNumber(n).abs$0(n);
  sign = $.ltB(n, 0) ? "-" : "";
  if ($.geB(absN, 1000))
    return $.S(n);
  if ($.geB(absN, 100))
    return sign + "0" + $.S(absN);
  if ($.geB(absN, 10))
    return sign + "00" + $.S(absN);
  return sign + "000" + $.S(absN);
}
};

$$._DateImpl_toString_threeDigits = {"":"Closure;",
 call$1: function(n) {
  if ($.geB(n, 100))
    return $.S(n);
  if ($.geB(n, 10))
    return "0" + $.S(n);
  return "00" + $.S(n);
}
};

$$._DateImpl_toString_twoDigits = {"":"Closure;",
 call$1: function(n) {
  if ($.geB(n, 10))
    return $.S(n);
  return "0" + $.S(n);
}
};

$$._domEvtDisp_anon = {"":"Closure;type_0",
 call$1: function(target) {
  return new $._domEvtDisp__anon(this.type_0, target);
}
};

$$._domEvtDisp__anon = {"":"Closure;type_2,target_1",
 call$1: function(event$) {
  var tv, t1, t2;
  tv = event$.get$target();
  tv = typeof tv === 'object' && tv !== null && tv.is$Node() ? $.ViewUtil_getView(tv) : null;
  t1 = this.target_1;
  t2 = this.type_2;
  t1.sendEvent$1($.DomEvent_DomEvent(event$, t2, !(tv == null) ? tv : t1));
}
};

$$.RunOnceViewManager_queue_anon = {"":"Closure;this_0",
 call$0: function() {
  this.this_0.flush$0();
}
};

$$.LayoutManager_handle__anon = {"":"Closure;parent_0",
 call$0: function() {
  return this.parent_0.get$innerWidth();
}
};

$$.LayoutManager_handle__anon0 = {"":"Closure;parent_1",
 call$0: function() {
  return this.parent_1.get$innerHeight();
}
};

$$.MeasureContext_measureHeight_anon = {"":"Closure;view_0",
 call$0: function() {
  var t1 = this.view_0;
  return !(t1.get$parent() == null) ? t1.get$parent().get$innerHeight() : $.get$browser().get$size().get$height();
}
};

$$.Browser__initBrowserInfo_anon = {"":"Closure;ua_1,this_0",
 call$1: function(regex) {
  var m, t1, t2;
  m = regex.firstMatch$1(this.ua_1);
  if (!(m == null)) {
    t1 = m.group$1(1);
    t2 = this.this_0;
    t2.set$name(t1);
    t2.set$version($.Browser__versionOf(m.group$1(2), "."));
    return true;
  }
  return false;
}
};

$$.MeasureContext__measureContent_anon = {"":"Closure;view_0",
 call$0: function() {
  var t1 = this.view_0;
  return !(t1.get$parent() == null) ? t1.get$parent().get$innerWidth() : $.get$browser().get$size().get$width();
}
};

$$.MeasureContext__measureContent_anon0 = {"":"Closure;view_1",
 call$0: function() {
  var t1 = this.view_1;
  return !(t1.get$parent() == null) ? t1.get$parent().get$innerHeight() : $.get$browser().get$size().get$height();
}
};

$$.MeasureContext_measureWidth_anon = {"":"Closure;view_0",
 call$0: function() {
  var t1 = this.view_0;
  return !(t1.get$parent() == null) ? t1.get$parent().get$innerWidth() : $.get$browser().get$size().get$width();
}
};

$$.AnchorRelation__layoutAnchored_anon = {"":"Closure;view_1,anchor_0",
 call$0: function() {
  var t1, t2;
  t1 = this.anchor_0;
  t2 = this.view_1.get$parent();
  return (t1 == null ? t2 == null : t1 === t2) ? t1.get$innerWidth() : t1.get$realWidth();
}
};

$$.AnchorRelation__layoutAnchored_anon0 = {"":"Closure;view_3,anchor_2",
 call$0: function() {
  var t1, t2;
  t1 = this.anchor_2;
  t2 = this.view_3.get$parent();
  return (t1 == null ? t2 == null : t1 === t2) ? t1.get$innerHeight() : t1.get$realHeight();
}
};

$$.anon = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  view.set$top($.sub(offset, view.get$realHeight()));
}
};

$$.anon0 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  view.set$top(offset);
}
};

$$.anon1 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerHeight() : anchor.get$realHeight();
  view.set$top($.add(offset, $.tdiv($.sub(t1, view.get$realHeight()), 2)));
}
};

$$.anon2 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerHeight() : anchor.get$realHeight();
  view.set$top($.sub($.add(offset, t1), view.get$realHeight()));
}
};

$$.anon3 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerHeight() : anchor.get$realHeight();
  view.set$top($.add(offset, t1));
}
};

$$.anon4 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  view.set$left($.sub(offset, view.get$realWidth()));
}
};

$$.anon5 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  view.set$left(offset);
}
};

$$.anon6 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerWidth() : anchor.get$realWidth();
  view.set$left($.add(offset, $.tdiv($.sub(t1, view.get$realWidth()), 2)));
}
};

$$.anon7 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerWidth() : anchor.get$realWidth();
  view.set$left($.sub($.add(offset, t1), view.get$realWidth()));
}
};

$$.anon8 = {"":"Closure;",
 call$3: function(offset, anchor, view) {
  var t1 = view.get$parent();
  t1 = (anchor == null ? t1 == null : anchor === t1) ? anchor.get$innerWidth() : anchor.get$realWidth();
  view.set$left($.add(offset, t1));
}
};

$$.rootLayout_anon = {"":"Closure;root_2,anchor_1,size_0",
 call$0: function() {
  var t1, t2;
  t1 = this.anchor_1;
  if (!(t1 == null)) {
    t2 = this.root_2.get$parent();
    t1 = (t1 == null ? t2 == null : t1 === t2) ? t1.get$innerWidth() : t1.get$realWidth();
  } else
    t1 = this.size_0.get$width();
  return t1;
}
};

$$.rootLayout_anon0 = {"":"Closure;root_5,anchor_4,size_3",
 call$0: function() {
  var t1, t2;
  t1 = this.anchor_4;
  if (!(t1 == null)) {
    t2 = this.root_5.get$parent();
    t1 = (t1 == null ? t2 == null : t1 === t2) ? t1.get$innerHeight() : t1.get$realHeight();
  } else
    t1 = this.size_3.get$height();
  return t1;
}
};

$$.MeasureContext_dataAttributes_anon = {"":"Closure;this_0",
 call$0: function() {
  var t1 = $.Map_Map();
  this.this_0.set$_lib6_dataAttrs(t1);
  return t1;
}
};

$$.RunOnceViewManager__ready_anon = {"":"Closure;this_2,force_1,view_0",
 call$0: function() {
  this.this_2.flush$2(this.view_0, this.force_1);
}
};

$$.RunOnceQueue_add_anon = {"":"Closure;task_2,this_1,key_0",
 call$0: function() {
  this.this_1.get$_tasks().remove$1(this.key_0);
  this.task_2.call$0();
}
};

$$._HLayout_doLayout_anon = {"":"Closure;view_0",
 call$0: function() {
  return this.view_0.get$innerWidth();
}
};

$$._HLayout_doLayout_anon0 = {"":"Closure;view_1",
 call$0: function() {
  return this.view_1.get$innerHeight();
}
};

$$._HLayout_doLayout_anon1 = {"":"Closure;si_3,view_2",
 call$0: function() {
  var t1, t2;
  t1 = this.view_2.get$innerHeight();
  t2 = this.si_3;
  return $.sub($.sub(t1, t2.get$top()), t2.get$bottom());
}
};

$$._VLayout_doLayout_anon = {"":"Closure;view_0",
 call$0: function() {
  return this.view_0.get$innerWidth();
}
};

$$._VLayout_doLayout_anon0 = {"":"Closure;view_1",
 call$0: function() {
  return this.view_1.get$innerHeight();
}
};

$$._VLayout_doLayout_anon1 = {"":"Closure;si_3,view_2",
 call$0: function() {
  var t1, t2;
  t1 = this.view_2.get$innerWidth();
  t2 = this.si_3;
  return $.sub($.sub(t1, t2.get$left()), t2.get$right());
}
};

$$.TileLayout_doLayout__anon = {"":"Closure;view_0",
 call$0: function() {
  return this.view_0.get$innerWidth();
}
};

$$.TileLayout_doLayout__anon0 = {"":"Closure;view_1",
 call$0: function() {
  return this.view_1.get$innerHeight();
}
};

$$.FreeLayout_doLayout__anon = {"":"Closure;view_0",
 call$0: function() {
  return this.view_0.get$innerWidth();
}
};

$$.FreeLayout_doLayout__anon0 = {"":"Closure;view_1",
 call$0: function() {
  return this.view_1.get$innerHeight();
}
};

$$.Storage_values_anon = {"":"Closure;values_0",
 call$2: function(k, v) {
  var t1 = this.values_0;
  return $.getInterceptor$JSArray(t1).add$1(t1, v);
}
};

$$._LinkedHashMapImpl_values_anon = {"":"Closure;box_0,list_2",
 call$1: function(entry) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.index_1;
  t2.index_1 = $.add(t3, 1);
  $.indexSet(t1, t3, entry.get$value());
}
};

$$._HashMapImpl_values_anon = {"":"Closure;box_0,list_2",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.list_2;
  t2 = this.box_0;
  t3 = t2.i_1;
  t2.i_1 = $.add(t3, 1);
  $.indexSet(t1, t3, value);
}
};

$$._DataAttributeMap_values_anon = {"":"Closure;values_1,this_0",
 call$2: function(key, value) {
  var t1;
  if ($.getInterceptor$JSString(key).startsWith$1(key, "data-") === true) {
    t1 = this.values_1;
    $.getInterceptor$JSArray(t1).add$1(t1, value);
  }
}
};

$$.ConstantMap_values_anon = {"":"Closure;this_1,result_0",
 call$1: function(key) {
  var t1 = this.result_0;
  return $.getInterceptor$JSArray(t1).add$1(t1, $.index(this.this_1, key));
}
};

$$.CssClassSet_removeAll_anon = {"":"Closure;collection_0",
 call$1: function(s) {
  return s.removeAll$1(this.collection_0);
}
};

$$._HashSetImpl_removeAll_anon = {"":"Closure;this_0",
 call$1: function(value) {
  this.this_0.remove$1(value);
}
};

$$.anon9 = {"":"Closure;",
 call$1: function(event$) {
  $.get$broadcaster().sendEvent$1($.ActivateEvent$(event$.get$target(), "activate"));
}
};

$$._BroadcastListeners_add_anon = {"":"Closure;",
 call$0: function() {
  return [];
}
};

$$._ViewImpl__onResize_anon = {"":"Closure;box_0",
 call$1: function(event$) {
  var cur, t1;
  cur = $.WindowAgent$($.window()).get$innerSize();
  t1 = this.box_0;
  if (!$.eqB(t1.old_1.get$width(), cur.get$width()) || $.ltB(t1.old_1.get$height(), cur.get$height())) {
    t1.old_1 = cur;
    $.get$browser().updateSize$0();
    $._ViewImpl__updRootSize();
  }
}
};

$$._ViewImpl__onResize_anon0 = {"":"Closure;",
 call$1: function(event$) {
  $.get$browser().updateSize$0();
  $._ViewImpl__updRootSize();
}
};

$$.TodoAppControl_clearCompleted_anon = {"":"Closure;",
 call$1: function(t) {
  return t.get$completed() !== true;
}
};

$$._JsonStringifier_stringifyJsonValue_anon = {"":"Closure;box_0,this_2",
 call$2: function(key, value) {
  var t1, t2, t3;
  t1 = this.box_0;
  t2 = t1.first_11 !== true;
  t3 = this.this_2;
  if (t2) {
    t2 = t3.get$sb();
    $.getInterceptor$JSArray(t2).add$1(t2, ",\"");
  } else {
    t2 = t3.get$sb();
    $.getInterceptor$JSArray(t2).add$1(t2, "\"");
  }
  t2 = this.this_2;
  $._JsonStringifier_escape(t2.get$sb(), key);
  t3 = t2.get$sb();
  $.getInterceptor$JSArray(t3).add$1(t3, "\":");
  t2.stringifyValue$1(value);
  t1.first_11 = false;
}
};

$$.TodoAppControl_selectAll_anon = {"":"Closure;completed_0",
 call$1: function(t) {
  t.set$completed(this.completed_0);
}
};

$$.BoundClosure = {'':
"Closure;self,target",
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure0 = {'':
"Closure;self,target",
call$1: function(p0) { return this.self[this.target](p0); }
};
$$.BoundClosure1 = {'':
"Closure;self,receiver,target",
call$1: function(p0) { return this.self[this.target](this.receiver, p0); }
};
$$.BoundClosure2 = {'':
"Closure;self,receiver,target",
call$0: function() { return this.self[this.target](this.receiver); }
};
$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.div = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a / b : $.div$slow(a, b);
};

$.mul = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a * b : $.mul$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.ge = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.le = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else
      throw $.$$throw($.ArgumentError$(b));
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.JSON_parse = function(json) {
  return $._JsonParser$(json).parseToplevel$0();
};

$.mul$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a * b;
  return a.operator$mul$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.mod = function(a, b) {
  var result;
  if ($.checkNumbers(a, b)) {
    result = a % b;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    if (b < 0)
      return result - b;
    else
      return result + b;
  }
  return a.operator$mod$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.CTC2.truncate$0(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$._JsonStringifier$ = function(sb) {
  return new $._JsonStringifier(sb, []);
};

$.shr = function(a, b) {
  if ($.checkNumbers(a, b)) {
    if (b < 0)
      throw $.$$throw($.ArgumentError$(b));
    if (a > 0) {
      if (b > 31)
        return 0;
      return a >>> b;
    }
    if (b > 31)
      b = 31;
    return (a >> b) >>> 0;
  }
  return a.operator$shr$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.div$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a / b;
  return a.operator$div$1(b);
};

$._JsonStringifier_stringify = function(object) {
  var output = $.StringBuffer_StringBuffer("");
  $._JsonStringifier$(output).stringifyValue$1(object);
  return $.getInterceptor(output).toString$0(output);
};

$._JsonStringifier_escape = function(sb, s) {
  var t1, length$, charCodes, needsEscape, i, charCode, t2;
  t1 = $.getInterceptor$JSStringJSArray(s);
  length$ = t1.get$length(s);
  charCodes = $.List_List(null, '$.$int');
  $.setRuntimeTypeInfo(charCodes, ['$.$int']);
  for (needsEscape = false, i = 0; $.ltB(i, length$); ++i) {
    charCode = t1.charCodeAt$1(s, i);
    if ($.ltB(charCode, 32)) {
      charCodes.push(92);
      switch (charCode) {
        case 8:
          charCodes.push(98);
          break;
        case 9:
          charCodes.push(116);
          break;
        case 10:
          charCodes.push(110);
          break;
        case 12:
          charCodes.push(102);
          break;
        case 13:
          charCodes.push(114);
          break;
        default:
          charCodes.push(117);
          t2 = $.and($.shr(charCode, 12), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and($.shr(charCode, 8), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and($.shr(charCode, 4), 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          t2 = $.and(charCode, 15);
          if ($.ltB(t2, 10)) {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== 'number')
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          break;
      }
      needsEscape = true;
    } else if ($.eqB(charCode, 34) || $.eqB(charCode, 92)) {
      charCodes.push(92);
      charCodes.push(charCode);
      needsEscape = true;
    } else
      charCodes.push(charCode);
  }
  t1 = $.getInterceptor$JSArray(sb);
  t1.add$1(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.CTC2.truncate$0(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.getInterceptor$JSStringJSArray(a).get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, "indexed set");
    a[index] = value;
    return;
  }
  a.operator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.getInterceptor(value).toString$0(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC1;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  var t1 = this.dartException;
  return $.getInterceptor(t1).toString$0(t1);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") !== -1 || $.eqB(type, "property_not_function") || $.eqB(type, "called_non_callable") || $.eqB(type, "non_object_property_call") || $.eqB(type, "non_object_property_load"))
      return $.NoSuchMethodError$(null, name$, [], $.makeLiteralMap([]), null);
    else if ($.eqB(type, "undefined_method"))
      return $.NoSuchMethodError$("", name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.CTC.endsWith$1(message, "is null") === true || $.CTC.endsWith$1(message, "is undefined") === true || $.CTC.endsWith$1(message, "is null or undefined") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" is not a function") === -1)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(typeof message === 'string' ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.JSON_stringify = function(object) {
  return $._JsonStringifier_stringify(object);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.CTC0.iterator$0(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(arg2, closure, arg1).call$0();
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.JsonUnsupportedObjectError$ = function(unsupportedObject) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, null);
};

$.JsonUnsupportedObjectError$withCause = function(unsupportedObject, cause) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, cause);
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  if (!(target == null))
    target.builtin$typeInfo = typeInfo;
};

$.getRuntimeTypeInfo = function(target) {
  var res;
  if (target == null)
    return;
  res = target.builtin$typeInfo;
  return res == null ? {} : res;
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.getTypeArgumentAsString = function(runtimeType) {
  var className = $.runtimeTypeToString($.index(runtimeType, 0));
  if ($.eqB($.getInterceptor$JSStringJSArray(runtimeType).get$length(runtimeType), 1))
    return className;
  return $.S(className) + "<" + $.S($.joinArguments(runtimeType, 1)) + ">";
};

$.runtimeTypeToString = function(type) {
  var t1 = type == null;
  if (t1)
    return "dynamic";
  else if (typeof type === 'string')
    return type;
  else if (!t1 && type.constructor === Array)
    return $.getTypeArgumentAsString(type);
  else
    return type.builtin$cls;
};

$.joinArguments = function(types, startIndex) {
  var buffer, t1, index, firstArgument;
  if (typeof types !== 'string' && (typeof types !== 'object' || types === null || types.constructor !== Array && !types.is$JavaScriptIndexingBehavior()))
    return $.joinArguments$bailout(1, types, startIndex);
  buffer = $.StringBuffer_StringBuffer("");
  for (t1 = $.getInterceptor$JSArray(buffer), index = startIndex, firstArgument = true; index < types.length; ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      t1.add$1(buffer, ", ");
    if (index < 0 || index >= types.length)
      throw $.ioore(index);
    t1.add$1(buffer, $.runtimeTypeToString(types[index]));
  }
  return t1.toString$0(buffer);
};

$.getRuntimeTypeString = function(object) {
  var className, typeInfo;
  className = object.constructor === Array ? "List" : object.constructor.builtin$cls;
  typeInfo = object.builtin$typeInfo;
  if (typeInfo == null)
    return className;
  return className + "<" + $.S($.joinArguments(typeInfo, 0)) + ">";
};

$.Css_px = function(val) {
  return !(val == null) ? $.S(val) + "px" : "";
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "WebKitMutationObserver")
    return "MutationObserver";
  if (name$ === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name$ === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name$ === "AudioGainNode")
    return "GainNode";
  if (name$ === "AudioPannerNode")
    return "PannerNode";
  if (name$ === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name$ === "Oscillator")
    return "OscillatorNode";
  if (name$ === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name$;
};

$.Css_offset3dOf = function(value) {
  var ary, t1, i, t2, i0, t3;
  if (value == null || $.getInterceptor$JSStringJSArray(value).get$isEmpty(value) === true)
    return $.Offset3d$(0, 0, 0);
  ary = [0, 0, 0];
  t1 = $.getInterceptor$JSStringJSArray(value);
  i = t1.indexOf$1(value, "(");
  if ($.geB(i, 0))
    value = t1.substring$1(value, $.add(i, 1));
  for (t1 = $.getInterceptor$JSString(value).split$1(value, ","), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1), i = 0; t1.get$hasNext() === true; i = i0) {
    t2 = t1.next$0();
    i0 = i + 1;
    t2 = $.Css_intOf(t2, 0, null);
    if (i >= ary.length)
      throw $.ioore(i);
    ary[i] = t2;
    if (i0 === 3)
      break;
  }
  t1 = ary.length;
  if (0 >= t1)
    throw $.ioore(0);
  t2 = ary[0];
  if (1 >= t1)
    throw $.ioore(1);
  t3 = ary[1];
  if (2 >= t1)
    throw $.ioore(2);
  return $.Offset3d$(t2, t3, ary[2]);
};

$.Css_intOf = function(value, defaultValue, reportError, exception) {
  var t1, t2, m, e;
  try {
    if (!(value == null)) {
      t1 = value;
      t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) !== true;
      t1 = t2;
    } else
      t1 = false;
    if (t1) {
      m = $.get$Css__reNum().firstMatch$1(value);
      if (!(m == null)) {
        t1 = $.int_parse(m.group$1(0));
        return t1;
      }
    }
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    if (!(reportError == null) && reportError === true)
      throw $.$$throw(e);
  }

  return defaultValue;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name$ === "ApplicationCache")
    return "DOMApplicationCache";
  if (name$ === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "HTMLDDElement")
    return "HTMLElement";
  if (name$ === "HTMLDTElement")
    return "HTMLElement";
  if (name$ === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name$ === "HTMLPhraseElement")
    return "HTMLElement";
  if (name$ === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name$ === "MouseWheelEvent")
    return "WheelEvent";
  if (name$ === "Position")
    return "Geoposition";
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return "Null";
  constructor$ = object.constructor;
  if (typeof(constructor$) === "function") {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === "") && !(name$ === "Object") && !(name$ === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === "Window")
    return "DOMWindow";
  if (name$ === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name$ === "DataTransfer")
    return "Clipboard";
  if (name$ === "DragEvent")
    return "MouseEvent";
  if (name$ === "GeoGeolocation")
    return "Geolocation";
  if (name$ === "MouseScrollEvent")
    return "WheelEvent";
  if (name$ === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name$ === "WorkerMessageEvent")
    return "MessageEvent";
  if (name$ === "XMLDocument")
    return "Document";
  return name$;
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  method = methods[tag];
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (entry.get$_set()[tag]) {
        method = methods[entry.get$_tag()];
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = methods["Object"];
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!proto.hasOwnProperty(name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC22)[name$];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined") {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, t2, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "m");
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "i");
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor$JSArray(t1).add$1(t1, "g");
  }
  try {
    t1 = pattern;
    t2 = sb;
    t1 = new RegExp(t1, $.getInterceptor(t2).toString$0(t2));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length$, patternLength, startIndex, position, endIndex;
  result = $.List_List(null, '$.Match');
  $.setRuntimeTypeInfo(result, ['$.Match']);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length$ = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr, t1;
  if (typeof other === 'string')
    return !$.eqB($.CTC.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.CTC.substring$1(receiver, startIndex));
  else {
    substr = $.CTC.substring$1(receiver, startIndex);
    t1 = $.getInterceptor$JSString(other).allMatches$1(other, substr);
    return $.getInterceptor$JSArray(t1).iterator$0(t1).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, t1, i;
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length$ = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length$; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$._JsonParser$ = function(json) {
  var t1 = new $._JsonParser(json, $.getInterceptor$JSStringJSArray(json).get$length(json), 0);
  t1._JsonParser$1(json);
  return t1;
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$.print = function(object) {
  $.Primitives_printString(object);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.AmountInfo$ = function(profile) {
  var t1 = new $.AmountInfo(null, null);
  t1.AmountInfo$1(profile);
  return t1;
};

$.ViewImpl_clearWidthByLayout = function(view) {
  if (!$.ViewImpl_isWidthByApp(view))
    view.set$width(null);
};

$.ViewImpl_clearHeightByLayout = function(view) {
  if (!$.ViewImpl_isHeightByApp(view))
    view.set$height(null);
};

$.ViewImpl_leftUpdated = function(view) {
  if ($.get$layoutManager().get$inLayout() === true)
    $.indexSet(view.get$dataAttributes(), "rk.layout.0", $.ViewImpl__sbaVal(view, 0));
  else
    view.get$dataAttributes().remove$1("rk.layout.0");
};

$.ViewImpl_topUpdated = function(view) {
  if ($.get$layoutManager().get$inLayout() === true)
    $.indexSet(view.get$dataAttributes(), "rk.layout.1", $.ViewImpl__sbaVal(view, 1));
  else
    view.get$dataAttributes().remove$1("rk.layout.1");
};

$.ViewImpl_widthUpdated = function(view) {
  if ($.get$layoutManager().get$inLayout() === true)
    $.indexSet(view.get$dataAttributes(), "rk.layout.2", $.ViewImpl__sbaVal(view, 2));
  else
    view.get$dataAttributes().remove$1("rk.layout.2");
};

$.ViewImpl_heightUpdated = function(view) {
  if ($.get$layoutManager().get$inLayout() === true)
    $.indexSet(view.get$dataAttributes(), "rk.layout.3", $.ViewImpl__sbaVal(view, 3));
  else
    view.get$dataAttributes().remove$1("rk.layout.3");
};

$.ViewImpl_isLeftByApp = function(view) {
  var v1, v2, t1;
  v1 = $.ViewImpl__sbaVal(view, 0);
  v2 = $.index(view.get$dataAttributes(), "rk.layout.0");
  if (!$.eqB(v1, v2))
    t1 = !$.eqB(v1, 0) || !(v2 == null);
  else
    t1 = false;
  return t1;
};

$.ViewImpl_isTopByApp = function(view) {
  var v1, v2, t1;
  v1 = $.ViewImpl__sbaVal(view, 1);
  v2 = $.index(view.get$dataAttributes(), "rk.layout.1");
  if (!$.eqB(v1, v2))
    t1 = !$.eqB(v1, 0) || !(v2 == null);
  else
    t1 = false;
  return t1;
};

$.ViewImpl_isWidthByApp = function(view) {
  var val = $.ViewImpl__sbaVal(view, 2);
  return !(val == null) && !$.eqB(val, $.index(view.get$dataAttributes(), "rk.layout.2"));
};

$.ViewImpl_isHeightByApp = function(view) {
  var val = $.ViewImpl__sbaVal(view, 3);
  return !(val == null) && !$.eqB(val, $.index(view.get$dataAttributes(), "rk.layout.3"));
};

$.ViewImpl__sbaVal = function(view, type) {
  switch (type) {
    case 0:
      return view.get$left();
    case 1:
      return view.get$top();
    case 2:
      return view.get$width();
    case 3:
      return view.get$height();
  }
};

$._MsEvent$ = function(cause, type, target) {
  var t1, t2;
  t1 = !(type == null) ? type : cause.type;
  t2 = new $._MsEvent(cause, t1, 0, false, null, null);
  t2.ViewEvent$_$2(t1, target);
  return t2;
};

$.MapUtil_onDemand = function(creator) {
  return $._OnDemandMap$(creator);
};

$._UiEvent$ = function(cause, type, target) {
  var t1, t2;
  t1 = !(type == null) ? type : cause.type;
  t2 = new $._UiEvent(cause, t1, 0, false, null, null);
  t2.ViewEvent$_$2(t1, target);
  return t2;
};

$._OnDemandMap$ = function(_creator, K, V) {
  var t1 = new $._OnDemandMap(_creator, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  return t1;
};

$._KbEvent$ = function(cause, type, target) {
  var t1, t2;
  t1 = !(type == null) ? type : cause.type;
  t2 = new $._KbEvent(cause, t1, 0, false, null, null);
  t2.ViewEvent$_$2(t1, target);
  return t2;
};

$.main = function() {
  var t1 = $.TodoMVCTemplate($.loadModel(), null);
  if (0 >= t1.length)
    throw $.ioore(0);
  t1[0].addToDocument$0();
};

$.loadModel = function(exception) {
  var list0, list, jsonstr, t1, m, t2;
  list0 = $.List_List(null, $.Todo);
  $.setRuntimeTypeInfo(list0, [$.Todo]);
  list = list0;
  jsonstr = $.index($.window().get$localStorage(), "todos-rikulo");
  if (!(jsonstr == null))
    try {
      for (t1 = $.JSON_parse(jsonstr), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
        m = t1.next$0();
        t2 = list;
        $.getInterceptor$JSArray(t2).add$1(t2, $.Todo$fromJson(m));
      }
    } catch (exception) {
      $.unwrapException(exception);
      $.print("Cannot load from local storage.");
    }

  return list;
};

$._DataAttributeMap$ = function($$dom_attributes) {
  return new $._DataAttributeMap($$dom_attributes);
};

$.TodoMVCTemplate = function(list, parent$) {
  var _rv, _c0, t1;
  _rv = $.List_List(null);
  $.setRuntimeTypeInfo(_rv, []);
  _c0 = $.TodoAppControl$(list);
  t1 = new $.TodoMVCTemplate__c0T(_c0, _c0);
  _c0.template = t1;
  _rv.push($.index(t1.call$1$parent(parent$), 0));
  _c0.onRender$0();
  return _rv;
};

$.Todo$fromJson = function(m) {
  return new $.Todo($.index(m, "title"), $.index(m, "completed"));
};

$.window = function() {
  return window;
};

$.Todo$ = function(title, completed) {
  return new $.Todo(title, completed);
};

$.document = function() {
  return document;
};

$.View$ = function() {
  return new $.View(null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
};

$.View$tag = function(tag) {
  var t1 = new $.View(null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  t1.View$tag$1(tag);
  return t1;
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = "-moz-";
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = "-ms-";
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = "-o-";
    else
      $._cachedBrowserPrefix = "-webkit-";
  return $._cachedBrowserPrefix;
};

$.ViewIterable$ = function(_root, _selector) {
  return new $.ViewIterable(_root, _selector);
};

$.ViewIterator$ = function(_root, selector) {
  var t1 = new $.ViewIterator(_root, $.Selectors_parse(selector), null, null, null, null, false, null, -1);
  t1.ViewIterator$2(_root, selector);
  return t1;
};

$.ViewIterator_checkIdSpace = function(selector, index, ctx) {
  var t1, t2;
  if (selector.requiresIdSpace$1(index) === true) {
    t1 = ctx.get$view();
    t2 = !(typeof t1 === 'object' && t1 !== null && !!t1.is$IdSpace);
    t1 = t2;
  } else
    t1 = true;
  return t1;
};

$.ViewIterator_isDescendant = function(c1, c2) {
  if ($.eqB(c1, c2))
    return true;
  for (; c1 = c1.get$parent(), !(c1 == null);) {
    if ($.eqB(c1, c2))
      return true;
    if (typeof c1 === 'object' && c1 !== null && !!c1.is$IdSpace)
      return $.eq(c1, c2);
  }
  return false;
};

$.ViewIterator_isGeneralSibling = function(c1, c2) {
  for (; !(c1 == null);) {
    if ($.eqB(c1, c2))
      return true;
    c1 = c1.get$previousSibling();
  }
  return false;
};

$.ViewIterator__getCommonSeqLength = function(list) {
  var t1, strs, max, t2, t3, id, i, i0, t4;
  for (t1 = $.getInterceptor$JSArray(list).iterator$0(list), strs = null, max = 0; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (strs == null) {
      strs = $.List_List(null, '$.String');
      $.setRuntimeTypeInfo(strs, ['$.String']);
      for (t2 = t2.get$seqs(), t2 = $.getInterceptor$JSArray(t2).iterator$0(t2); t2.get$hasNext() === true;) {
        t3 = t2.next$0();
        id = t3.get$id();
        if (!(id == null) && $.getInterceptor$JSStringJSArray(id).get$isEmpty(id) !== true) {
          strs.push($.getInterceptor(t3).toString$0(t3));
          strs.push(t3.printCombinator$0());
        } else
          break;
      }
      max = strs.length;
    } else {
      for (t2 = t2.get$seqs(), t2 = $.getInterceptor$JSArray(t2).iterator$0(t2), i = 0; t2.get$hasNext() === true;) {
        t3 = t2.next$0();
        id = t3.get$id();
        if (i < max)
          if (!(id == null))
            if ($.getInterceptor$JSStringJSArray(id).get$isEmpty(id) !== true) {
              i0 = i + 1;
              if ($.eqB($.index(strs, i), $.getInterceptor(t3).toString$0(t3))) {
                i = i0 + 1;
                t4 = !$.eqB($.index(strs, i0), t3.printCombinator$0());
                t3 = t4;
              } else {
                i = i0;
                t3 = true;
              }
            } else
              t3 = true;
          else
            t3 = true;
        else
          t3 = true;
        if (t3)
          break;
      }
      i0 = i - 1;
      if (i < max)
        max = i0;
    }
  }
  return $.tdiv(max + 1, 2);
};

$.ViewIterator__isAllIds = function(list, offset) {
  var t1, t2;
  if (typeof offset !== 'number')
    return $.ViewIterator__isAllIds$bailout(1, list, offset);
  for (t1 = $.getInterceptor$JSArray(list).iterator$0(list); t1.get$hasNext() === true;) {
    t2 = t1.next$0().get$seqs();
    if ($.gtB($.getInterceptor$JSStringJSArray(t2).get$length(t2), offset))
      return false;
  }
  return true;
};

$.Selector$ = function(selectorIndex) {
  var t1 = $.List_List(null, $.SimpleSelectorSequence);
  $.setRuntimeTypeInfo(t1, [$.SimpleSelectorSequence]);
  return new $.Selector(selectorIndex, t1);
};

$.ViewMatchContext$ = function(view) {
  var t1 = $.List_List(null, ['$.List', 'bool']);
  $.setRuntimeTypeInfo(t1, [['$.List', 'bool']]);
  t1 = new $.ViewMatchContext(null, view, 0, t1);
  t1.ViewMatchContext$1(view);
  return t1;
};

$.ViewMatchContext$root = function(view, selectors) {
  var t1 = new $.ViewMatchContext(null, view, 0, $.ViewMatchContext__initBoolList(selectors));
  t1.ViewMatchContext$root$2(view, selectors);
  return t1;
};

$.ViewMatchContext$child = function(view, parent$) {
  return new $.ViewMatchContext(parent$, view, 0, $.ViewMatchContext__initBoolListFromParent(parent$));
};

$.ViewMatchContext_matchClasses = function(view, classes) {
  var t1, t2, t3;
  if (classes == null || $.getInterceptor$JSStringJSArray(classes).get$isEmpty(classes) === true)
    return true;
  for (t1 = $.getInterceptor$JSArray(classes).iterator$0(classes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    t3 = view.get$classes();
    if ($.getInterceptor$JSStringJSArray(t3).contains$1(t3, t2) !== true)
      return false;
  }
  return true;
};

$.ViewMatchContext_computeViewChildIndex = function(view) {
  var index;
  for (index = -1; !(view == null);) {
    view = view.get$previousSibling();
    ++index;
  }
  return index;
};

$.ViewMatchContext__initBoolList = function(selectors) {
  var list, t1, t2, sublist, i, t3;
  list = $.List_List(null, ['$.List', 'bool']);
  $.setRuntimeTypeInfo(list, [['$.List', 'bool']]);
  for (t1 = $.getInterceptor$JSArray(selectors).iterator$0(selectors); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    sublist = $.List_List(null, 'bool');
    $.setRuntimeTypeInfo(sublist, ['bool']);
    list.push(sublist);
    for (i = 0; t3 = t2.get$seqs(), $.ltB(i, $.getInterceptor$JSStringJSArray(t3).get$length(t3)); ++i)
      sublist.push(false);
  }
  return list;
};

$.ViewMatchContext__initBoolListFromParent = function(parent$) {
  var plist, list, t1, t2, sublist, i;
  plist = parent$.get$_qualified();
  list = $.List_List(null, ['$.List', 'bool']);
  $.setRuntimeTypeInfo(list, [['$.List', 'bool']]);
  for (t1 = $.getInterceptor$JSArray(plist).iterator$0(plist); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    sublist = $.List_List(null, 'bool');
    $.setRuntimeTypeInfo(sublist, ['bool']);
    list.push(sublist);
    for (i = 0; $.ltB(i, $.getInterceptor$JSStringJSArray(t2).get$length(t2)); ++i)
      sublist.push(false);
  }
  return list;
};

$.LocalWindow__isDartLocation = function(thing, exception) {
  var t1;
  try {
    t1 = thing;
    t1 = typeof t1 === 'object' && t1 !== null && t1.is$Location();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$.SimpleSelectorSequence$ = function() {
  var t1, t2, t3;
  t1 = $.Set_Set('$.String');
  t2 = $.List_List(null, '$.Attribute');
  $.setRuntimeTypeInfo(t2, ['$.Attribute']);
  t3 = $.List_List(null, $.PseudoClass);
  $.setRuntimeTypeInfo(t3, [$.PseudoClass]);
  return new $.SimpleSelectorSequence(null, null, t1, t2, t3, 0);
};

$.double_parse = function(source) {
  return $.Primitives_parseDouble(source);
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.PseudoClass$ = function(name$) {
  return new $.PseudoClass(name$, null);
};

$.PseudoClass_getDefinition = function(name$) {
  switch (name$) {
    case "first-child":
      return new $.PseudoClass_getDefinition_anon();
    case "last-child":
      return new $.PseudoClass_getDefinition_anon0();
    case "only-child":
      return new $.PseudoClass_getDefinition_anon1();
    case "empty":
      return new $.PseudoClass_getDefinition_anon2();
    case "nth-child":
      return new $.PseudoClass_getDefinition_anon3();
    case "last-nth-child":
      return new $.PseudoClass_getDefinition_anon4();
    default:
      return;
  }
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.TypeImpl$ = function(typeName) {
  return new $.TypeImpl(typeName);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$.Selectors_parse = function(source) {
  var tokens, selectors, t1, state, curr, currSeq, t2, t3;
  tokens = $.Selectors_tokenize(source);
  selectors = $.List_List(null, $.Selector);
  $.setRuntimeTypeInfo(selectors, [$.Selector]);
  for (t1 = $.CTC0.iterator$0(tokens), state = 1, curr = null, currSeq = null; t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.eqB(t2.get$type(), 5)) {
      switch (state) {
        case 9:
        case 14:
        case 8:
        case 3:
        case 9:
          break;
        default:
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
      }
      state = 17;
      curr = null;
      currSeq = null;
      continue;
    }
    if (currSeq == null && $.Selectors__requireSequence(state, t2.get$type())) {
      if (curr == null) {
        curr = $.Selector$(selectors.length);
        selectors.push(curr);
      }
      currSeq = curr.addSequence$0();
    }
    switch (state) {
      case 17:
        if ($.eqB(t2.get$type(), 3)) {
          state = 1;
          continue;
        }
        break;
      case 3:
        switch (t2.get$type()) {
          case 7:
          case 9:
          case 8:
            if (curr == null)
              throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
            curr.addCombinator$1(t2);
            state = 2;
            continue;
        }
        break;
      case 8:
        if ($.eqB(t2.get$type(), 21)) {
          state = 15;
          continue;
        }
        break;
      case 15:
        if (!$.eqB(t2.get$type(), 1))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        t2 = t2.source$1(source);
        t3 = currSeq.get$pseudoClasses();
        $.getInterceptor$JSArray(t3).get$last(t3).set$parameter(t2);
        state = 16;
        continue;
      case 16:
        if (!$.eqB(t2.get$type(), 22))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        state = 9;
        continue;
    }
    switch (state) {
      case 17:
      case 3:
      case 1:
        switch (t2.get$type()) {
          case 1:
            currSeq.set$type(t2.source$1(source));
            state = 9;
            continue;
          case 2:
            state = 14;
            currSeq = null;
            continue;
        }
        break;
      case 8:
      case 9:
        if ($.eqB(t2.get$type(), 3)) {
          state = 3;
          currSeq = null;
          continue;
        }
        break;
      case 5:
      case 6:
      case 7:
        if (!$.eqB(t2.get$type(), 1))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        break;
    }
    switch (state) {
      case 2:
        if (!$.eqB(t2.get$type(), 3))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        state = 1;
        break;
      case 17:
      case 3:
      case 8:
      case 1:
      case 9:
        switch (t2.get$type()) {
          case 10:
            state = 5;
            break;
          case 11:
            state = 6;
            break;
          case 12:
            state = 7;
            break;
          default:
            throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        }
        break;
      case 14:
        if (!$.eqB(t2.get$type(), 3))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        state = 3;
        break;
      case 5:
        if (!(currSeq.get$id() == null))
          throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
        currSeq.set$id(t2.source$1(source));
        state = 9;
        break;
      case 6:
        t3 = currSeq.get$classes();
        $.getInterceptor$JSArray(t3).add$1(t3, t2.source$1(source));
        state = 9;
        break;
      case 7:
        t3 = currSeq.get$pseudoClasses();
        $.getInterceptor$JSArray(t3).add$1(t3, $.PseudoClass$(t2.source$1(source)));
        state = 8;
        break;
      default:
        throw $.$$throw($.SelectorParseException$unexpectedToken(source, t2));
    }
  }
  switch (state) {
    case 5:
    case 6:
    case 7:
    case 17:
    case 2:
    case 1:
    case 15:
    case 16:
      throw $.$$throw($.SelectorParseException$unexpectedEnding(source));
  }
  return selectors;
};

$._Device_isOpera = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Opera", 0);
};

$._Device_isIE = function() {
  var t1, t2;
  if ($._Device_isOpera() !== true) {
    t1 = $._Device_userAgent();
    t2 = $.getInterceptor$JSString(t1).contains$2(t1, "MSIE", 0) === true;
    t1 = t2;
  } else
    t1 = false;
  return t1;
};

$._Device_isFirefox = function() {
  var t1 = $._Device_userAgent();
  return $.getInterceptor$JSString(t1).contains$2(t1, "Firefox", 0);
};

$.Selectors__requireSequence = function(state, type) {
  if (!$.eqB(type, 1) && !$.eqB(type, 2))
    return false;
  switch (state) {
    case 17:
    case 3:
    case 1:
    case 5:
    case 6:
    case 7:
    case 10:
      return true;
    default:
      return false;
  }
};

$.ListIterator$ = function(list, T) {
  var t1 = new $.ListIterator(0, list);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.Selectors_tokenize = function(source) {
  var tokens, t1, len, pclz, curr, i, i0, c, clz;
  tokens = $.List_List(null, $.Token);
  $.setRuntimeTypeInfo(tokens, [$.Token]);
  t1 = $.getInterceptor$JSStringJSArray(source);
  len = t1.get$length(source);
  if (typeof len !== 'number')
    return $.Selectors_tokenize$bailout(1, source, t1, len, tokens);
  for (pclz = 2, curr = null, i = 0; i < len; i = i0, pclz = clz) {
    i0 = i + 1;
    c = t1.substring$2(source, i, i0);
    clz = $.Selectors__getTokenClass(t1.charCodeAt$1(source, i));
    if (!(curr == null) && clz === pclz && clz !== 2)
      curr.extend$0();
    else {
      curr = $.Token$fromChar(c, i);
      tokens.push(curr);
    }
  }
  return tokens;
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$.Selectors__getTokenClass = function(c) {
  var t1;
  if ($.Selectors__isWhitespace(c))
    t1 = 1;
  else
    t1 = $.Selectors__isLiteral(c) ? 0 : 2;
  return t1;
};

$.Selectors__isLiteral = function(c) {
  var t1;
  if (!($.gtB(c, 96) && $.ltB(c, 123)))
    if (!($.gtB(c, 64) && $.ltB(c, 91)))
      t1 = $.gtB(c, 47) && $.ltB(c, 58) || $.eqB(c, 95) || $.eqB(c, 45);
    else
      t1 = true;
  else
    t1 = true;
  return t1;
};

$.Selectors__isWhitespace = function(c) {
  return $.eqB(c, 32) || $.eqB(c, 9) || $.eqB(c, 10) || $.eqB(c, 13);
};

$.Token$fromChar = function(c, index) {
  var t1 = index + 1;
  return new $.Token($.Token_getTypeFromChar(c), index, t1);
};

$.Token_getTypeFromChar = function(c) {
  var code = $.getInterceptor$JSString(c).charCodeAt$1(c, 0);
  if ($.Token_isLiteral(code))
    return 1;
  if ($.Token_isWhitespace(code))
    return 3;
  switch (c) {
    case "*":
      return 2;
    case ",":
      return 5;
    case ">":
      return 7;
    case "+":
      return 8;
    case "~":
      return 9;
    case "#":
      return 10;
    case ".":
      return 11;
    case ":":
      return 12;
    case "=":
      return 13;
    case "'":
      return 17;
    case "\"":
      return 18;
    case "[":
      return 19;
    case "]":
      return 20;
    case "(":
      return 21;
    case ")":
      return 22;
    default:
      return -1;
  }
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$.LinkedHashMap_LinkedHashMap = function(K, V) {
  return $._LinkedHashMapImpl$(K, V);
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$._LinkedHashMapImpl$ = function(K, V) {
  var t1 = new $._LinkedHashMapImpl(null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.TodoAppControl$ = function(_todos) {
  var t1 = new $.TodoAppControl(_todos, null, null, null);
  t1.TodoAppControl$1(_todos);
  return t1;
};

$.Token_isLiteral = function(c) {
  var t1;
  if (!($.gtB(c, 96) && $.ltB(c, 123)))
    if (!($.gtB(c, 64) && $.ltB(c, 91)))
      t1 = $.gtB(c, 47) && $.ltB(c, 58) || $.eqB(c, 95) || $.eqB(c, 45);
    else
      t1 = true;
  else
    t1 = true;
  return t1;
};

$.Token_isWhitespace = function(c) {
  return $.eqB(c, 32) || $.eqB(c, 9) || $.eqB(c, 10) || $.eqB(c, 13);
};

$.SelectorParseException$unexpectedToken = function(source, token) {
  return new $.SelectorParseException(source, token, token.get$start());
};

$.SelectorParseException$unexpectedEnding = function(source) {
  return new $.SelectorParseException(source, null, -1);
};

$.TextBox$ = function(value, type) {
  var t1 = new $.TextBox(null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  t1.TextBox$2(value, type);
  return t1;
};

$.DoubleLinkedQueue$ = function(E) {
  var t1 = new $.DoubleLinkedQueue(null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.DomEvent_DomEvent = function(cause, type, target) {
  var t1;
  if (typeof cause === 'object' && cause !== null && cause.is$MouseEvent())
    t1 = $._MsEvent$(cause, type, target);
  else if (typeof cause === 'object' && cause !== null && cause.is$KeyboardEvent())
    t1 = $._KbEvent$(cause, type, target);
  else
    t1 = typeof cause === 'object' && cause !== null && cause.is$UIEvent() ? $._UiEvent$(cause, type, target) : $.DomEvent$_(cause, type, target);
  return t1;
};

$.DomEvent$_ = function(cause, type, target) {
  var t1, t2;
  t1 = !(type == null) ? type : cause.get$type();
  t2 = new $.DomEvent(cause, t1, 0, false, null, null);
  t2.ViewEvent$_$2(t1, target);
  return t2;
};

$.Queue_Queue = function(E) {
  return $.DoubleLinkedQueue$(E);
};

$._KeyValuePair$ = function(key, value, K, V) {
  var t1 = new $._KeyValuePair(key, value);
  $.setRuntimeTypeInfo(t1, [K, V]);
  return t1;
};

$.ViewEvent$ = function(type, target) {
  var t1 = new $.ViewEvent(type, $.Date_Date$now().get$millisecondsSinceEpoch(), false, null, null);
  t1.ViewEvent$2(type, target);
  return t1;
};

$.DoubleLinkedQueueEntry$ = function(e, E) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$.ChangeEvent$ = function(value, type, target, T) {
  var t1 = new $.ChangeEvent(value, type, $.Date_Date$now().get$millisecondsSinceEpoch(), false, null, null);
  $.setRuntimeTypeInfo(t1, [T]);
  t1.ViewEvent$2(type, target);
  return t1;
};

$.max = function(a, b) {
  if (typeof a === 'number') {
    if (typeof b === 'number') {
      if (a > b)
        return a;
      if (a < b)
        return b;
      if (typeof b === 'number') {
        if (typeof a === 'number')
          if (a === 0)
            return a + b;
        if ($.CTC20.get$isNaN(b) === true)
          return b;
        return a;
      }
      if (b === 0 && $.CTC2.get$isNegative(a) === true)
        return b;
      return a;
    }
    throw $.$$throw($.ArgumentError$(b));
  }
  throw $.$$throw($.ArgumentError$(a));
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._ChildInfo$ = function() {
  return new $._ChildInfo(null, null, 0, null);
};

$._DoubleLinkedQueueIterator$ = function(_sentinel, E) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function(E) {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$._EventListenerInfo$ = function(_owner) {
  var t1 = new $._EventListenerInfo(_owner, null, null, null);
  t1._EventListenerInfo$1(_owner);
  return t1;
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$.ProfileDeclaration$ = function(owner) {
  return new $.ProfileDeclaration(owner, null, $.Map_Map());
};

$.LayoutDeclaration$ = function(owner) {
  return new $.LayoutDeclaration(owner, null, $.Map_Map());
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.MeasureContext$ = function() {
  return new $.MeasureContext($.Map_Map(), $.Map_Map(), $.Map_Map(), $.Map_Map(), null);
};

$._ViewImpl_spaceOwner = function(view) {
  var p, p0;
  p = view;
  do {
    if (typeof p === 'object' && p !== null && !!p.is$IdSpace)
      return p;
    if (p0 = p.get$parent(), !(p0 == null)) {
      p = p0;
      continue;
    } else
      break;
  } while (true);
  if (p.get$_virtIS() == null)
    p.set$_virtIS($._VirtualIdSpace$(p));
  return p.get$_virtIS();
};

$._ViewImpl_addToIdSpace = function(view, skipFirst) {
  var id, parent$, t1;
  id = view.get$id();
  if ($.eqB($.getInterceptor$JSStringJSArray(id).get$length(id), 0))
    return;
  if (skipFirst !== true)
    $.indexSet(view.get$spaceOwner().get$fellows(), id, view);
  if (typeof view === 'object' && view !== null && !!view.is$IdSpace) {
    parent$ = view.get$parent();
    t1 = !(parent$ == null);
  } else {
    parent$ = null;
    t1 = false;
  }
  if (t1)
    $.indexSet(parent$.get$spaceOwner().get$fellows(), id, view);
};

$._VirtualIdSpace$ = function(_owner) {
  return new $._VirtualIdSpace(_owner, $.Map_Map());
};

$._ViewImpl_checkIdSpaces = function(view, newId) {
  var space, parent$, t1;
  space = view.get$spaceOwner();
  if (!($.index(space.get$fellows(), newId) == null))
    throw $.$$throw($.UiError$("Not unique in the ID space of " + $.S(space) + ": " + $.S(newId)));
  if (!!view.is$IdSpace) {
    parent$ = view.get$parent();
    t1 = !(parent$ == null);
  } else {
    parent$ = null;
    t1 = false;
  }
  if (t1) {
    space = parent$.get$spaceOwner();
    if (!($.index(space.get$fellows(), newId) == null))
      throw $.$$throw($.UiError$("Not unique in the ID space of " + $.S(space) + ": " + $.S(newId)));
  }
};

$._ViewImpl_addToIdSpaceDown = function(view, space) {
  var id, t1, vs, t2, t3, t4;
  id = view.get$id();
  t1 = $.getInterceptor$JSStringJSArray(id).get$length(id);
  if (typeof t1 !== 'number')
    return $._ViewImpl_addToIdSpaceDown$bailout(1, view, space, id, t1);
  if (t1 > 0) {
    t1 = space.get$fellows();
    if (typeof t1 !== 'object' || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.is$JavaScriptIndexingBehavior())
      return $._ViewImpl_addToIdSpaceDown$bailout(2, view, space, id, t1);
    if (id !== (id | 0))
      throw $.iae(id);
    if (id < 0 || id >= t1.length)
      throw $.ioore(id);
    t1[id] = view;
  }
  if (!(typeof view === 'object' && view !== null && !!view.is$IdSpace)) {
    vs = view.get$_virtIS();
    if (!(vs == null)) {
      view.set$_virtIS(null);
      for (t1 = vs.get$fellows().get$values(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
        t2 = t1.next$0();
        t3 = t2.get$id();
        t4 = space.get$fellows();
        if (typeof t4 !== 'object' || t4 === null || (t4.constructor !== Array || !!t4.immutable$list) && !t4.is$JavaScriptIndexingBehavior())
          return $._ViewImpl_addToIdSpaceDown$bailout(3, t4, space, t1, t2, t3);
        if (t3 !== (t3 | 0))
          throw $.iae(t3);
        if (t3 < 0 || t3 >= t4.length)
          throw $.ioore(t3);
        t4[t3] = t2;
      }
    } else
      for (view = view.get$firstChild(); !(view == null); view = view.get$nextSibling())
        $._ViewImpl_addToIdSpaceDown(view, space);
  }
};

$._ViewImpl_removeFromIdSpace = function(view, skipFirst) {
  var id, parent$, t1;
  id = view.get$id();
  if ($.eqB($.getInterceptor$JSStringJSArray(id).get$length(id), 0))
    return;
  if (skipFirst !== true)
    view.get$spaceOwner().get$fellows().remove$1(id);
  if (typeof view === 'object' && view !== null && !!view.is$IdSpace) {
    parent$ = view.get$parent();
    t1 = !(parent$ == null);
  } else {
    parent$ = null;
    t1 = false;
  }
  if (t1)
    parent$.get$spaceOwner().get$fellows().remove$1(id);
};

$._ViewImpl_removeFromIdSpaceDown = function(view, space) {
  var id, t1;
  id = view.get$id();
  t1 = $.getInterceptor$JSStringJSArray(id).get$length(id);
  if (typeof t1 !== 'number')
    return $._ViewImpl_removeFromIdSpaceDown$bailout(1, view, space, id, t1);
  if (t1 > 0)
    space.get$fellows().remove$1(id);
  if (!(typeof view === 'object' && view !== null && !!view.is$IdSpace))
    for (view = view.get$firstChild(); !(view == null); view = view.get$nextSibling())
      $._ViewImpl_removeFromIdSpaceDown(view, space);
};

$._ViewImpl__onResize = function() {
  var t1 = {};
  if ($.get$browser().get$android() === true) {
    t1.old_1 = $.WindowAgent$($.window()).get$innerSize();
    return new $._ViewImpl__onResize_anon(t1);
  } else
    return new $._ViewImpl__onResize_anon0();
};

$._ViewImpl__updRootSize = function() {
  var t1, t2, dlgInfo;
  for (t1 = $.get$rootViews(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    dlgInfo = $.index($.get$dialogInfos(), t2);
    if (!(dlgInfo == null))
      dlgInfo.updateSize$0();
    t2.requestLayout$0();
  }
};

$.StringUtil_addCharCodes = function(src, diff) {
  var j, dst;
  if (typeof diff !== 'number')
    return $.StringUtil_addCharCodes$bailout(1, src, diff);
  j = src.length;
  dst = $.List_List(j);
  $.setRuntimeTypeInfo(dst, []);
  for (; --j, j >= 0;)
    dst[j] = $.add($.CTC.charCodeAt$1(src, j), diff);
  return $.String_String$fromCharCodes(dst);
};

$.StringUtil_isChar = function(cc, digit, lower, match, upper, whitespace) {
  var t1, v;
  t1 = $.getInterceptor$JSStringJSArray(cc);
  v = t1.get$isEmpty(cc) === true ? 0 : t1.charCodeAt$1(cc, 0);
  if (!(digit === true && $.geB(v, $.get$_CC_0()) && $.leB(v, $.get$_CC_9())))
    if (!(upper === true && $.geB(v, $.get$_CC_A()) && $.leB(v, $.get$_CC_Z())))
      if (!(lower === true && $.geB(v, $.get$_CC_a()) && $.leB(v, $.get$_CC_z()))) {
        if (whitespace === true)
          t1 = $.eqB(cc, " ") || $.eqB(cc, "\t") || $.eqB(cc, "\n") || $.eqB(cc, "\r");
        else
          t1 = false;
        if (!t1)
          t1 = !(match == null) && $.geB($.getInterceptor$JSStringJSArray(match).indexOf$1(match, cc), 0);
        else
          t1 = true;
      } else
        t1 = true;
    else
      t1 = true;
  else
    t1 = true;
  return t1;
};

$.StringUtil_encodeId = function(v, prefix) {
  var sb, t1, v2;
  if (typeof v !== 'number')
    return $.StringUtil_encodeId$bailout(1, v, prefix);
  sb = $.StringBuffer_StringBuffer("");
  if (!(prefix == null))
    $.getInterceptor$JSArray(sb).add$1(sb, prefix);
  t1 = $.getInterceptor$JSArray(sb);
  do {
    v2 = $.mod(v, 37);
    if (v2 <= 9)
      t1.add$1(sb, $.StringUtil_addCharCodes("0", v2));
    else
      t1.add$1(sb, v2 === 36 ? "_" : $.StringUtil_addCharCodes("a", v2 - 10));
  } while (v = $.tdiv(v, 37), v >= 1);
  return t1.toString$0(sb);
};

$._ViewImpl_createDialog = function(node, view, maskClass) {
  var size, parent$, t1, mask;
  size = $.eqB(node, $.document().get$body()) ? $.get$browser().get$size() : $.DomAgent$(node).get$innerSize();
  parent$ = $.DivElement_DivElement();
  parent$.get$style().set$position("relative");
  t1 = node.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, parent$);
  mask = $.Element_Element$html("<div class=\"v- " + $.S(maskClass) + "\" style=\"width:" + $.S(size.get$width()) + "px;height:" + $.S(size.get$height()) + "px\"></div>");
  if (!$.eqB(node, $.document().get$body()))
    mask.get$style().set$position("absolute");
  t1 = view.get$style().get$visibility();
  mask.get$style().set$visibility(t1);
  if (view.get$visible() !== true)
    $.DomAgent$(mask).hide$0();
  t1 = parent$.get$nodes();
  $.getInterceptor$JSArray(t1).add$1(t1, mask);
  return $.DialogInfo$(parent$, mask);
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$._ViewImpl_link = function(view, child, beforeChild) {
  var ci, p, t1;
  ci = view._initChildInfo$0();
  if (beforeChild == null) {
    p = ci.get$lastChild();
    if (!(p == null)) {
      p.set$_nextSibling(child);
      child.set$_prevSibling(p);
      ci.set$lastChild(child);
    } else {
      ci.set$lastChild(child);
      ci.set$firstChild(child);
    }
  } else {
    p = beforeChild.get$_prevSibling();
    if (!(p == null)) {
      child.set$_prevSibling(p);
      p.set$_nextSibling(child);
    } else
      ci.set$firstChild(child);
    beforeChild.set$_prevSibling(child);
    child.set$_nextSibling(beforeChild);
  }
  child.set$_parent(view);
  t1 = view._childInfo;
  t1.set$nChild($.add(t1.get$nChild(), 1));
  if (typeof child === 'object' && child !== null && !!child.is$IdSpace)
    $._ViewImpl_addToIdSpace(child, true);
  else
    $._ViewImpl_addToIdSpaceDown(child, child.get$spaceOwner());
};

$._ViewImpl_unlink = function(view, child) {
  var p, n, t1;
  if (typeof child === 'object' && child !== null && !!child.is$IdSpace)
    $._ViewImpl_removeFromIdSpace(child, true);
  else
    $._ViewImpl_removeFromIdSpaceDown(child, child.get$spaceOwner());
  p = child.get$_prevSibling();
  n = child.get$_nextSibling();
  if (!(p == null))
    p.set$_nextSibling(n);
  else
    view._childInfo.set$firstChild(n);
  if (!(n == null))
    n.set$_prevSibling(p);
  else
    view._childInfo.set$lastChild(p);
  child.set$_parent(null);
  child.set$_prevSibling(null);
  child.set$_nextSibling(null);
  t1 = view._childInfo;
  t1.set$nChild($.sub(t1.get$nChild(), 1));
};

$._ViewImpl_init = function() {
  var t1, t2;
  if ($._ViewImpl__inited !== true) {
    $._ViewImpl__inited = true;
    t1 = $.window().get$on().get$resize();
    $.getInterceptor$JSArray(t1).add$1(t1, $._ViewImpl__onResize());
    t1 = $.get$browser().get$touch() === true;
    t2 = $.document;
    t1 = t1 ? t2().get$on().get$touchStart() : t2().get$on().get$mouseDown();
    $.getInterceptor$JSArray(t1).add$1(t1, $.get$_ViewImpl__onTouchStart());
  }
};

$.Offset$ = function(left, top$) {
  return new $.Offset(left, top$);
};

$.ViewConfig$ = function() {
  var t1 = new $.ViewConfig("v-", "v_");
  t1.ViewConfig$0();
  return t1;
};

$.ViewUtil_getView = function(node) {
  var view;
  do {
    view = $.index($.get$ViewUtil__views(), node);
    if (!(view == null))
      return view;
    node = node.get$parent();
  } while (!(node == null) && !(typeof node === 'object' && node !== null && node.is$Document()));
};

$.ViewUtil_appId = function() {
  var body, attrs, sval;
  if ($.ViewUtil__appId == null) {
    body = $.document().get$body();
    if (body == null)
      throw $.$$throw($.UiError$("document not ready yet"));
    attrs = body.get$dataAttributes();
    sval = $.index(attrs, "data-rkAppCount");
    if (!(sval == null)) {
      $.ViewUtil__appId = $.int_parse(sval);
      $.indexSet(attrs, "data-rkAppCount", $.add($.ViewUtil__appId, 1));
    } else {
      $.ViewUtil__appId = 0;
      $.indexSet(attrs, "data-rkAppCount", "1");
    }
  }
  return $.ViewUtil__appId;
};

$.UiError$ = function(message) {
  return new $.UiError(message);
};

$.Set_Set = function(E) {
  return $._HashSetImpl$(E);
};

$.Set_Set$from = function(other, E) {
  return $._HashSetImpl__HashSetImpl$from(other, E);
};

$._DomAgentX$ = function(node) {
  return new $._DomAgentX(node);
};

$.ViewEvents$ = function(ptr) {
  return new $.ViewEvents(ptr, $.makeLiteralMap([]));
};

$._DomAgentX__hasContent = function(node) {
  var t1, t2;
  if (typeof node === 'object' && node !== null && node.is$Text()) {
    t1 = node.textContent;
    t1 = $.getInterceptor$JSString(t1).trim$0(t1);
    t2 = $.getInterceptor$JSStringJSArray(t1).get$isEmpty(t1) !== true;
    t1 = t2;
  } else
    t1 = false;
  if (t1)
    return true;
  if (typeof node === 'object' && node !== null && node.is$Element()) {
    t1 = node.tagName;
    switch ($.getInterceptor$JSString(t1).toLowerCase$0(t1)) {
      case "input":
      case "option":
      case "textarea":
        return true;
    }
  }
  for (t1 = node.get$nodes(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;)
    if ($._DomAgentX__hasContent(t1.next$0()))
      return true;
  return false;
};

$.DomAgent$ = function(node) {
  return new $.DomAgent(node);
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$._domEvtTarget = function(type, node) {
  var t1, t2, t3, t4, inp;
  if ($.CTC0.contains$1($.CTC8, type) === true) {
    t1 = $.get$_inpTags();
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t3 = node.get$tagName();
    t4 = t2.contains$1(t1, $.getInterceptor$JSString(t3).toLowerCase$0(t3)) !== true;
    t1 = t4;
  } else
    t1 = false;
  if (t1)
    for (t1 = $.get$_inpTags(), t1 = $.getInterceptor$JSArray(t1).iterator$0(t1); t1.get$hasNext() === true;) {
      inp = node.query$1(t1.next$0());
      if (!(inp == null)) {
        node = inp;
        break;
      }
    }
  return node;
};

$._domEventDispatcher = function(type) {
  var t1, t2;
  if ($._domEvtDisps == null) {
    $._domEvtDisps = $.makeLiteralMap([]);
    for (t1 = $.CTC0.iterator$0($.CTC10); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      $.indexSet($._domEvtDisps, t2, $._domEvtDisp(t2));
    }
    for (t1 = $.CTC0.iterator$0($.CTC8); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      $.indexSet($._domEvtDisps, t2, $._domEvtDisp(t2));
    }
    $.indexSet($._domEvtDisps, "change", $._domChangeEvtDisp());
  }
  return $.index($._domEvtDisps, type);
};

$._domEvtDisp = function(type) {
  return new $._domEvtDisp_anon(type);
};

$._domChangeEvtDisp = function() {
  return new $._domChangeEvtDisp_anon();
};

$._rootClasses = function() {
  if ($._$rootClasses == null) {
    $._$rootClasses = ["rikulo", "v-" + $.S($.get$browser().get$name())];
    if ($.get$browser().get$touch() === true) {
      var t1 = $._$rootClasses;
      $.getInterceptor$JSArray(t1).add$1(t1, "v-touch");
    }
    if ($.get$browser().get$ios() === true) {
      t1 = $._$rootClasses;
      $.getInterceptor$JSArray(t1).add$1(t1, "v-ios");
    } else if ($.get$browser().get$android() === true) {
      t1 = $._$rootClasses;
      $.getInterceptor$JSArray(t1).add$1(t1, "v-android");
    }
  }
  return $._$rootClasses;
};

$._s = function(s) {
  return !(s == null) ? s : "";
};

$._b = function(b) {
  return !(b == null) && b === true;
};

$.TextView$ = function(text) {
  var t1 = new $.TextView("", null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  t1.TextView$1(text);
  return t1;
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.CheckBox$ = function(text, value) {
  var t1 = new $.CheckBox("", null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  t1.TextView$1(text);
  t1.CheckBox$2(text, value);
  return t1;
};

$.TodoItemControl$ = function(_appc, _todo) {
  return new $.TodoItemControl(_appc, _todo, null, null);
};

$._getAmountInfo = function(view, value) {
  var amt = $.AmountInfo$(value);
  if ($.eqB(amt.type, $.CTC15) && view.get$layout().get$handler().get$isFlex() === true) {
    amt.type = $.CTC12;
    amt.value = 1;
  }
  return amt;
};

$.rootLayout = function(mctx, root) {
  var node, dlgInfo, cave, t1, size, anchor, loc, t2, leftByApp, topByApp, t3, ref, ofs, locators, mi, diff;
  node = root.get$node();
  dlgInfo = $.index($.get$dialogInfos(), root);
  cave = !(dlgInfo == null) ? dlgInfo.get$cave().get$parent() : node.get$parent();
  if ($.eqB(cave, $.document().get$body()))
    cave = null;
  t1 = cave == null;
  size = t1 ? $.get$browser().get$size() : $.DomAgent$(cave).get$innerSize();
  anchor = root.get$profile().get$anchorView();
  mctx.setWidthByProfile$2(root, new $.rootLayout_anon(root, anchor, size));
  mctx.setHeightByProfile$2(root, new $.rootLayout_anon0(root, anchor, size));
  loc = root.get$profile().get$location();
  t2 = $.getInterceptor$JSStringJSArray(loc);
  leftByApp = t2.get$isEmpty(loc) === true && !(mctx.getLeftByApp$1(root) == null);
  topByApp = t2.get$isEmpty(loc) === true && !(mctx.getTopByApp$1(root) == null);
  t2 = !leftByApp;
  if (!leftByApp || !topByApp) {
    t3 = !(anchor == null);
    if (t3)
      ref = anchor;
    else
      ref = !t1 ? $._AnchorOfNode$(cave) : $.CTC19;
    if (t3)
      ofs = !$.eqB(cave, anchor.get$parent()) ? $.add($.sub(anchor.get$pageOffset(), root.get$pageOffset()), $.Offset$(root.get$left(), root.get$top())) : $.Offset$(anchor.get$left(), anchor.get$top());
    else
      ofs = !t1 && !$.eqB(node.get$offsetParent(), node.get$parent()) ? $.DomAgent$(cave).get$offset() : $.Offset$(0, 0);
    locators = $._getLocators(loc);
    mi = $.SideInfo$(root.get$profile().get$margin(), 0, null);
    if (t2)
      $.index($.get$_anchorXLocators(), $.index(locators, 0)).call$3($.add(ofs.get$left(), mi.left), ref, root);
    if (!topByApp)
      $.index($.get$_anchorYLocators(), $.index(locators, 1)).call$3($.add(ofs.get$top(), mi.top), ref, root);
    diff = $.add(mi.left, mi.right);
    if (!$.eqB(diff, 0) && mctx.getWidthByApp$1(root) == null)
      root.set$width($.sub(root.get$width(), diff));
    diff = $.add(mi.top, mi.bottom);
    if (!$.eqB(diff, 0) && mctx.getHeightByApp$1(root) == null)
      root.set$height($.sub(root.get$height(), diff));
  }
};

$._minMax = function(v, vmin, vmax) {
  var w;
  if ($.getInterceptor$JSStringJSArray(vmin).get$isEmpty(vmin) !== true) {
    w = $.Css_intOf(vmin, 0, null);
    if ($.ltB(v, w))
      v = w;
  }
  if ($.getInterceptor$JSStringJSArray(vmax).get$isEmpty(vmax) !== true) {
    w = $.Css_intOf(vmax, 0, null);
    if ($.gtB(w, 0) && $.gtB(v, w))
      v = w;
  }
  return v;
};

$._amountOf = function(profile, parentInner) {
  var ai, t1;
  ai = $.AmountInfo$(profile);
  switch (ai.type) {
    case $.CTC11:
      return ai.value;
    case $.CTC12:
      return parentInner.call$0();
    case $.CTC13:
      t1 = $.mul(parentInner.call$0(), ai.value);
      t1 = $.getInterceptor$JSNumber(t1).round$0(t1);
      return $.getInterceptor$JSNumber(t1).toInt$0(t1);
  }
};

$.Button$ = function(text) {
  var t1 = new $.Button("", null, null, null, null, null, null, null, null, null, null, null, null, 0, 0, null, null, null, null, false);
  t1.TextView$1(text);
  return t1;
};

$.locateToView = function(mctx, view, location$, anchor, x, y) {
  var mi, locators, offset, t1, t2, diff;
  mi = $.SideInfo$(view.get$profile().get$margin(), 0, null);
  locators = $._getLocators(location$);
  if (!(anchor == null)) {
    if ($.eqB(view.get$style().get$position(), "fixed"))
      offset = anchor.get$pageOffset();
    else {
      t1 = view.get$parent();
      if (anchor == null ? t1 == null : anchor === t1) {
        t1 = $.Offset$(0, 0);
        offset = t1;
      } else {
        t1 = anchor.get$parent();
        t2 = view.get$parent();
        t1 = (t1 == null ? t2 == null : t1 === t2) ? $.Offset$(anchor.get$left(), anchor.get$top()) : $.add($.sub(anchor.get$pageOffset(), view.get$pageOffset()), $.Offset$(view.get$left(), view.get$top()));
        offset = t1;
      }
    }
    $.index($.get$_anchorXLocators(), $.index(locators, 0)).call$3($.add(offset.get$left(), mi.left), anchor, view);
    $.index($.get$_anchorYLocators(), $.index(locators, 1)).call$3($.add(offset.get$top(), mi.top), anchor, view);
  } else {
    $.index($.get$_anchorXLocators(), $.index(locators, 0)).call$3($.add(x, mi.left), $.CTC17, view);
    $.index($.get$_anchorYLocators(), $.index(locators, 1)).call$3($.add(y, mi.top), $.CTC17, view);
  }
  diff = $.add(mi.left, mi.right);
  if (!$.eqB(diff, 0))
    t1 = mctx == null || mctx.getWidthByApp$1(view) == null;
  else
    t1 = false;
  if (t1)
    view.set$width($.sub(view.get$width(), diff));
  diff = $.add(mi.top, mi.bottom);
  if (!$.eqB(diff, 0))
    t1 = mctx == null || mctx.getHeightByApp$1(view) == null;
  else
    t1 = false;
  if (t1)
    view.set$height($.sub(view.get$height(), diff));
};

$._getLocators = function(loc) {
  var locators, t1, j;
  if ($.getInterceptor$JSStringJSArray(loc).get$isEmpty(loc) === true)
    loc = "top left";
  locators = $.CTC18.operator$index$1(loc);
  if (!(locators == null))
    return locators;
  t1 = $.getInterceptor$JSStringJSArray(loc);
  j = t1.indexOf$1(loc, " ");
  if ($.gtB(j, 0)) {
    locators = $.CTC18.operator$index$1($.S(t1.substring$1(loc, $.add(j, 1))) + " " + $.S(t1.substring$2(loc, 0, j)));
    if (!(locators == null))
      return locators;
  }
  throw $.$$throw($.UiError$("Unknown loation " + $.S(loc)));
};

$.Browser$ = function() {
  var t1 = new $.Browser(null, null, false, false, false, false, false, false, false, false, false, false, null, null, null, null);
  t1.Browser$0();
  return t1;
};

$.Browser__versionOf = function(version, separator, exception) {
  var t1, j, j0;
  t1 = version;
  j = $.getInterceptor$JSStringJSArray(t1).indexOf$1(t1, separator);
  if ($.geB(j, 0)) {
    t1 = version;
    j0 = $.getInterceptor$JSStringJSArray(t1).indexOf$2(t1, separator, $.add(j, 1));
    if ($.geB(j0, 0)) {
      t1 = version;
      version = $.getInterceptor$JSString(t1).substring$2(t1, 0, j0);
    }
  }
  try {
    t1 = $.double_parse(version);
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return 1;
  }

};

$.LayoutManager$ = function() {
  var t1, t2, t3;
  t1 = $.RunOnceQueue$();
  t2 = $.Set_Set();
  t3 = $.List_List(null);
  $.setRuntimeTypeInfo(t3, []);
  t3 = new $.LayoutManager($.makeLiteralMap([]), $.Set_Set(), [], 0, 0, t1, t2, null, t3, true, true);
  t3.LayoutManager$0();
  return t3;
};

$.WindowAgent$ = function(w) {
  return new $.WindowAgent(w);
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$.Arrays_copy = function(src, srcStart, dst, dstStart, count) {
  var i, j, t1, t2, t3;
  if (typeof dst !== 'object' || dst === null || (dst.constructor !== Array || !!dst.immutable$list) && !dst.is$JavaScriptIndexingBehavior())
    return $.Arrays_copy$bailout(1, src, srcStart, dst, dstStart, count);
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1, t1 = src.length, t2 = dst.length; i >= srcStart; --i, --j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
  else
    for (t1 = src.length, t2 = dst.length, j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= t1)
        throw $.ioore(i);
      t3 = src[i];
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      dst[j] = t3;
    }
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.Lists_getRange = function(a, start, length$, accumulator) {
  var end, i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $.Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.RunOnceQueue$ = function() {
  return new $.RunOnceQueue(null);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!$.isJsArray(charCodes)) {
    charCodes = $.List_List$from(charCodes);
    $.setRuntimeTypeInfo(charCodes, []);
  }
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.List_List = function(length$, E) {
  return $.Primitives_newList(length$);
};

$.List_List$from = function(other, E) {
  var list, t1;
  list = $.List_List(null, E);
  $.setRuntimeTypeInfo(list, [E]);
  for (t1 = $.getInterceptor$JSArray(other).iterator$0(other); t1.get$hasNext() === true;)
    list.push(t1.next$0());
  return list;
};

$.SideInfo$ = function(profile, defaultValue, defaultInfo) {
  var t1 = new $.SideInfo(null, null, null, null);
  t1.SideInfo$3(profile, defaultValue, defaultInfo);
  return t1;
};

$.Map_Map = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$.Size$ = function(width, height) {
  return new $.Size(width, height);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.AnchorRelation$ = function(view) {
  var t1 = $.List_List(null);
  $.setRuntimeTypeInfo(t1, []);
  t1 = new $.AnchorRelation(t1, $.Map_Map(), view);
  t1.AnchorRelation$1(view);
  return t1;
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_parseInt = function(string) {
  var match, base, result;
  $.checkString(string);
  match = /^\s*[+-]?(?:0(x)[a-f0-9]+|\d+)\s*$/i.exec(string);
  if (match == null)
    throw $.$$throw($.FormatException$(string));
  base = !($.index(match, 1) == null) ? 16 : 10;
  result = parseInt(string, base);
  if ($.CTC2.get$isNaN(result) === true)
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_parseDouble = function(string) {
  var result;
  $.checkString(string);
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(string))
    throw $.$$throw($.FormatException$(string));
  result = parseFloat(string);
  if ($.CTC2.get$isNaN(result) === true && !$.eqB(string, "NaN"))
    throw $.$$throw($.FormatException$(string));
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, i, result, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, i = 0, result = ""; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CTC0.iterator$0(codePoints); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CTC0.iterator$0(charCodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.Error_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.getInterceptor(object).toString$0(object);
  if (typeof object === 'string') {
    t1 = $.CTC.replaceAll$2(object, "\\", "\\\\");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\n", "\\n");
    t1 = $.getInterceptor$JSString(t1).replaceAll$2(t1, "\r", "\\r");
    return "\"" + $.S($.getInterceptor$JSString(t1).replaceAll$2(t1, "\"", "\\\"")) + "\"";
  }
  return $.Primitives_objectToString(object);
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled, t1;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, "Object")) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  t1 = $.getInterceptor$JSString(name$);
  return t1.charCodeAt$1(name$, 0) === 36 ? t1.substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_printString = function(string) {
  if ("\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n" === string)
    $.Primitives_mirrorsEnabled = true;
  else if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.LayoutEvent$ = function(context, type, target) {
  var t1 = new $.LayoutEvent(context, type, $.Date_Date$now().get$millisecondsSinceEpoch(), false, null, null);
  t1.ViewEvent$2(type, target);
  return t1;
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.Offset3d$ = function(x, y, z) {
  return new $.Offset3d(z, x, y);
};

$.int_parse = function(source) {
  return $.Primitives_parseInt(source);
};

$.Date_Date$now = function() {
  return $._DateImpl$now();
};

$.Date_Date$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  return $._DateImpl$fromMillisecondsSinceEpoch(millisecondsSinceEpoch, isUtc);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.DivElement_DivElement = function() {
  return $.document().$dom_createElement$1("div");
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._DateImpl$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $._DateImpl(millisecondsSinceEpoch, isUtc);
  t1._DateImpl$fromMillisecondsSinceEpoch$2(millisecondsSinceEpoch, isUtc);
  return t1;
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._DateImpl$now = function() {
  var t1 = new $._DateImpl($.Primitives_dateNow(), false);
  t1._DateImpl$now$0();
  return t1;
};

$._LocationCrossFrame__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrame$(location$);
};

$._LocationCrossFrame$ = function(_location) {
  return new $._LocationCrossFrame(_location);
};

$._SubviewList$ = function(owner) {
  return new $._SubviewList(owner, $._SubviewSeq$(owner));
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.CssStyleDeclaration_CssStyleDeclaration = function() {
  return $.CssStyleDeclaration_CssStyleDeclaration$css("");
};

$.CssStyleDeclaration_CssStyleDeclaration$css = function(css) {
  return $._CssStyleDeclarationFactoryProvider_createCssStyleDeclaration_css(css);
};

$.Element_Element$html = function(html) {
  return $._ElementFactoryProvider_createElement_html(html);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$._StyleImpl$ = function(_view) {
  return new $._StyleImpl(_view);
};

$.SequenceIterator$ = function(_sequence, E) {
  var t1 = new $.SequenceIterator(_sequence, 0);
  $.setRuntimeTypeInfo(t1, [E]);
  return t1;
};

$._SubviewSeq$ = function(_owner) {
  return new $._SubviewSeq(_owner);
};

$.ListUtil_remove = function(list, obj) {
  var t1, j;
  if (!(list == null)) {
    t1 = $.getInterceptor$JSStringJSArray(list);
    j = t1.indexOf$1(list, obj);
    if ($.geB(j, 0)) {
      t1.removeRange$2(list, j, 1);
      return true;
    }
  }
  return false;
};

$.ListUtil_rangeCheck = function(a, start, length$) {
  if (length$ < 0)
    throw $.$$throw($.ArgumentError$("negative length " + $.S(length$)));
  if ($.ltB(start, 0) || $.geB(start, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    throw $.$$throw($.RangeError$(start));
  if ($.gtB($.add(start, length$), $.getInterceptor$JSStringJSArray(a).get$length(a)))
    throw $.$$throw($.RangeError$($.add(start, length$)));
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._AnchorOfNode$ = function(n) {
  return new $._AnchorOfNode($.DomAgent$(n));
};

$.DialogInfo$ = function(cave, mask) {
  return new $.DialogInfo(cave, mask);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.LinearLayout$ = function() {
  return new $.LinearLayout();
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.TileLayout$ = function() {
  return new $.TileLayout();
};

$.Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    if ($.eqB(element, t1.next$0()))
      return true;
  return false;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.getInterceptor$JSArray(iterable).iterator$0(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(source).iterator$0(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      destination.push(t2);
  }
  return destination;
};

$.Collections_collectionToString = function(c) {
  var result, t1;
  result = $.StringBuffer_StringBuffer("");
  t1 = $.List_List(null);
  $.setRuntimeTypeInfo(t1, []);
  $.Collections__emitCollection(c, result, t1);
  return $.getInterceptor(result).toString$0(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t2 = $.getInterceptor$JSArray(result);
  t2.add$1(result, isList ? "[" : "{");
  for (t3 = $.getInterceptor$JSArray(c).iterator$0(c), first = true; t3.get$hasNext() === true; first = false) {
    t4 = t3.next$0();
    if (!first)
      t2.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t2.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? "[...]" : "{...}");
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor$JSArray(result).add$1(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor$JSArray(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(c).iterator$0(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.FreeLayout$ = function() {
  return new $.FreeLayout();
};

$.FixedSizeListIterator$ = function(array, T) {
  var t1 = new $.FixedSizeListIterator($.getInterceptor$JSStringJSArray(array).get$length(array), array, 0);
  $.setRuntimeTypeInfo(t1, [T]);
  return t1;
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$._ElementFactoryProvider_createElement_html = function(html) {
  var match, t1, tag, parentTag, temp, element, t2;
  match = $.get$_START_TAG_REGEXP().firstMatch$1(html);
  if (!(match == null)) {
    t1 = match.group$1(1);
    tag = $.getInterceptor$JSString(t1).toLowerCase$0(t1);
    parentTag = $.CTC6.containsKey$1(tag) === true ? $.CTC6.operator$index$1(tag) : "div";
  } else {
    parentTag = "div";
    tag = null;
  }
  temp = $.Element_Element$tag(parentTag);
  temp.set$innerHtml(html);
  t1 = temp.get$children();
  if ($.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 1))
    element = $.index(temp.get$children(), 0);
  else {
    if ($.eqB(parentTag, "html")) {
      t1 = temp.get$children();
      t2 = $.eqB($.getInterceptor$JSStringJSArray(t1).get$length(t1), 2);
      t1 = t2;
    } else
      t1 = false;
    if (t1) {
      t1 = temp.get$children();
      element = $.index(t1, $.eqB(tag, "head") ? 0 : 1);
    } else {
      t1 = temp.get$children();
      throw $.$$throw($.ArgumentError$("HTML had " + $.S($.getInterceptor$JSStringJSArray(t1).get$length(t1)) + " " + "top level elements but 1 expected"));
    }
  }
  element.remove$0();
  return element;
};

$._FrozenCssClassSet$ = function() {
  return new $._FrozenCssClassSet();
};

$._HashSetImpl$ = function(E) {
  var t1 = new $._HashSetImpl(null);
  $.setRuntimeTypeInfo(t1, [E]);
  t1._HashSetImpl$0();
  return t1;
};

$._HashSetImpl__HashSetImpl$from = function(other, E) {
  var set, t1;
  set = $._HashSetImpl$(E);
  for (t1 = $.CTC0.iterator$0(other); t1.get$hasNext() === true;)
    set.add$1(t1.next$0());
  return set;
};

$._CssStyleDeclarationFactoryProvider_createCssStyleDeclaration_css = function(css) {
  var style = $.Element_Element$tag("div").get$style();
  style.set$cssText(css);
  return style;
};

$._HLayout$ = function() {
  return new $._HLayout();
};

$._VLayout$ = function() {
  return new $._VLayout();
};

$._HashMapImpl$ = function(K, V) {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  $.setRuntimeTypeInfo(t1, [K, V]);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return $.and($.add(currentProbe, numberOfProbes), $.sub(length$, 1));
};

$.HashMap_HashMap = function(K, V) {
  return $._HashMapImpl$(K, V);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.Maps_mapToString = function(m) {
  var result, t1;
  result = $.StringBuffer_StringBuffer("");
  t1 = $.List_List(null);
  $.setRuntimeTypeInfo(t1, []);
  $.Maps__emitMap(m, result, t1);
  return $.getInterceptor(result).toString$0(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_1 = true;
  $.getInterceptor$JSArray(m).forEach$1(m, new $.Maps__emitMap_anon(visiting, result, t1));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'string' && (typeof strings !== 'object' || strings === null || strings.constructor !== Array && !strings.is$JavaScriptIndexingBehavior()))
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $.List_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$._HashSetIterator$ = function(set_, E) {
  var t1 = new $._HashSetIterator(set_._backingMap.get$_keys(), -1);
  $.setRuntimeTypeInfo(t1, [E]);
  t1._HashSetIterator$1(set_);
  return t1;
};

$.ActivateEvent$ = function(source, type) {
  var t1 = new $.ActivateEvent(source, type, $.Date_Date$now().get$millisecondsSinceEpoch(), false, null, null);
  t1.ViewEvent$2(type, null);
  return t1;
};

$._Broadcaster$ = function() {
  var t1 = new $._Broadcaster(null, null);
  t1._Broadcaster$0();
  return t1;
};

$._BroadcastListeners$ = function(_owner) {
  return new $._BroadcastListeners(_owner, $.Map_Map());
};

$.BroadcastEvents$ = function(ptr) {
  return new $.BroadcastEvents(ptr, $.makeLiteralMap([]));
};

$.ViewEventListenerList$ = function(_ptr, _type) {
  return new $.ViewEventListenerList(_ptr, _type);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$.XmlUtil_encode = function(txt, maxlength, multiline, pre) {
  var t1, tl, t2, t3, j, out, k, cc, enc, t4, k0;
  if (typeof txt !== 'string' && (typeof txt !== 'object' || txt === null || txt.constructor !== Array && !txt.is$JavaScriptIndexingBehavior()))
    return $.XmlUtil_encode$bailout(1, txt, maxlength, multiline, pre);
  if (typeof maxlength !== 'number')
    return $.XmlUtil_encode$bailout(1, txt, maxlength, multiline, pre);
  t1 = $.getInterceptor$JSStringJSArray(txt);
  tl = txt.length;
  t2 = pre === true;
  multiline = t2 || multiline === true;
  t3 = !multiline;
  if (t3 && maxlength > 0 && tl > maxlength) {
    j = maxlength;
    while (true) {
      if (j > 0) {
        t2 = j - 1;
        if (t2 !== (t2 | 0))
          throw $.iae(t2);
        if (t2 < 0 || t2 >= txt.length)
          throw $.ioore(t2);
        t3 = $.StringUtil_isChar(txt[t2], false, false, null, false, true);
        t2 = t3;
      } else
        t2 = false;
      if (!t2)
        break;
      --j;
    }
    return $.XmlUtil_encode($.S(t1.substring$2(txt, 0, j)) + "...", 0, multiline, pre);
  }
  out = $.StringBuffer_StringBuffer("");
  if (multiline || t2)
    for (t3 = $.getInterceptor$JSArray(out), k = 0, j = 0; j < tl; ++j) {
      if (j >= txt.length)
        throw $.ioore(j);
      cc = txt[j];
      if (typeof cc !== 'string')
        return $.XmlUtil_encode$bailout(3, txt, j, t2, tl, t3, multiline, cc, t1, out, k);
      enc = $.CTC7.operator$index$1(cc);
      if (!(enc == null)) {
        t4 = t3.add$1(out, t1.substring$2(txt, k, j));
        t4 = $.getInterceptor$JSArray(t4).add$1(t4, "&");
        t4 = $.getInterceptor$JSArray(t4).add$1(t4, enc);
        $.getInterceptor$JSArray(t4).add$1(t4, ";");
        k0 = j + 1;
        k = k0;
      } else if (multiline && cc === "\n") {
        t4 = t3.add$1(out, t1.substring$2(txt, k, j));
        $.getInterceptor$JSArray(t4).add$1(t4, "<br/>\n");
        k0 = j + 1;
        k = k0;
      } else {
        if (t2)
          t4 = cc === " " || cc === "\t";
        else
          t4 = false;
        if (t4) {
          t4 = t3.add$1(out, t1.substring$2(txt, k, j));
          $.getInterceptor$JSArray(t4).add$1(t4, "&nbsp;");
          if (cc === "\t")
            t3.add$1(out, "&nbsp;&nbsp;&nbsp;");
          k = j + 1;
        }
      }
    }
  else
    for (t2 = $.getInterceptor$JSArray(out), k = 0, j = 0; j < tl; ++j) {
      if (j >= txt.length)
        throw $.ioore(j);
      enc = $.CTC7.operator$index$1(txt[j]);
      if (!(enc == null)) {
        t3 = t2.add$1(out, t1.substring$2(txt, k, j));
        t3 = $.getInterceptor$JSArray(t3).add$1(t3, "&");
        t3 = $.getInterceptor$JSArray(t3).add$1(t3, enc);
        $.getInterceptor$JSArray(t3).add$1(t3, ";");
        k0 = j + 1;
        k = k0;
      }
    }
  if (k === 0)
    return txt;
  if (k < tl)
    $.getInterceptor$JSArray(out).add$1(out, t1.substring$1(txt, k));
  return $.getInterceptor(out).toString$0(out);
};

$.Strings__toJsStringArray$bailout = function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      strings = env0;
      break;
    case 2:
      length$ = env1;
      strings = env0;
      break;
    case 3:
      length$ = env2;
      array = env1;
      strings = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      $.checkNull(strings);
      length$ = $.getInterceptor$JSStringJSArray(strings).get$length(strings);
    case 2:
      state0 = 0;
    case 3:
      var strings, length$, i, string, array;
      if (state0 === 0 && $.isJsArray(strings)) {
        for (i = 0; $.ltB(i, length$); ++i) {
          string = $.index(strings, i);
          if (!(typeof string === 'string'))
            throw $.$$throw($.ArgumentError$(string));
        }
        array = strings;
      } else
        switch (state0) {
          case 0:
            array = $.List_List(length$);
          case 3:
            state0 = 0;
            for (i = 0; $.ltB(i, length$); ++i) {
              string = $.index(strings, i);
              if (!(typeof string === 'string'))
                throw $.$$throw($.ArgumentError$(string));
              $.indexSet(array, i, string);
            }
        }
      return array;
  }
};

$.Selectors_tokenize$bailout = function(state0, source, t1, len, tokens) {
  var pclz, curr, i, i0, c, clz;
  for (pclz = 2, curr = null, i = 0; $.ltB(i, len); i = i0, pclz = clz) {
    i0 = i + 1;
    c = t1.substring$2(source, i, i0);
    clz = $.Selectors__getTokenClass(t1.charCodeAt$1(source, i));
    if (!(curr == null) && clz === pclz && clz !== 2)
      curr.extend$0();
    else {
      curr = $.Token$fromChar(c, i);
      tokens.push(curr);
    }
  }
  return tokens;
};

$.Arrays_copy$bailout = function(state0, src, srcStart, dst, dstStart, count) {
  var i, j;
  if (srcStart < dstStart)
    for (i = srcStart + count - 1, j = dstStart + count - 1; i >= srcStart; --i, --j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
  else
    for (j = dstStart, i = srcStart; i < srcStart + count; ++i, ++j) {
      if (i < 0 || i >= src.length)
        throw $.ioore(i);
      $.indexSet(dst, j, src[i]);
    }
};

$.ViewIterator__isAllIds$bailout = function(state0, list, offset) {
  var t1, t2;
  for (t1 = $.getInterceptor$JSArray(list).iterator$0(list); t1.get$hasNext() === true;) {
    t2 = t1.next$0().get$seqs();
    if ($.gtB($.getInterceptor$JSStringJSArray(t2).get$length(t2), offset))
      return false;
  }
  return true;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$.Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$("length"));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.getInterceptor$JSStringJSArray(a).get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    accumulator.push($.index(a, i));
  return accumulator;
};

$._ViewImpl_addToIdSpaceDown$bailout = function(state0, env0, env1, env2, env3, env4) {
  switch (state0) {
    case 1:
      t1 = env3;
      id = env2;
      space = env1;
      view = env0;
      break;
    case 2:
      t1 = env3;
      id = env2;
      space = env1;
      view = env0;
      break;
    case 3:
      t3 = env4;
      t2 = env3;
      t1 = env2;
      space = env1;
      t4 = env0;
      break;
  }
  switch (state0) {
    case 0:
      id = view.get$id();
      t1 = $.getInterceptor$JSStringJSArray(id).get$length(id);
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && $.gtB(t1, 0))
        switch (state0) {
          case 0:
            t1 = space.get$fellows();
          case 2:
            state0 = 0;
            $.indexSet(t1, id, view);
        }
    case 3:
      var id, t1, space, view, vs, t2, t3, t4;
      if (state0 === 3 || state0 === 0 && !(typeof view === 'object' && view !== null && !!view.is$IdSpace))
        switch (state0) {
          case 0:
            vs = view.get$_virtIS();
          case 3:
            if (state0 === 3 || state0 === 0 && !(vs == null))
              switch (state0) {
                case 0:
                  view.set$_virtIS(null);
                  t1 = vs.get$fellows().get$values();
                  t1 = $.getInterceptor$JSArray(t1).iterator$0(t1);
                case 3:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!(t1.get$hasNext() === true))
                            break L0;
                          t2 = t1.next$0();
                          t3 = t2.get$id();
                          t4 = space.get$fellows();
                        case 3:
                          state0 = 0;
                          $.indexSet(t4, t3, t2);
                      }
              }
            else
              for (view = view.get$firstChild(); !(view == null); view = view.get$nextSibling())
                $._ViewImpl_addToIdSpaceDown(view, space);
        }
  }
};

$._ViewImpl_removeFromIdSpaceDown$bailout = function(state0, view, space, id, t1) {
  if ($.gtB(t1, 0))
    space.get$fellows().remove$1(id);
  if (!(typeof view === 'object' && view !== null && !!view.is$IdSpace))
    for (view = view.get$firstChild(); !(view == null); view = view.get$nextSibling())
      $._ViewImpl_removeFromIdSpaceDown(view, space);
};

$.StringUtil_addCharCodes$bailout = function(state0, src, diff) {
  var j, dst;
  j = src.length;
  dst = $.List_List(j);
  $.setRuntimeTypeInfo(dst, []);
  for (; --j, j >= 0;)
    dst[j] = $.add($.CTC.charCodeAt$1(src, j), diff);
  return $.String_String$fromCharCodes(dst);
};

$.StringUtil_encodeId$bailout = function(state0, v, prefix) {
  var sb, t1, v2;
  sb = $.StringBuffer_StringBuffer("");
  if (!(prefix == null))
    $.getInterceptor$JSArray(sb).add$1(sb, prefix);
  t1 = $.getInterceptor$JSArray(sb);
  do {
    v2 = $.mod(v, 37);
    if ($.leB(v2, 9))
      t1.add$1(sb, $.StringUtil_addCharCodes("0", v2));
    else
      t1.add$1(sb, $.eqB(v2, 36) ? "_" : $.StringUtil_addCharCodes("a", $.sub(v2, 10)));
  } while (v = $.tdiv(v, 37), $.geB(v, 1));
  return $.getInterceptor(sb).toString$0(sb);
};

$.XmlUtil_encode$bailout = function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9) {
  switch (state0) {
    case 1:
      pre = env3;
      multiline = env2;
      maxlength = env1;
      txt = env0;
      break;
    case 2:
      tl = env5;
      t1 = env4;
      pre = env3;
      multiline = env2;
      maxlength = env1;
      txt = env0;
      break;
    case 3:
      k = env9;
      out = env8;
      t1 = env7;
      cc = env6;
      multiline = env5;
      t3 = env4;
      tl = env3;
      t2 = env2;
      j = env1;
      txt = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (txt == null)
        return;
      t1 = $.getInterceptor$JSStringJSArray(txt);
      tl = t1.get$length(txt);
    case 2:
      state0 = 0;
      t2 = pre === true;
      multiline = t2 || multiline === true;
      t3 = !multiline;
      if (t3 && $.gtB(maxlength, 0) && $.gtB(tl, maxlength)) {
        j = maxlength;
        while (true) {
          if (!($.gtB(j, 0) && $.StringUtil_isChar($.index(txt, $.sub(j, 1)), false, false, null, false, true)))
            break;
          j = $.sub(j, 1);
        }
        return $.XmlUtil_encode($.S(t1.substring$2(txt, 0, j)) + "...", 0, multiline, pre);
      }
      out = $.StringBuffer_StringBuffer("");
    case 3:
      var pre, multiline, maxlength, txt, t1, tl, t2, t3, j, out, k, cc, enc, t4, k0;
      if (state0 === 3 || state0 === 0 && (multiline || t2))
        switch (state0) {
          case 0:
            t3 = $.getInterceptor$JSArray(out);
            k = 0;
            j = 0;
          case 3:
            L0:
              while (true)
                switch (state0) {
                  case 0:
                    if (!$.ltB(j, tl))
                      break L0;
                    cc = $.index(txt, j);
                  case 3:
                    state0 = 0;
                    enc = $.CTC7.operator$index$1(cc);
                    if (!(enc == null)) {
                      t4 = t3.add$1(out, t1.substring$2(txt, k, j));
                      t4 = $.getInterceptor$JSArray(t4).add$1(t4, "&");
                      t4 = $.getInterceptor$JSArray(t4).add$1(t4, enc);
                      $.getInterceptor$JSArray(t4).add$1(t4, ";");
                      k0 = j + 1;
                      k = k0;
                    } else if (multiline && $.eqB(cc, "\n")) {
                      t4 = t3.add$1(out, t1.substring$2(txt, k, j));
                      $.getInterceptor$JSArray(t4).add$1(t4, "<br/>\n");
                      k0 = j + 1;
                      k = k0;
                    } else {
                      if (t2)
                        t4 = $.eqB(cc, " ") || $.eqB(cc, "\t");
                      else
                        t4 = false;
                      if (t4) {
                        t4 = t3.add$1(out, t1.substring$2(txt, k, j));
                        $.getInterceptor$JSArray(t4).add$1(t4, "&nbsp;");
                        if ($.eqB(cc, "\t"))
                          t3.add$1(out, "&nbsp;&nbsp;&nbsp;");
                        k = j + 1;
                      }
                    }
                    ++j;
                }
        }
      else
        for (t2 = $.getInterceptor$JSArray(out), k = 0, j = 0; $.ltB(j, tl); ++j) {
          enc = $.CTC7.operator$index$1($.index(txt, j));
          if (!(enc == null)) {
            t3 = t2.add$1(out, t1.substring$2(txt, k, j));
            t3 = $.getInterceptor$JSArray(t3).add$1(t3, "&");
            t3 = $.getInterceptor$JSArray(t3).add$1(t3, enc);
            $.getInterceptor$JSArray(t3).add$1(t3, ";");
            k0 = j + 1;
            k = k0;
          }
        }
      if (k === 0)
        return txt;
      if ($.ltB(k, tl))
        $.getInterceptor$JSArray(out).add$1(out, t1.substring$1(txt, k));
      return $.getInterceptor(out).toString$0(out);
  }
};

$.joinArguments$bailout = function(state0, types, startIndex) {
  var buffer, t1, index, firstArgument;
  buffer = $.StringBuffer_StringBuffer("");
  for (t1 = $.getInterceptor$JSArray(buffer), index = startIndex, firstArgument = true; $.ltB(index, $.getInterceptor$JSStringJSArray(types).get$length(types)); ++index) {
    if (firstArgument)
      firstArgument = false;
    else
      t1.add$1(buffer, ", ");
    t1.add$1(buffer, $.runtimeTypeToString($.index(types, index)));
  }
  return $.getInterceptor(buffer).toString$0(buffer);
};

$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
Isolate.$finishClasses($$);
$$ = {};
$.CTC3 = new Isolate.$isolateProperties.JSInt();
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC21 = Isolate.makeConstantList([]);
$.CTC = new Isolate.$isolateProperties.JSString();
$.CTC23 = Isolate.makeConstantList([2, 0]);
$.CTC24 = Isolate.makeConstantList([1, 0]);
$.CTC25 = Isolate.makeConstantList([0, 2]);
$.CTC5 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CTC21);
$.CTC26 = Isolate.makeConstantList([2, 4]);
$.CTC27 = Isolate.makeConstantList([1, 4]);
$.CTC28 = Isolate.makeConstantList([4, 2]);
$.CTC29 = Isolate.makeConstantList([3, 3]);
$.CTC30 = Isolate.makeConstantList([0, 1]);
$.CTC31 = Isolate.makeConstantList([3, 1]);
$.CTC13 = new Isolate.$isolateProperties.AmountType("ratio");
$.CTC32 = Isolate.makeConstantList([4, 1]);
$.CTC33 = Isolate.makeConstantList([3, 2]);
$.CTC12 = new Isolate.$isolateProperties.AmountType("flex");
$.CTC34 = Isolate.makeConstantList([3, 0]);
$.CTC35 = Isolate.makeConstantList([1, 1]);
$.CTC36 = Isolate.makeConstantList([3, 4]);
$.CTC37 = Isolate.makeConstantList([1, 3]);
$.CTC38 = Isolate.makeConstantList([0, 3]);
$.CTC39 = Isolate.makeConstantList(["<", ">", "&", "\""]);
$.CTC7 = new Isolate.$isolateProperties.ConstantMap(4, {"<": "lt", ">": "gt", "&": "amp", "\"": "quot"}, Isolate.$isolateProperties.CTC39);
$.CTC15 = new Isolate.$isolateProperties.AmountType("none");
$.CTC40 = Isolate.makeConstantList([2, 3]);
$.CTC11 = new Isolate.$isolateProperties.AmountType("fixed");
$.CTC41 = Isolate.makeConstantList([2, 1]);
$.CTC1 = new Isolate.$isolateProperties.NullThrownError();
$.CTC42 = Isolate.makeConstantList(["north start", "north center", "north end", "south start", "south center", "south end", "west start", "west center", "west end", "east start", "east center", "east end", "top left", "top center", "top right", "center left", "center center", "center right", "bottom left", "bottom center", "bottom right"]);
$.CTC43 = Isolate.makeConstantList([4, 3]);
$.CTC44 = Isolate.makeConstantList([1, 2]);
$.CTC45 = Isolate.makeConstantList([2, 2]);
$.CTC18 = new Isolate.$isolateProperties.ConstantMap(21, {"north start": Isolate.$isolateProperties.CTC24, "north center": Isolate.$isolateProperties.CTC23, "north end": Isolate.$isolateProperties.CTC34, "south start": Isolate.$isolateProperties.CTC27, "south center": Isolate.$isolateProperties.CTC26, "south end": Isolate.$isolateProperties.CTC36, "west start": Isolate.$isolateProperties.CTC30, "west center": Isolate.$isolateProperties.CTC25, "west end": Isolate.$isolateProperties.CTC38, "east start": Isolate.$isolateProperties.CTC32, "east center": Isolate.$isolateProperties.CTC28, "east end": Isolate.$isolateProperties.CTC43, "top left": Isolate.$isolateProperties.CTC35, "top center": Isolate.$isolateProperties.CTC41, "top right": Isolate.$isolateProperties.CTC31, "center left": Isolate.$isolateProperties.CTC44, "center center": Isolate.$isolateProperties.CTC45, "center right": Isolate.$isolateProperties.CTC33, "bottom left": Isolate.$isolateProperties.CTC37, "bottom center": Isolate.$isolateProperties.CTC40, "bottom right": Isolate.$isolateProperties.CTC29}, Isolate.$isolateProperties.CTC42);
$.CTC20 = new Isolate.$isolateProperties.JSDouble();
$.CTC19 = new Isolate.$isolateProperties._AnchorOfRoot();
$.CTC14 = new Isolate.$isolateProperties.AmountType("content");
$.CTC16 = new Isolate.$isolateProperties.AmountType("ignore");
$.CTC17 = new Isolate.$isolateProperties._AnchorOfPoint();
$.CTC10 = Isolate.makeConstantList(["abort", "click", "dblclick", "drag", "dragEnd", "dragEnter", "dragLeave", "dragOver", "dragStart", "drop", "error", "keyDown", "keyPress", "keyUp", "load", "mouseDown", "mouseMove", "mouseOut", "mouseOver", "mouseUp", "mouseWheel", "reset", "scroll", "select", "submit", "unload"]);
$.CTC8 = Isolate.makeConstantList(["focus", "blur"]);
$.CTC4 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC46 = Isolate.makeConstantList(["body", "head", "caption", "td", "colgroup", "col", "tr", "tbody", "tfoot", "thead", "track"]);
$.CTC6 = new Isolate.$isolateProperties.ConstantMap(11, {body: "html", head: "html", caption: "table", td: "tr", colgroup: "table", col: "colgroup", tr: "tbody", tbody: "table", tfoot: "table", thead: "table", track: "audio"}, Isolate.$isolateProperties.CTC46);
$.CTC22 = new Isolate.$isolateProperties.Object();
$.CTC9 = Isolate.makeConstantList(["input", "textarea", "select", "button", "a"]);
$.CTC0 = new Isolate.$isolateProperties.JSArray();
$.CTC2 = new Isolate.$isolateProperties.JSNumber();
$._$rootClasses = null;
$.Token_TYPE_OPEN_PAREN = 21;
$.View__mntCnt = 0;
$.EMPTY_LIST = Isolate.$isolateProperties.CTC21;
$._JsonParser_BACKSPACE = 8;
$._JsonParser_TAB = 9;
$._JsonParser_NEW_LINE = 10;
$._JsonParser_FORM_FEED = 12;
$._JsonParser_CARRIAGE_RETURN = 13;
$._JsonParser_SPACE = 32;
$._JsonParser_QUOTE = 34;
$._JsonParser_PLUS = 43;
$._JsonParser_COMMA = 44;
$._JsonParser_MINUS = 45;
$._JsonParser_DOT = 46;
$._JsonParser_SLASH = 47;
$._JsonParser_CHAR_0 = 48;
$._JsonParser_CHAR_1 = 49;
$._JsonParser_CHAR_2 = 50;
$._JsonParser_CHAR_3 = 51;
$._JsonParser_CHAR_4 = 52;
$._JsonParser_CHAR_5 = 53;
$._JsonParser_CHAR_6 = 54;
$._JsonParser_CHAR_7 = 55;
$._JsonParser_CHAR_8 = 56;
$.SimpleSelectorSequence_COMB_DESCENDANT = 0;
$._JsonParser_CHAR_9 = 57;
$.SimpleSelectorSequence_COMB_CHILD = 1;
$._JsonParser_COLON = 58;
$.SimpleSelectorSequence_COMB_ADJACENT_SIBLING = 2;
$._JsonParser_CHAR_CAPITAL_E = 69;
$.SimpleSelectorSequence_COMB_GENERAL_SIBLING = 3;
$._JsonParser_LBRACKET = 91;
$._DateImpl__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$._JsonParser_BACKSLASH = 92;
$._JsonParser_RBRACKET = 93;
$._JsonParser_CHAR_B = 98;
$._JsonParser_CHAR_E = 101;
$._JsonParser_CHAR_F = 102;
$._anchorOfRoot = Isolate.$isolateProperties.CTC19;
$._JsonParser_CHAR_N = 110;
$._JsonParser_CHAR_R = 114;
$._JsonParser_CHAR_T = 116;
$._JsonParser_CHAR_U = 117;
$._JsonParser_LBRACE = 123;
$._locators = Isolate.$isolateProperties.CTC18;
$._JsonParser_RBRACE = 125;
$._JsonParser_STRING_LITERAL = 34;
$._JsonParser_NUMBER_LITERAL = 45;
$._JsonParser_NULL_LITERAL = 110;
$.MIRROR_OPT_IN_MESSAGE = "\nThis program is using an experimental feature called \"mirrors\".  As\ncurrently implemented, mirrors do not work with minification, and will\ncause spurious errors depending on how code was optimized.\n\nThe authors of this program are aware of these problems and have\ndecided the thrill of using an experimental feature is outweighing the\nrisks.  Furthermore, the authors of this program understand that\nlong-term, to fix the problems mentioned above, mirrors may have\nnegative impact on size and performance of Dart programs compiled to\nJavaScript.\n";
$._JsonParser_FALSE_LITERAL = 102;
$._JsonParser_TRUE_LITERAL = 116;
$._anchorOfPoint = Isolate.$isolateProperties.CTC17;
$._JsonParser_WHITESPACE = 32;
$._JsonParser_LAST_ASCII = 125;
$._getTypeNameOf = null;
$._JsonParser_NULL_STRING = "null";
$._JsonParser_TRUE_STRING = "true";
$._JsonParser_FALSE_STRING = "false";
$._JsonParser_tokens = null;
$._ViewImpl__inited = false;
$.AmountType_NONE = Isolate.$isolateProperties.CTC15;
$.AmountType_FIXED = Isolate.$isolateProperties.CTC11;
$.AmountType_FLEX = Isolate.$isolateProperties.CTC12;
$.AmountType_RATIO = Isolate.$isolateProperties.CTC13;
$.AmountType_CONTENT = Isolate.$isolateProperties.CTC14;
$.AmountType_IGNORE = Isolate.$isolateProperties.CTC16;
$.Selectors_STATE_PRE_SLCT = 1;
$.Selectors_STATE_IN_SLCT = 9;
$.Selectors_STATE_POST_SLCT = 14;
$.Selectors_STATE_POST_COMB = 2;
$.Selectors_STATE_PRE_COMB = 3;
$.Selectors_STATE_POST_SEPR = 17;
$.Selectors_STATE_IN_ID = 5;
$.Selectors_STATE_IN_CLASS = 6;
$.Selectors_STATE_IN_PSDOCLS = 7;
$.Selectors_STATE_PRE_PSDOCLS_PARAM = 8;
$.Selectors_STATE_IN_PSDOCLS_PARAM = 15;
$.Selectors_STATE_POST_PSDOCLS_PARAM = 16;
$.Selectors_STATE_PRE_ATTR_NAME = 10;
$.ViewUtil__appId = null;
$.ViewUtil__APP_COUNT = "data-rkAppCount";
$.Selectors_TOKEN_CLASS_LITERAL = 0;
$.Selectors_TOKEN_CLASS_WHITESPACE = 1;
$.Selectors_TOKEN_CLASS_OTHER = 2;
$.Token_TYPE_IDENTIFIER = 1;
$.Token_TYPE_UNIVERSAL = 2;
$.Token_TYPE_WHITESPACE = 3;
$.Token_TYPE_SELECTOR_SEPARATOR = 5;
$.Token_TYPE_CBN_CHILD = 7;
$.Token_TYPE_CBN_ADJACENT_SIBLING = 8;
$.Token_TYPE_CBN_GENERAL_SIBLING = 9;
$.Token_TYPE_NTN_ID = 10;
$.Token_TYPE_NTN_CLASS = 11;
$.XmlUtil__encs = Isolate.$isolateProperties.CTC7;
$.Token_TYPE_NTN_PSDOCLS = 12;
$.Token_TYPE_OP_EQUAL = 13;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC4;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.Token_TYPE_SINGLE_QUOTE = 17;
$.View__uuidNext = 0;
$.Token_TYPE_DOUBLE_QUOTE = 18;
$.Token_TYPE_OPEN_BRACKET = 19;
$.Primitives_hashCodeSeed = 0;
$.Token_TYPE_CLOSE_BRACKET = 20;
$.Token_TYPE_CLOSE_PAREN = 22;
$._noBubEvts = Isolate.$isolateProperties.CTC8;
$.Token_TYPE_UNKNOWN_CHAR = -1;
$.Primitives_mirrorsEnabled = false;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._domEvtDisps = null;
$._cachedBrowserPrefix = null;
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == 'number') return $.JSNumber.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == 'string') return $.JSString.prototype;
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  if (typeof receiver == 'number' && Math.floor(receiver) == receiver) return $.JSInt.prototype;
  if (typeof receiver == 'number') return $.JSDouble.prototype;
  if (receiver == null) return $.JSNull.prototype;
  if (typeof receiver == 'function') return $.JSFunction.prototype;
  if (typeof receiver == 'boolean') return $.JSBool.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver != null && receiver.constructor == Array) return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, '_CC_9', '_CC_9', 'get$_CC_9', function() {
  return $.add($.get$_CC_0(), 9);
});
Isolate.$lazy($, '_CC_A', '_CC_A', 'get$_CC_A', function() {
  return $.CTC.charCodeAt$1("A", 0);
});
Isolate.$lazy($, '_CC_Z', '_CC_Z', 'get$_CC_Z', function() {
  return $.add($.get$_CC_A(), 25);
});
Isolate.$lazy($, '_CC_a', '_CC_a', 'get$_CC_a', function() {
  return $.CTC.charCodeAt$1("a", 0);
});
Isolate.$lazy($, '_CC_z', '_CC_z', 'get$_CC_z', function() {
  return $.add($.get$_CC_a(), 25);
});
Isolate.$lazy($, '_CC_0', '_CC_0', 'get$_CC_0', function() {
  return $.CTC.charCodeAt$1("0", 0);
});
Isolate.$lazy($, '_rios', 'Browser__rios', 'get$Browser__rios', function() {
  return $.RegExp_RegExp("os[ /]([\\w_]+) like mac os", false, false);
});
Isolate.$lazy($, '_anchorYLocators', '_anchorYLocators', 'get$_anchorYLocators', function() {
  return [new $.anon(), new $.anon0(), new $.anon1(), new $.anon2(), new $.anon3()];
});
Isolate.$lazy($, '_reNum', '_reNum', 'get$_reNum', function() {
  return $.RegExp_RegExp("([-]?[0-9]+)", false, false);
});
Isolate.$lazy($, 'dialogInfos', 'dialogInfos', 'get$dialogInfos', function() {
  return $.Map_Map();
});
Isolate.$lazy($, 'broadcaster', 'broadcaster', 'get$broadcaster', function() {
  return $._Broadcaster$();
});
Isolate.$lazy($, 'viewConfig', 'viewConfig', 'get$viewConfig', function() {
  return $.ViewConfig$();
});
Isolate.$lazy($, '_reNum', 'Css__reNum', 'get$Css__reNum', function() {
  return $.RegExp_RegExp("([-]?[0-9]+)", false, false);
});
Isolate.$lazy($, '_views', 'ViewUtil__views', 'get$ViewUtil__views', function() {
  return $.Map_Map();
});
Isolate.$lazy($, 'layoutManager', 'layoutManager', 'get$layoutManager', function() {
  return $.LayoutManager$();
});
Isolate.$lazy($, '_SPACING', '_SPACING', 'get$_SPACING', function() {
  return $.get$browser().get$touch() === true ? 8 : 4;
});
Isolate.$lazy($, '_afters', 'View__afters', 'get$View__afters', function() {
  return [];
});
Isolate.$lazy($, 'rootViews', 'rootViews', 'get$rootViews', function() {
  var t1 = $.List_List(null);
  $.setRuntimeTypeInfo(t1, []);
  return t1;
});
Isolate.$lazy($, 'browser', 'browser', 'get$browser', function() {
  return $.Browser$();
});
Isolate.$lazy($, '_onTouchStart', '_ViewImpl__onTouchStart', 'get$_ViewImpl__onTouchStart', function() {
  return new $.anon9();
});
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", false, false);
});
Isolate.$lazy($, '_START_TAG_REGEXP', '_START_TAG_REGEXP', 'get$_START_TAG_REGEXP', function() {
  return $.RegExp_RegExp("<(\\w+)", false, false);
});
Isolate.$lazy($, '_anchorXLocators', '_anchorXLocators', 'get$_anchorXLocators', function() {
  return [new $.anon4(), new $.anon5(), new $.anon6(), new $.anon7(), new $.anon8()];
});
Isolate.$lazy($, '_inpTags', '_inpTags', 'get$_inpTags', function() {
  return $.Set_Set$from($.CTC9);
});
Isolate.$lazy($, '_rchrome', 'Browser__rchrome', 'get$Browser__rchrome', function() {
  return $.RegExp_RegExp("(chrome)[ /]([\\w.]+)", false, false);
});
Isolate.$lazy($, '_rmsie', 'Browser__rmsie', 'get$Browser__rmsie', function() {
  return $.RegExp_RegExp("(msie) ([\\w.]+)", false, false);
});
Isolate.$lazy($, '_rmozilla', 'Browser__rmozilla', 'get$Browser__rmozilla', function() {
  return $.RegExp_RegExp("(mozilla)(?:.*? rv:([\\w.]+))?", false, false);
});
Isolate.$lazy($, '_ropera', 'Browser__ropera', 'get$Browser__ropera', function() {
  return $.RegExp_RegExp("(opera)(?:.*version)?[ /]([\\w.]+)", false, false);
});
Isolate.$lazy($, '_rwebkit', 'Browser__rwebkit', 'get$Browser__rwebkit', function() {
  return $.RegExp_RegExp("(webkit)[ /]([\\w.]+)", false, false);
});
Isolate.$lazy($, '_rsafari', 'Browser__rsafari', 'get$Browser__rsafari', function() {
  return $.RegExp_RegExp("(safari)[ /]([\\w.]+)", false, false);
});
Isolate.$lazy($, '_randroid', 'Browser__randroid', 'get$Browser__randroid', function() {
  return $.RegExp_RegExp("android[ /]([\\w.]+)", false, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {        if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$MouseEvent: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$Location: function() { return false; },
 is$KeyboardEvent: function() { return false; },
 is$List: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$Collection: function() { return false; },
 is$UIEvent: function() { return false; },
 is$Document: function() { return false; },
 is$Map: function() { return false; },
 is$Text: function() { return false; },
 is$Element: function() { return false; },
 is$Node: function() { return false; },
 is$InputElement: function() { return false; }
});

$.$defineNativeClass('HTMLAnchorElement', {"":"name=,target=,type=",
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLAppletElement', {"":"align?,height=,name=,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {"":"target=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Attr', {"":"name?,value="
});

$.$defineNativeClass('HTMLBRElement', {"":"clear?",
 clear$0: function() {
  return this.clear.call$0();
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLBaseElement', {"":"target=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {"":"size?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"":"name=,type=,value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLCanvasElement', {"":"height=,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('CharacterData', {"":"length?",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('HTMLContentElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('CSSFontFaceRule', {"":"style?"
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"":"style?"
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"":"name="
});

$.$defineNativeClass('CSSPageRule', {"":"style?"
});

$.$defineNativeClass('CSSRule', {"":"cssText!,type?"
});

$.$defineNativeClass('CSSStyleDeclaration', {"":"cssText!,length?",
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : "";
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 setProperty$2: function(propertyName, value) {
  return this.setProperty$3(propertyName, value, null);
},
 get$borderBottomWidth: function() {
  return this.getPropertyValue$1("border-bottom-width");
},
 get$borderLeftWidth: function() {
  return this.getPropertyValue$1("border-left-width");
},
 get$borderRightWidth: function() {
  return this.getPropertyValue$1("border-right-width");
},
 get$borderTopWidth: function() {
  return this.getPropertyValue$1("border-top-width");
},
 get$bottom: function() {
  return this.getPropertyValue$1("bottom");
},
 get$clear: function() {
  return this.getPropertyValue$1("clear");
},
 clear$0: function() {
  return this.get$clear().call$0();
},
 get$display: function() {
  return this.getPropertyValue$1("display");
},
 set$display: function(value) {
  this.setProperty$3("display", value, "");
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "filter");
},
 filter$1: function(arg0) {
  return this.get$filter().call$1(arg0);
},
 get$height: function() {
  return this.getPropertyValue$1("height");
},
 set$height: function(value) {
  this.setProperty$3("height", value, "");
},
 get$left: function() {
  return this.getPropertyValue$1("left");
},
 set$left: function(value) {
  this.setProperty$3("left", value, "");
},
 get$margin: function() {
  return this.getPropertyValue$1("margin");
},
 get$maxHeight: function() {
  return this.getPropertyValue$1("max-height");
},
 get$maxWidth: function() {
  return this.getPropertyValue$1("max-width");
},
 get$minHeight: function() {
  return this.getPropertyValue$1("min-height");
},
 get$minWidth: function() {
  return this.getPropertyValue$1("min-width");
},
 get$position: function() {
  return this.getPropertyValue$1("position");
},
 set$position: function(value) {
  this.setProperty$3("position", value, "");
},
 get$resize: function() {
  return this.getPropertyValue$1("resize");
},
 get$right: function() {
  return this.getPropertyValue$1("right");
},
 get$size: function() {
  return this.getPropertyValue$1("size");
},
 get$top: function() {
  return this.getPropertyValue$1("top");
},
 set$top: function(value) {
  this.setProperty$3("top", value, "");
},
 get$transform: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + "transform");
},
 get$visibility: function() {
  return this.getPropertyValue$1("visibility");
},
 set$visibility: function(value) {
  this.setProperty$3("visibility", value, "");
},
 get$whiteSpace: function() {
  return this.getPropertyValue$1("white-space");
},
 set$whiteSpace: function(value) {
  this.setProperty$3("white-space", value, "");
},
 get$width: function() {
  return this.getPropertyValue$1("width");
},
 set$width: function(value) {
  this.setProperty$3("width", value, "");
},
 get$zIndex: function() {
  return this.getPropertyValue$1("z-index");
}
});

$.$defineNativeClass('CSSStyleRule', {"":"style?"
});

$.$defineNativeClass('HTMLDListElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLDataListElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLDetailsElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLDirectoryElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLDivElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Document', {
 get$$$dom_body: function() { return this.body; },
 get$$$dom_title: function() { return this.title; },
 set$$$dom_title: function(v) { this.title = v; },
 get$on: function() {
  return $.DocumentEvents$(this);
},
 $dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", false, false).hasMatch$1(selectors) === true)
    return this.$dom_getElementById$1($.getInterceptor$JSString(selectors).substring$1(selectors, 1));
  return this.$dom_querySelector$1(selectors);
},
 is$Document: function() { return true; }
});

$.$defineNativeClass('DocumentFragment', {
 get$children: function() {
  if (this._children == null)
    this._children = $.FilteredElementList$(this);
  return this._children;
},
 set$children: function(value) {
  var copy, children, t1;
  copy = $.List_List$from(value);
  $.setRuntimeTypeInfo(copy, []);
  children = this.get$children();
  t1 = $.getInterceptor$JSArray(children);
  t1.clear$0(children);
  t1.addAll$1(children, copy);
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 set$innerHtml: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHtml')) {
    var t1, e, nodes;
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).clear$0(t1);
    e = $.Element_Element$tag("div");
    e.set$innerHtml(value);
    nodes = $.List_List$from(e.get$nodes());
    $.setRuntimeTypeInfo(nodes, []);
    t1 = this.get$nodes();
    $.getInterceptor$JSArray(t1).addAll$1(t1, nodes);
  } else {
    return Object.prototype.set$innerHtml.call(this, value);
  }
},
 get$id: function() {
  return "";
},
 get$title: function() {
  return "";
},
 get$tagName: function() {
  return "";
},
 get$offsetParent: function() {
  return;
},
 get$parent: function() {
  return;
},
 get$classes: function() {
  return $._FrozenCssClassSet$();
},
 get$dataAttributes: function() {
  return $.CTC5;
},
 get$style: function() {
  return $.Element_Element$tag("div").get$style();
},
 blur$0: function() {
},
 focus$0: function() {
},
 set$id: function(value) {
  throw $.$$throw($.UnsupportedError$("ID can't be set for document fragments."));
},
 set$title: function(value) {
  throw $.$$throw($.UnsupportedError$("Title can't be set for document fragments."));
},
 get$on: function() {
  return $.ElementEvents$(this);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
}
});

$.$defineNativeClass('DocumentType', {"":"name?",
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DOMError', {"":"name?"
});

$.$defineNativeClass('DOMException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Element', {"":"id=,title=,clientHeight?,clientWidth?,offsetHeight?,offsetLeft?,offsetParent?,offsetTop?,offsetWidth?,scrollLeft?,scrollTop?,style?,tagName?",
 get$$$dom_children: function() { return this.children; },
 set$innerHtml: function(v) { this.innerHTML = v; },
 get$$$dom_className: function() { return this.className; },
 set$$$dom_className: function(v) { this.className = v; },
 get$$$dom_firstElementChild: function() { return this.firstElementChild; },
 get$$$dom_lastElementChild: function() { return this.lastElementChild; },
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 get$children: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$children')) {
    return $._ChildrenElementList$_wrap(this);
  } else {
    return Object.prototype.get$children.call(this);
  }
},
 set$children: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$children')) {
    var copy, children, t1;
    copy = $.List_List$from(value);
    $.setRuntimeTypeInfo(copy, []);
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, copy);
  } else {
    return Object.prototype.set$children.call(this, value);
  }
},
 query$1: function(selectors) {
  return this.$dom_querySelector$1(selectors);
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
    return $._ElementCssClassSet$(this);
  } else {
    return Object.prototype.get$classes.call(this);
  }
},
 get$dataAttributes: function() {
  return $._DataAttributeMap$(this.get$attributes());
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.ElementEvents$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 blur$0: function() {
  return this.blur();
},
 focus$0: function() {
  return this.focus();
},
 $dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 $dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"":"align?,height=,name=,type=,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Event', {"":"type?",
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.target);
}
});

$.$defineNativeClass('EventException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventTarget', {
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
    return $.Events$(this);
  } else {
    return Object.prototype.get$on.call(this);
  }
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_addEventListener$3')) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$dom_addEventListener$3.call(this, type, listener, useCapture);
  }
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$dom_removeEventListener$3')) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  } else {
    return Object.prototype.$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
}
});

$.$defineNativeClass('HTMLFieldSetElement', {"":"name=,type?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('FileException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLFontElement', {"":"size?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLFormElement', {"":"length?,name=,target=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"":"height?,location=,name=,width?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLHRElement', {"":"align?,size?,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLHeadElement', {"":"profile?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {"":"align?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {
 get$length: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$length')) {
    return this.length;
  } else {
    return Object.prototype.get$length.call(this);
  }
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, $.Node);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 set$length: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$length')) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  } else {
    return Object.prototype.set$length.call(this, value);
  }
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {
 get$body: function() {
  return $.document().get$$$dom_body();
},
 get$title: function() {
  return $.document().get$$$dom_title();
},
 set$title: function(value) {
  $.document().set$$$dom_title(value);
}
});

$.$defineNativeClass('HTMLHtmlElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"":"position?"
});

$.$defineNativeClass('HTMLIFrameElement', {"":"align?,height=,name=,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"":"align?,height=,name=,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"":"align?,checked=,height=,name=,pattern?,placeholder!,size?,type=,value=,width=",
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$InputElement: function() { return true; },
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('KeyboardEvent', {
 get$keyCode: function() {
  return this.keyCode;
},
 is$KeyboardEvent: function() { return true; }
});

$.$defineNativeClass('HTMLKeygenElement', {"":"name=,type?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"":"type=,value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {"":"align?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"":"target=,type=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Location', {
 toString$0: function() {
  return this.toString();
},
 is$Location: function() { return true; }
});

$.$defineNativeClass('DOMWindow', {"":"innerHeight?,innerWidth?,localStorage?,name=,navigator?,pageXOffset?,pageYOffset?",
 get$location: function() {
  var result = this.get$_location();
  if ($.LocalWindow__isDartLocation(result) === true)
    return result;
  if (null == this._location_wrapper)
    this._location_wrapper = $._LocationWrapper$(result);
  return this._location_wrapper;
},
 set$location: function(value) {
  if (typeof value === 'object' && value !== null && !!value.is$_LocationWrapper)
    this.set$_location(value._ptr);
  else
    this.set$_location(value);
},
 get$_location: function() {
  return this.location;
},
 set$_location: function(value) {
  this.location = value;
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 get$parent: function() {
  return $._convertNativeToDart_Window(this.parent);
},
 get$top: function() {
  return $._convertNativeToDart_Window(this.top);
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 clearTimeout$1: function(handle) {
  return this.clearTimeout(handle);
},
 $dom_getComputedStyle$2: function(element, pseudoElement) {
  return this.getComputedStyle(element,pseudoElement);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 setTimeout$2: function(handler, timeout) {
  return this.setTimeout($.convertDartClosureToJS(handler, 0),timeout);
}
});

$.$defineNativeClass('HTMLMapElement', {"":"name=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {"":"height=,width=",
 start$0: function() {
  return this.start();
},
 get$start: function() { return new $.BoundClosure(this, 'start$0'); },
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLMediaElement', {
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLMenuElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('MessageEvent', {
 get$source: function() {
  return $._convertNativeToDart_Window(this.source);
},
 source$1: function(arg0) {
  return this.get$source().call$1(arg0);
}
});

$.$defineNativeClass('HTMLMetaElement', {"":"name=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLMeterElement', {"":"value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('MouseEvent', {
 is$MouseEvent: function() { return true; }
});

$.$defineNativeClass('MutationRecord', {"":"nextSibling?,previousSibling?,target?,type?"
});

$.$defineNativeClass('NamedNodeMap', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, $.Node);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"":"userAgent?"
});

$.$defineNativeClass('Node', {
 get$$$dom_attributes: function() { return this.attributes; },
 get$$$dom_childNodes: function() { return this.childNodes; },
 get$$$dom_localName: function() { return this.localName; },
 get$$$dom_namespaceUri: function() { return this.namespaceURI; },
 get$nextNode: function() { return this.nextSibling; },
 get$parent: function() { return this.parentNode; },
 set$text: function(v) { this.textContent = v; },
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
    if (!(this.get$parent() == null))
      this.get$parent().$dom_removeChild$1(this);
  } else {
    return Object.prototype.remove$0.call(this);
  }
},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.get$parent();
    parent$.$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 $dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 insertBefore$2: function(newChild, refChild) {
  return this.insertBefore(newChild,refChild);
},
 $dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
},
 is$Node: function() { return true; }
});

$.$defineNativeClass('NodeList', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, $.Node);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOListElement', {"":"start?,type=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"":"align?,height=,name=,type=,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLOptGroupElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"":"value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLOutputElement', {"":"name=,type?,value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('OverflowEvent', {"":"orient?"
});

$.$defineNativeClass('HTMLParagraphElement', {"":"align?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"":"name=,type=,value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLPreElement', {"":"width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('ProcessingInstruction', {"":"target?"
});

$.$defineNativeClass('HTMLProgressElement', {"":"position?,value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLQuoteElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('RadioNodeList', {"":"value="
});

$.$defineNativeClass('RangeException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLScriptElement', {"":"type=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLSelectElement', {"":"length=,name=,size?,type?,value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLShadowElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {
 set$innerHtml: function(v) { this.innerHTML = v; }
});

$.$defineNativeClass('HTMLSourceElement', {"":"type=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Storage', {
 containsKey$1: function(key) {
  return !(this.$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$dom_getItem$1(key);
},
 operator$indexSet$2: function(key, value) {
  this.$dom_setItem$2(key, value);
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.$dom_getItem$1(key) == null)
    this.operator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$dom_clear$0();
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$values: function() {
  var values = [];
  this.forEach$1(new $.Storage_values_anon(values));
  return values;
},
 get$length: function() {
  return this.length;
},
 get$isEmpty: function() {
  return this.$dom_key$1(0) == null;
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 $dom_clear$0: function() {
  return this.clear();
},
 $dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $dom_key$1: function(index) {
  return this.key(index);
},
 $dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"":"key?"
});

$.$defineNativeClass('HTMLStyleElement', {"":"type=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableCaptionElement', {"":"align?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {"":"align?,height=,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {"":"align?,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {"":"align?,width=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {"":"align?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {"":"align?",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Text', {
 is$Text: function() { return true; }
});

$.$defineNativeClass('HTMLTextAreaElement', {"":"name=,placeholder!,type?,value=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTitleElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('UIEvent', {"":"pageX?,pageY?",
 get$$$dom_keyCode: function() { return this.keyCode; },
 get$view: function() {
  return $._convertNativeToDart_Window(this.view);
},
 is$UIEvent: function() { return true; }
});

$.$defineNativeClass('HTMLUListElement', {"":"type=",
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {
 get$length: function() {
  return this.length;
},
 operator$index$1: function(index) {
  return this[index];
},
 operator$indexSet$2: function(index, value) {
  this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this, '$.$int');
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
},
 contains$1: function(element) {
  return $.Collections_contains(this, element);
},
 forEach$1: function(f) {
  return $.Collections_forEach(this, f);
},
 filter$1: function(f) {
  return $.Collections_filter(this, [], f);
},
 get$filter: function() { return new $.BoundClosure0(this, 'filter$1'); },
 get$isEmpty: function() {
  return $.eq($.getInterceptor$JSStringJSArray(this).get$length(this), 0);
},
 isEmpty$1: function(arg0) {
  return this.get$isEmpty().call$1(arg0);
},
 set$length: function(value) {
  throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
},
 get$clear: function() { return new $.BoundClosure(this, 'clear$0'); },
 indexOf$2: function(element, start) {
  return $.Lists_indexOf(this, element, start, $.getInterceptor$JSStringJSArray(this).get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element, 0);
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeAt$1: function(pos) {
  throw $.$$throw($.UnsupportedError$("Cannot removeAt on immutable List."));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$("Cannot removeLast on immutable List."));
},
 removeRange$2: function(start, rangeLength) {
  throw $.$$throw($.UnsupportedError$("Cannot removeRange on immutable List."));
},
 getRange$2: function(start, rangeLength) {
  return $.Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLUnknownElement', {
 is$Element: function() { return true; },
 is$Node: function() { return true; }
});

$.$defineNativeClass('HTMLVideoElement', {"":"height=,width="
});

$.$defineNativeClass('XPathException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBDatabaseException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGAElement', {"":"target?,transform?"
});

$.$defineNativeClass('SVGCircleElement', {"":"transform?"
});

$.$defineNativeClass('SVGClipPathElement', {"":"transform?"
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"":"type?"
});

$.$defineNativeClass('SVGDefsElement', {"":"transform?"
});

$.$defineNativeClass('SVGEllipseElement', {"":"transform?"
});

$.$defineNativeClass('SVGFEBlendElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"":"type?,values?,height?,width?"
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFECompositeElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEDropShadowElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEFloodElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEImageElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEMergeElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEMorphologyElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFEOffsetElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFETileElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGFETurbulenceElement', {"":"type?,height?,width?"
});

$.$defineNativeClass('SVGFilterElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGForeignObjectElement', {"":"height?,width?,transform?"
});

$.$defineNativeClass('SVGGElement', {"":"transform?"
});

$.$defineNativeClass('SVGImageElement', {"":"height?,width?,transform?"
});

$.$defineNativeClass('SVGLineElement', {"":"transform?"
});

$.$defineNativeClass('SVGMaskElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGPathElement', {"":"transform?"
});

$.$defineNativeClass('SVGPatternElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGPolygonElement', {"":"transform?"
});

$.$defineNativeClass('SVGPolylineElement', {"":"transform?"
});

$.$defineNativeClass('SVGRectElement', {"":"height?,width?,transform?"
});

$.$defineNativeClass('SVGScriptElement', {"":"type="
});

$.$defineNativeClass('SVGStyleElement', {"":"type=",
 get$title: function() {
  return this.title;
},
 set$title: function(value) {
  this.title = value;
}
});

$.$defineNativeClass('SVGElement', {
 get$classes: function() {
  if (this._cssClassSet == null)
    this._cssClassSet = $._AttributeClassSet$(this);
  return this._cssClassSet;
},
 get$children: function() {
  return $.FilteredElementList$(this);
},
 set$children: function(value) {
  var children, t1;
  children = this.get$children();
  t1 = $.getInterceptor$JSArray(children);
  t1.clear$0(children);
  t1.addAll$1(children, value);
},
 set$innerHtml: function(svg) {
  var container = $.Element_Element$tag("div");
  container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
  this.set$children($.index(container.get$children(), 0).get$children());
},
 get$$$dom_children: function() {
  throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
},
 get$id: function() {
  return this.id;
},
 set$id: function(value) {
  this.id = value;
}
});

$.$defineNativeClass('SVGException', {"":"name?",
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGSVGElement', {"":"height?,width?"
});

$.$defineNativeClass('SVGSwitchElement', {"":"transform?"
});

$.$defineNativeClass('SVGTextElement', {"":"transform?"
});

$.$defineNativeClass('SVGTextPathElement', {"":"spacing?"
});

$.$defineNativeClass('SVGUseElement', {"":"height?,width?,transform?"
});

// 157 dynamic classes.
// 245 classes
// 22 !leaf
(function() {
  var v0_ComponentTransferFunctionElement = 'SVGComponentTransferFunctionElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement|SVGFEFuncAElement', v1_MediaElement = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement', v2_SvgElement = [v0_ComponentTransferFunctionElement, 'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFEConvolveMatrixElement|SVGFECompositeElement|SVGFEDropShadowElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEFloodElement|SVGFEMergeElement|SVGFEGaussianBlurElement|SVGFEDiffuseLightingElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEMergeNodeElement|SVGFETurbulenceElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGFETileElement|SVGHKernElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGLineElement|SVGImageElement|SVGMPathElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGFilterElement|SVGMarkerElement|SVGPathElement|SVGFontFaceUriElement|SVGFEPointLightElement|SVGFEImageElement|SVGFontElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGStopElement|SVGScriptElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGVKernElement|SVGViewElement|SVGTitleElement|SVGUseElement'].join('|'), v3_Text = 'Text|CDATASection', v4_Element = [v1_MediaElement, v2_SvgElement, 'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|'), v5_CharacterData = [v3_Text, 'CharacterData|Comment'].join('|'), v6_Document = 'Document|HTMLDocument|SVGDocument', v7_DocumentFragment = 'DocumentFragment|ShadowRoot', v8_MouseEvent = 'MouseEvent|WheelEvent', v9_UIEvent = [v8_MouseEvent, 'UIEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TextEvent|TouchEvent'].join('|'), v10_Node = [v4_Element, v5_CharacterData, v6_Document, v7_DocumentFragment, 'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|');
  $.dynamicSetMetadata([['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'], ['SVGComponentTransferFunctionElement', v0_ComponentTransferFunctionElement], ['SVGElement', v2_SvgElement], ['HTMLMediaElement', v1_MediaElement], ['MouseEvent', v8_MouseEvent], ['Element', v4_Element], ['Text', v3_Text], ['CharacterData', v5_CharacterData], ['Document', v6_Document], ['DocumentFragment', v7_DocumentFragment], ['Node', v10_Node], ['NodeList', 'NodeList|RadioNodeList'], ['CSSRule', 'CSSRule|CSSCharsetRule|WebKitCSSKeyframeRule|CSSFontFaceRule|CSSMediaRule|CSSPageRule|CSSStyleRule|CSSUnknownRule|CSSImportRule|WebKitCSSKeyframesRule'], ['UIEvent', v9_UIEvent], ['Uint8Array', 'Uint8Array|Uint8ClampedArray'], ['Event', [v9_UIEvent, 'Event|IDBVersionChangeEvent|IDBVersionChangeEvent|WebKitAnimationEvent|BeforeLoadEvent|CloseEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|MediaKeyEvent|MediaStreamEvent|CustomEvent|MediaStreamTrackEvent|MessageEvent|AudioProcessingEvent|HashChangeEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'].join('|')], ['EventTarget', [v10_Node, 'EventTarget|DOMWindow'].join('|')]]);
})();


//
// BEGIN invoke [main].
//
if (typeof document != 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner == 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner == 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastChar = field[len - 1];
  var needsGetter = lastChar == '?' || lastChar == '=';
  var needsSetter = lastChar == '!' || lastChar == '=';
  if (needsGetter || needsSetter) field = field.substring(0, len - 1);
  if (needsGetter) {
    var getterString = "return this." + field + ";";
      prototype["get$" + field] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + field] = new Function("v", setterString);
    }
    return field;
  };
Isolate.$isolateProperties.$generateAccessor = generateAccessor
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== "undefined") supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var s = desc[''].split(';'), supr = s[0];
      var fields = s[1] == '' ? [] : s[1].split(',');
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=app.dart.js.map